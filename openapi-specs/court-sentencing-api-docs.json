{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "HMPPS Remand and Sentencing API",
    "description" : "Recording Remand and sentencing",
    "contact" : {
      "name" : "HMPPS Digital Studio",
      "email" : "feedback@digital.justice.gov.uk"
    },
    "version" : "2025-04-04.5678.8b9cd64"
  },
  "servers" : [ {
    "url" : "https://remand-and-sentencing-api.hmpps.service.justice.gov.uk",
    "description" : "Prod"
  }, {
    "url" : "https://remand-and-sentencing-api-preprod.hmpps.service.justice.gov.uk",
    "description" : "Preprod"
  }, {
    "url" : "https://remand-and-sentencing-api-dev.hmpps.service.justice.gov.uk",
    "description" : "Development"
  }, {
    "url" : "http://localhost:8080",
    "description" : "Local"
  } ],
  "tags" : [ {
    "name" : "legacy-court-appearance-controller",
    "description" : "CRUD operations for syncing court appearance data from NOMIS Court Events into remand and sentencing api database."
  }, {
    "name" : "legacy-court-case-controller",
    "description" : "CRUD operations for syncing court case data from NOMIS into remand and sentencing api database."
  }, {
    "name" : "sentence-type-controller",
    "description" : "Sentence Type"
  }, {
    "name" : "migration-controller",
    "description" : "Create operation for migrating court case data from NOMIS into remand and sentencing api database."
  }, {
    "name" : "charge-outcome-controller",
    "description" : "Charge outcome"
  }, {
    "name" : "legacy-sentence-controller",
    "description" : "CRUD operations for syncing sentence data from NOMIS Offender sentences into remand and sentencing api database."
  }, {
    "name" : "sentence-controller",
    "description" : "Sentences"
  }, {
    "name" : "recall-controller",
    "description" : "Recall"
  }, {
    "name" : "appearance-outcome-controller",
    "description" : "Appearance outcome"
  }, {
    "name" : "court-appearance-controller",
    "description" : "Court Appearances"
  }, {
    "name" : "person-controller",
    "description" : "Get person details"
  }, {
    "name" : "draft-court-appearance-controller",
    "description" : "Draft Court appearance"
  }, {
    "name" : "charge-controller",
    "description" : "Charges"
  }, {
    "name" : "legacy-charge-controller",
    "description" : "CRUD operations for syncing charge data from NOMIS Offender charges into remand and sentencing api database."
  }, {
    "name" : "draft-court-case-controller",
    "description" : "Draft Court case"
  }, {
    "name" : "court-case-controller",
    "description" : "Court case"
  }, {
    "name" : "appearance-type-controller",
    "description" : "Appearance Type"
  } ],
  "paths" : {
    "/recall/{recallUuid}" : {
      "get" : {
        "tags" : [ "recall-controller" ],
        "summary" : "Retrieve a recall",
        "description" : "This endpoint will retrieve the details of a recall",
        "operationId" : "getRecall",
        "parameters" : [ {
          "name" : "recallUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns recall details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Recall"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Recall"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Recall"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no recall uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Recall"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "recall-controller" ],
        "summary" : "Update a recall (or create one with the passed in details)",
        "description" : "This endpoint will update a recall (or create one with the passed in details)",
        "operationId" : "updateRecall",
        "parameters" : [ {
          "name" : "recallUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRecall"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns court case UUID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/sentence/{lifetimeUuid}" : {
      "get" : {
        "tags" : [ "legacy-sentence-controller" ],
        "summary" : "retrieve a sentence",
        "description" : "This endpoint will retrieve sentence details.",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns sentence details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentence"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentence"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentence"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "legacy-sentence-controller" ],
        "summary" : "Update a sentence",
        "description" : "Synchronise an update of sentence from NOMIS Offender sentences into remand and sentencing API.",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateSentence"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete" : {
        "tags" : [ "legacy-sentence-controller" ],
        "summary" : "Delete Sentence",
        "description" : "Synchronise a deletion of sentence from NOMIS offender charges into remand and sentencing API.",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/court-case/{courtCaseUuid}" : {
      "get" : {
        "tags" : [ "legacy-court-case-controller" ],
        "summary" : "Retrieve court case details",
        "description" : "This endpoint will retrieve court case details",
        "operationId" : "get_1",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns court case details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no court case at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "legacy-court-case-controller" ],
        "summary" : "Updates a court case",
        "description" : "Synchronise an update of court case from NOMIS into remand and sentencing API.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateCourtCase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete" : {
        "tags" : [ "legacy-court-case-controller" ],
        "summary" : "Deletes a court case",
        "description" : "Synchronise a deletion of court case from NOMIS into remand and sentencing API.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "court case deleted"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/court-appearance/{lifetimeUuid}" : {
      "get" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "Retrieve court appearance details",
        "description" : "This endpoint will retrieve court appearance details",
        "operationId" : "get_2",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns court appearance details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no court appearance at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "Updates a court appearance",
        "description" : "Synchronise an update of court appearance from NOMIS court events into remand and sentencing API.",
        "operationId" : "update_2",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateCourtAppearance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "court appearance updated"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "Delete Appearance",
        "description" : "Synchronise a deletion of court appearance from NOMIS court events into remand and sentencing API.",
        "operationId" : "delete_2",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/court-appearance/{lifetimeUuid}/charge/{chargeLifetimeUuid}" : {
      "get" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "Get latest charge at appearance",
        "description" : "This endpoint will retrieve the latest charge at a court appearance",
        "operationId" : "getChargeAtAppearance",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "chargeLifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCharge"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "link Appearance with Charge",
        "description" : "Synchronise a link between court appearance and charge from NOMIS into remand and sentencing API.",
        "operationId" : "linkAppearanceWithCharge",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "chargeLifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyUpdateCharge"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "Delete Appearance Charge link",
        "description" : "Synchronise a deletion of link between court appearance and charge from NOMIS into remand and sentencing API.",
        "operationId" : "unlinkAppearanceWithCharge",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "chargeLifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/charge/{lifetimeUuid}" : {
      "get" : {
        "tags" : [ "legacy-charge-controller" ],
        "summary" : "retrieve a charge",
        "description" : "This endpoint will retrieve charge details.",
        "operationId" : "get_3",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns charge details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCharge"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "legacy-charge-controller" ],
        "summary" : "Update a charge in all appearances",
        "description" : "Synchronise an update of charge in all appearances from NOMIS Offender charges into remand and sentencing API.",
        "operationId" : "update_3",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyUpdateWholeCharge"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete" : {
        "tags" : [ "legacy-charge-controller" ],
        "summary" : "Delete Charge",
        "description" : "Synchronise a deletion of charge from NOMIS offender charges into remand and sentencing API.",
        "operationId" : "delete_3",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/charge/{lifetimeUuid}/appearance/{appearanceLifetimeUuid}" : {
      "put" : {
        "tags" : [ "legacy-charge-controller" ],
        "summary" : "Update a charge in an appearance",
        "description" : "Synchronise an update of charge within an appearance from NOMIS Offender charges into remand and sentencing API.",
        "operationId" : "updateInAppearance",
        "parameters" : [ {
          "name" : "lifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "appearanceLifetimeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyUpdateCharge"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/draft/court-appearance/{draftUuid}" : {
      "get" : {
        "tags" : [ "draft-court-appearance-controller" ],
        "summary" : "Retrieves a draft court appearance",
        "description" : "Retrieves a draft court appearance",
        "operationId" : "get_4",
        "parameters" : [ {
          "name" : "draftUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "court appearance updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtAppearance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtAppearance"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtAppearance"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "draft-court-appearance-controller" ],
        "summary" : "Updates a draft court appearance",
        "description" : "Updates a draft court appearance for when a user wants to pause inputting a warrant and come back later",
        "operationId" : "update_4",
        "parameters" : [ {
          "name" : "draftUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DraftCreateCourtAppearance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "court appearance updated"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete" : {
        "tags" : [ "draft-court-appearance-controller" ],
        "summary" : "deletes a draft court appearance",
        "description" : "deletes a draft court appearance",
        "operationId" : "delete_4",
        "parameters" : [ {
          "name" : "draftUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "court appearance deleted"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/court-case/{courtCaseUuid}" : {
      "get" : {
        "tags" : [ "court-case-controller" ],
        "summary" : "Retrieve court case details",
        "description" : "This endpoint will retrieve court case details",
        "operationId" : "getCourtCaseDetails",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns court case details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCase"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCase"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCase"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no court case at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCase"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "court-case-controller" ],
        "summary" : "Create Court case",
        "description" : "This endpoint will create a court case",
        "operationId" : "putCourtCase",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCourtCase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Returns court case UUID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/court-case/{courtCaseUuid}/case-references/refresh" : {
      "put" : {
        "tags" : [ "court-case-controller" ],
        "summary" : "Refresh case references",
        "description" : "This endpoint will refresh case references",
        "operationId" : "refreshCaseReferences",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CourtCaseLegacyData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token"
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/court-appearance/{appearanceUuid}" : {
      "get" : {
        "tags" : [ "court-appearance-controller" ],
        "summary" : "Retrieve court appearance details",
        "description" : "This endpoint will retrieve court appearance details",
        "operationId" : "getCourtAppearanceDetails",
        "parameters" : [ {
          "name" : "appearanceUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns court appearance details",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no court appearance at uuid",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "court-appearance-controller" ],
        "summary" : "Create Court appearance",
        "description" : "This endpoint will create a court appearance in a given court case",
        "operationId" : "updateCourtAppearance",
        "parameters" : [ {
          "name" : "appearanceUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCourtAppearance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns court case UUID",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recall" : {
      "post" : {
        "tags" : [ "recall-controller" ],
        "summary" : "Create a recall",
        "description" : "This endpoint will create a recall",
        "operationId" : "createRecall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRecall"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Returns recall UUID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/sentence" : {
      "post" : {
        "tags" : [ "legacy-sentence-controller" ],
        "summary" : "Create a sentence",
        "description" : "Synchronise a creation of sentence from NOMIS Offender sentences into remand and sentencing API.",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateSentence"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "sentence created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceCreatedResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Unprocessable entity, charge must not be already sentenced",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceCreatedResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceCreatedResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-case" : {
      "post" : {
        "tags" : [ "legacy-court-case-controller" ],
        "summary" : "Create a court case",
        "description" : "Synchronise a creation of court case from NOMIS into remand and sentencing API.",
        "operationId" : "create_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateCourtCase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "court case created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCaseCreatedResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCaseCreatedResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtCaseCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-case/migration" : {
      "post" : {
        "tags" : [ "migration-controller" ],
        "summary" : "Creates a court case",
        "description" : "Migrates a court case, court appearance and charge from NOMIS into remand and sentencing API.",
        "operationId" : "create_2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MigrationCreateCourtCases"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "court case created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationCreateCourtCasesResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationCreateCourtCasesResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationCreateCourtCasesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-appearance" : {
      "post" : {
        "tags" : [ "legacy-court-appearance-controller" ],
        "summary" : "Create a court appearance",
        "description" : "Synchronise a creation of court appearance from NOMIS court events into remand and sentencing API.",
        "operationId" : "create_3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateCourtAppearance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "court appearance created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyCourtAppearanceCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/charge" : {
      "post" : {
        "tags" : [ "legacy-charge-controller" ],
        "summary" : "Create a charge",
        "description" : "Synchronise a creation of charge from NOMIS Offender charges into remand and sentencing API.",
        "operationId" : "create_4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LegacyCreateCharge"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "charge created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyChargeCreatedResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyChargeCreatedResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacyChargeCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/draft/court-case" : {
      "post" : {
        "tags" : [ "draft-court-case-controller" ],
        "summary" : "Create a draft court case",
        "description" : "Creates a draft court case for when a user wants to pause inputting a warrant and come back later",
        "operationId" : "create_5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DraftCreateCourtCase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "court case created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtCaseCreatedResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtCaseCreatedResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtCaseCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/draft/court-case/{courtCaseUuid}/appearance" : {
      "post" : {
        "tags" : [ "draft-court-case-controller" ],
        "summary" : "Create a draft court appearance in court case",
        "description" : "Creates a draft draft court appearance in court case for when a user wants to pause inputting a warrant and come back later",
        "operationId" : "createDraftAppearanceInCourtCase",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DraftCreateCourtAppearance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "draft court appearance created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftCourtAppearanceCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/court-case" : {
      "post" : {
        "tags" : [ "court-case-controller" ],
        "summary" : "Create Court case",
        "description" : "This endpoint will create a court case",
        "operationId" : "createCourtCase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCourtCase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Returns court case UUID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/court-appearance" : {
      "post" : {
        "tags" : [ "court-appearance-controller" ],
        "summary" : "Create Court appearance",
        "description" : "This endpoint will create a court appearance in a given court case",
        "operationId" : "createCourtAppearance",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCourtAppearance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Returns court case UUID",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sentence/{sentenceUuid}" : {
      "get" : {
        "tags" : [ "sentence-controller" ],
        "summary" : "Retrieve sentence details",
        "description" : "This endpoint will retrieve sentence details",
        "operationId" : "getChargeDetails",
        "parameters" : [ {
          "name" : "sentenceUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns sentence details",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sentence"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sentence"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sentence"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no charge at uuid",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sentence"
                }
              }
            }
          }
        }
      }
    },
    "/sentence-type/{sentenceTypeUuid}" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "Get Sentence type by UUID",
        "description" : "This endpoint will retrieve sentence type by UUID",
        "operationId" : "getSentenceTypeByUuid",
        "parameters" : [ {
          "name" : "sentenceTypeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns sentence",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceType"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceType"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceType"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no sentence type at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceType"
                }
              }
            }
          }
        }
      }
    },
    "/sentence-type/uuid/multiple" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "get all sentence types by uuids",
        "description" : "This endpoint will get all sentence types by uuids",
        "operationId" : "getSentenceTypesByIds",
        "parameters" : [ {
          "name" : "uuids",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns sentence types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sentence-type/search" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "Search all sentence types",
        "description" : "This endpoint will search all sentence types",
        "operationId" : "searchSentenceTypes",
        "parameters" : [ {
          "name" : "age",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "convictionDate",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "statuses",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "default" : [ "ACTIVE" ],
            "items" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "INACTIVE" ]
            }
          }
        }, {
          "name" : "offenceDate",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns sentence types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recall/person/{prisonerId}" : {
      "get" : {
        "tags" : [ "recall-controller" ],
        "summary" : "Retrieve all recalls for a person",
        "description" : "This endpoint will retrieve  all recalls for a person",
        "operationId" : "getRecallsByPrisonerId",
        "parameters" : [ {
          "name" : "prisonerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns all recalls for person",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recall"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recall"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Recall"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/{prisonerId}" : {
      "get" : {
        "tags" : [ "person-controller" ],
        "summary" : "Retrieve person details",
        "description" : "This endpoint will retrieve person details",
        "operationId" : "getPersonDetails",
        "parameters" : [ {
          "name" : "prisonerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns person details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonDetails"
                }
              }
            }
          }
        }
      }
    },
    "/person/{prisonerId}/sentenced-court-cases" : {
      "get" : {
        "tags" : [ "person-controller" ],
        "summary" : "Retrieve all sentenced court cases for prisoner",
        "description" : "This endpoint will retrieve all sentenced court cases for prisoner",
        "operationId" : "getSentencedCourtCases",
        "parameters" : [ {
          "name" : "prisonerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns sentenced court cases",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCases"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCases"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCases"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/sentence-type/summary" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "Get historic NOMIS sentence type by nomis sentence type reference",
        "description" : "Returns historic NOMIS sentence type information for the specified type in a summary format",
        "operationId" : "getLegacySentenceTypeSummary",
        "parameters" : [ {
          "name" : "nomisSentenceTypeReference",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns historic NOMIS sentence type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid OAuth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no sentence type at given NOMIS type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/sentence-type/all" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "Get all historic NOMIS sentence types",
        "description" : "Returns a set of historic NOMIS sentence type information in a detailed format",
        "operationId" : "getLegacyAllSentenceTypes",
        "responses" : {
          "200" : {
            "description" : "Returns historic NOMIS sentence type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid OAuth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no sentence type at given NOMIS type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/legacy/sentence-type/all/summary" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "Get summary of all historic NOMIS sentence types",
        "description" : "Returns a set of historic NOMIS sentence type information in a summary format",
        "operationId" : "getLegacyAllSentenceTypesSummaries",
        "responses" : {
          "200" : {
            "description" : "Returns historic NOMIS sentence type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid OAuth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no sentence type at given NOMIS type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceTypeGroupingSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/legacy/sentence-type/" : {
      "get" : {
        "tags" : [ "sentence-type-controller" ],
        "summary" : "Get historic NOMIS sentence type by nomis sentence type reference",
        "description" : "Returns historic NOMIS sentence type information for the specified type in a detailed format",
        "operationId" : "getLegacySentenceType",
        "parameters" : [ {
          "name" : "nomisSentenceTypeReference",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns historic NOMIS sentence type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid OAuth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no sentence type at given NOMIS type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LegacySentenceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-case/{courtCaseUuid}/test" : {
      "get" : {
        "tags" : [ "legacy-court-case-controller" ],
        "summary" : "Retrieve court case details for testing",
        "description" : "This endpoint will retrieve court case details for testing",
        "operationId" : "getTest",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns court case details for testing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TestCourtCase"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TestCourtCase"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TestCourtCase"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no court case at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TestCourtCase"
                }
              }
            }
          }
        }
      }
    },
    "/court-case/{courtCaseUuid}/latest-appearance" : {
      "get" : {
        "tags" : [ "court-case-controller" ],
        "summary" : "Retrieve latest court appearance of court case",
        "description" : "This endpoint will retrieve latest court appearance of court case",
        "operationId" : "getLatestAppearanceDetails",
        "parameters" : [ {
          "name" : "courtCaseUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns latest appearance details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no court case at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearance"
                }
              }
            }
          }
        }
      }
    },
    "/court-case/search" : {
      "get" : {
        "tags" : [ "court-case-controller" ],
        "summary" : "Retrieve all court cases for person (where each court case has at least one appearance in the past)",
        "description" : "This endpoint will retrieve all court cases for a person (where each court case has at least one appearance in the past - i.e. there exists a latest court appearance)",
        "operationId" : "searchCourtCases",
        "parameters" : [ {
          "name" : "prisonerId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageable",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns court cases",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCourtCase"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCourtCase"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCourtCase"
                }
              }
            }
          }
        }
      }
    },
    "/charge/{chargeUuid}" : {
      "get" : {
        "tags" : [ "charge-controller" ],
        "summary" : "Retrieve charge details",
        "description" : "This endpoint will retrieve charge details",
        "operationId" : "getChargeDetails_1",
        "parameters" : [ {
          "name" : "chargeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns charge details",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Charge"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Charge"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Charge"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no charge at uuid",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Charge"
                }
              }
            }
          }
        }
      }
    },
    "/charge-outcome/{outcomeUuid}" : {
      "get" : {
        "tags" : [ "charge-outcome-controller" ],
        "summary" : "Get charge outcome by UUID",
        "description" : "This endpoint will retrieve charge outcome by UUID",
        "operationId" : "getChargeOutcomeByUuid",
        "parameters" : [ {
          "name" : "outcomeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns charge outcome",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeOutcome"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeOutcome"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeOutcome"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no charge outcome at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChargeOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/charge-outcome/uuid/multiple" : {
      "get" : {
        "tags" : [ "charge-outcome-controller" ],
        "summary" : "get all charge outcomes by uuids",
        "description" : "This endpoint will get all charge outcomes by uuids",
        "operationId" : "getChargeOutcomesByIds",
        "parameters" : [ {
          "name" : "uuids",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns charge outcomes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charge-outcome/status" : {
      "get" : {
        "tags" : [ "charge-outcome-controller" ],
        "summary" : "Get all charge outcomes by statuses",
        "description" : "This endpoint will get all charge outcomes by statuses",
        "operationId" : "getAllChargeOutcomes",
        "parameters" : [ {
          "name" : "statuses",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "INACTIVE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns charge outcomes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appearance-type/{appearanceTypeUuid}" : {
      "get" : {
        "tags" : [ "appearance-type-controller" ],
        "summary" : "Get appearance type by uuid",
        "description" : "This endpoint will get appearance type by uuid",
        "operationId" : "getAppearanceTypeById",
        "parameters" : [ {
          "name" : "appearanceTypeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns appearance type",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceType"
                }
              }
            }
          },
          "404" : {
            "description" : "Appearance type not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceType"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceType"
                }
              }
            }
          }
        }
      }
    },
    "/appearance-type/status" : {
      "get" : {
        "tags" : [ "appearance-type-controller" ],
        "summary" : "Get all appearance types by statuses",
        "description" : "This endpoint will get all appearance types by statuses",
        "operationId" : "getAllAppearanceTypes",
        "parameters" : [ {
          "name" : "statuses",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "INACTIVE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns appearance types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppearanceType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppearanceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appearance-outcome/{outcomeUuid}" : {
      "get" : {
        "tags" : [ "appearance-outcome-controller" ],
        "summary" : "Get appearance outcome by UUID",
        "description" : "This endpoint will retrieve appearance outcome by UUID",
        "operationId" : "getAppearanceOutcomeByUuid",
        "parameters" : [ {
          "name" : "outcomeUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns appearance outcome",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found if no appearance outcome at uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/appearance-outcome/status" : {
      "get" : {
        "tags" : [ "appearance-outcome-controller" ],
        "summary" : "Get all appearance outcomes by status",
        "description" : "This endpoint will get all appearance outcomes by status",
        "operationId" : "getAllAppearanceOutcomes",
        "parameters" : [ {
          "name" : "statuses",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "INACTIVE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns appearance outcomes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CourtAppearanceOutcome"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateRecall" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "revocationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "returnToCustodyDate" : {
            "type" : "string",
            "format" : "date"
          },
          "recallTypeCode" : {
            "type" : "string",
            "enum" : [ "LR", "FTR_14", "FTR_28", "LR_HDC", "FTR_HDC_14", "FTR_HDC_28", "CUR_HDC", "IN_HDC" ]
          },
          "createdByUsername" : {
            "type" : "string"
          },
          "createdByPrison" : {
            "type" : "string"
          },
          "sentenceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        },
        "required" : [ "createdByPrison", "createdByUsername", "prisonerId", "recallTypeCode" ]
      },
      "SaveRecallResponse" : {
        "type" : "object",
        "properties" : {
          "recallUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "recallUuid" ]
      },
      "LegacyCreateFine" : {
        "type" : "object",
        "properties" : {
          "fineAmount" : {
            "type" : "number"
          }
        },
        "required" : [ "fineAmount" ]
      },
      "LegacyCreatePeriodLength" : {
        "type" : "object",
        "properties" : {
          "periodLengthId" : {
            "$ref" : "#/components/schemas/NomisPeriodLengthId"
          },
          "periodLengthUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "periodYears" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodMonths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodWeeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/PeriodLengthLegacyData"
          }
        },
        "required" : [ "legacyData", "periodLengthId" ]
      },
      "LegacyCreateSentence" : {
        "type" : "object",
        "properties" : {
          "chargeLifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeNumber" : {
            "type" : "string"
          },
          "fine" : {
            "$ref" : "#/components/schemas/LegacyCreateFine"
          },
          "consecutiveToLifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "active" : {
            "type" : "boolean"
          },
          "prisonId" : {
            "type" : "string"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/SentenceLegacyData"
          },
          "periodLengths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegacyCreatePeriodLength"
            }
          }
        },
        "required" : [ "active", "chargeLifetimeUuid", "legacyData", "periodLengths", "prisonId" ]
      },
      "NomisPeriodLengthId" : {
        "type" : "object",
        "properties" : {
          "offenderBookingId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sentenceSequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "termSequence" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "offenderBookingId", "sentenceSequence", "termSequence" ]
      },
      "PeriodLengthLegacyData" : {
        "type" : "object",
        "properties" : {
          "lifeSentence" : {
            "type" : "boolean"
          },
          "sentenceTermCode" : {
            "type" : "string"
          },
          "sentenceTermDescription" : {
            "type" : "string"
          }
        }
      },
      "SentenceLegacyData" : {
        "type" : "object",
        "properties" : {
          "sentenceCalcType" : {
            "type" : "string"
          },
          "sentenceCategory" : {
            "type" : "string"
          },
          "sentenceTypeDesc" : {
            "type" : "string"
          },
          "postedDate" : {
            "type" : "string"
          }
        },
        "required" : [ "postedDate" ]
      },
      "LegacyCreateCourtCase" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          }
        },
        "required" : [ "active", "prisonerId" ]
      },
      "CourtAppearanceLegacyData" : {
        "type" : "object",
        "properties" : {
          "postedDate" : {
            "type" : "string"
          },
          "nomisOutcomeCode" : {
            "type" : "string"
          },
          "outcomeDescription" : {
            "type" : "string"
          },
          "nextEventDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "appearanceTime" : {
            "type" : "string",
            "example" : "14:30:00"
          },
          "outcomeDispositionCode" : {
            "type" : "string"
          },
          "outcomeConvictionFlag" : {
            "type" : "boolean"
          }
        }
      },
      "LegacyCreateCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "courtCode" : {
            "type" : "string"
          },
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/CourtAppearanceLegacyData"
          },
          "appearanceTypeUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "appearanceDate", "appearanceTypeUuid", "courtCaseUuid", "courtCode", "legacyData" ]
      },
      "ChargeLegacyData" : {
        "type" : "object",
        "properties" : {
          "postedDate" : {
            "type" : "string"
          },
          "nomisOutcomeCode" : {
            "type" : "string"
          },
          "outcomeDescription" : {
            "type" : "string"
          },
          "outcomeDispositionCode" : {
            "type" : "string"
          }
        }
      },
      "LegacyUpdateCharge" : {
        "type" : "object",
        "properties" : {
          "offenceStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "offenceEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/ChargeLegacyData"
          }
        },
        "required" : [ "legacyData" ]
      },
      "LegacyUpdateWholeCharge" : {
        "type" : "object",
        "properties" : {
          "offenceCode" : {
            "type" : "string"
          }
        },
        "required" : [ "offenceCode" ]
      },
      "DraftCreateCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "sessionBlob" : {
            "$ref" : "#/components/schemas/JsonNode"
          }
        },
        "required" : [ "sessionBlob" ]
      },
      "JsonNode" : {
        "type" : "object"
      },
      "CaseReferenceLegacyData" : {
        "type" : "object",
        "properties" : {
          "offenderCaseReference" : {
            "type" : "string"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "required" : [ "offenderCaseReference", "updatedDate" ]
      },
      "CourtCaseLegacyData" : {
        "type" : "object",
        "properties" : {
          "caseReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseReferenceLegacyData"
            }
          }
        },
        "required" : [ "caseReferences" ]
      },
      "CreateCharge" : {
        "type" : "object",
        "properties" : {
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "offenceCode" : {
            "type" : "string"
          },
          "offenceStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "offenceEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "outcomeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "terrorRelated" : {
            "type" : "boolean"
          },
          "sentence" : {
            "$ref" : "#/components/schemas/CreateSentence"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/ChargeLegacyData"
          },
          "prisonId" : {
            "type" : "string"
          }
        },
        "required" : [ "offenceCode", "offenceStartDate", "prisonId" ]
      },
      "CreateCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "outcomeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "courtCode" : {
            "type" : "string"
          },
          "courtCaseReference" : {
            "type" : "string"
          },
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "warrantId" : {
            "type" : "string"
          },
          "warrantType" : {
            "type" : "string"
          },
          "taggedBail" : {
            "type" : "integer",
            "format" : "int32"
          },
          "overallSentenceLength" : {
            "$ref" : "#/components/schemas/CreatePeriodLength"
          },
          "nextCourtAppearance" : {
            "$ref" : "#/components/schemas/CreateNextCourtAppearance"
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateCharge"
            }
          },
          "overallConvictionDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/CourtAppearanceLegacyData"
          },
          "prisonId" : {
            "type" : "string"
          }
        },
        "required" : [ "appearanceDate", "charges", "courtCode", "prisonId", "warrantType" ]
      },
      "CreateCourtCase" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "prisonId" : {
            "type" : "string"
          },
          "appearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateCourtAppearance"
            }
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/CourtCaseLegacyData"
          }
        },
        "required" : [ "appearances", "prisonId", "prisonerId" ]
      },
      "CreateFineAmount" : {
        "type" : "object",
        "properties" : {
          "fineAmount" : {
            "type" : "number"
          }
        },
        "required" : [ "fineAmount" ]
      },
      "CreateNextCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "appearanceTime" : {
            "type" : "string",
            "example" : "14:30:00"
          },
          "courtCode" : {
            "type" : "string"
          },
          "appearanceTypeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "prisonId" : {
            "type" : "string"
          }
        },
        "required" : [ "appearanceDate", "appearanceTypeUuid", "courtCode", "prisonId" ]
      },
      "CreatePeriodLength" : {
        "type" : "object",
        "properties" : {
          "periodLengthUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "years" : {
            "type" : "integer",
            "format" : "int32"
          },
          "months" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodOrder" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SENTENCE_LENGTH", "CUSTODIAL_TERM", "LICENCE_PERIOD", "TARIFF_LENGTH", "TERM_LENGTH", "OVERALL_SENTENCE_LENGTH", "UNSUPPORTED" ]
          },
          "prisonId" : {
            "type" : "string"
          }
        },
        "required" : [ "periodOrder", "prisonId", "type" ]
      },
      "CreateSentence" : {
        "type" : "object",
        "properties" : {
          "sentenceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeNumber" : {
            "type" : "string"
          },
          "periodLengths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreatePeriodLength"
            }
          },
          "sentenceServeType" : {
            "type" : "string"
          },
          "consecutiveToChargeNumber" : {
            "type" : "string"
          },
          "consecutiveToSentenceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "sentenceTypeId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "convictionDate" : {
            "type" : "string",
            "format" : "date"
          },
          "fineAmount" : {
            "$ref" : "#/components/schemas/CreateFineAmount"
          },
          "prisonId" : {
            "type" : "string"
          }
        },
        "required" : [ "periodLengths", "sentenceServeType", "sentenceTypeId" ]
      },
      "CreateChargeResponse" : {
        "type" : "object",
        "properties" : {
          "chargeUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "chargeUuid" ]
      },
      "CreateCourtAppearanceResponse" : {
        "type" : "object",
        "properties" : {
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "appearanceUuid" ]
      },
      "CreateCourtCaseResponse" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "appearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateCourtAppearanceResponse"
            }
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateChargeResponse"
            }
          }
        },
        "required" : [ "appearances", "charges", "courtCaseUuid" ]
      },
      "LegacyPeriodLengthCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "sentenceTermNOMISId" : {
            "$ref" : "#/components/schemas/NomisPeriodLengthId"
          }
        },
        "required" : [ "sentenceTermNOMISId", "uuid" ]
      },
      "LegacySentenceCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "lifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeLifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "courtCaseId" : {
            "type" : "string"
          },
          "createdPeriodLengths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegacyPeriodLengthCreatedResponse"
            }
          }
        },
        "required" : [ "appearanceUuid", "chargeLifetimeUuid", "courtCaseId", "createdPeriodLengths", "lifetimeUuid", "prisonerId" ]
      },
      "LegacyCourtCaseCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          }
        },
        "required" : [ "courtCaseUuid" ]
      },
      "MigrationCreateCharge" : {
        "type" : "object",
        "properties" : {
          "chargeNOMISId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "offenceCode" : {
            "type" : "string"
          },
          "offenceStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "offenceEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/ChargeLegacyData"
          },
          "sentence" : {
            "$ref" : "#/components/schemas/MigrationCreateSentence"
          },
          "merged" : {
            "type" : "boolean"
          },
          "mergedFromCaseId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "mergedFromEventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "mergedChargeNOMISId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "chargeNOMISId", "legacyData", "offenceCode" ]
      },
      "MigrationCreateCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "courtCode" : {
            "type" : "string"
          },
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "appearanceTypeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/CourtAppearanceLegacyData"
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateCharge"
            }
          }
        },
        "required" : [ "appearanceDate", "appearanceTypeUuid", "charges", "courtCode", "eventId", "legacyData" ]
      },
      "MigrationCreateCourtCase" : {
        "type" : "object",
        "properties" : {
          "caseId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "active" : {
            "type" : "boolean"
          },
          "courtCaseLegacyData" : {
            "$ref" : "#/components/schemas/CourtCaseLegacyData"
          },
          "appearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateCourtAppearance"
            }
          },
          "merged" : {
            "type" : "boolean"
          }
        },
        "required" : [ "active", "appearances", "caseId", "courtCaseLegacyData" ]
      },
      "MigrationCreateCourtCases" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "courtCases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateCourtCase"
            }
          }
        },
        "required" : [ "courtCases", "prisonerId" ]
      },
      "MigrationCreateFine" : {
        "type" : "object",
        "properties" : {
          "fineAmount" : {
            "type" : "number"
          }
        },
        "required" : [ "fineAmount" ]
      },
      "MigrationCreatePeriodLength" : {
        "type" : "object",
        "properties" : {
          "periodLengthId" : {
            "$ref" : "#/components/schemas/NomisPeriodLengthId"
          },
          "periodYears" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodMonths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodWeeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/PeriodLengthLegacyData"
          }
        },
        "required" : [ "legacyData", "periodLengthId" ]
      },
      "MigrationCreateSentence" : {
        "type" : "object",
        "properties" : {
          "sentenceId" : {
            "$ref" : "#/components/schemas/MigrationSentenceId"
          },
          "chargeNumber" : {
            "type" : "string"
          },
          "fine" : {
            "$ref" : "#/components/schemas/MigrationCreateFine"
          },
          "active" : {
            "type" : "boolean"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/SentenceLegacyData"
          },
          "consecutiveToSentenceId" : {
            "$ref" : "#/components/schemas/MigrationSentenceId"
          },
          "periodLengths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreatePeriodLength"
            }
          }
        },
        "required" : [ "active", "legacyData", "periodLengths", "sentenceId" ]
      },
      "MigrationSentenceId" : {
        "type" : "object",
        "properties" : {
          "offenderBookingId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "offenderBookingId", "sequence" ]
      },
      "MigrationCreateChargeResponse" : {
        "type" : "object",
        "properties" : {
          "chargeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeNOMISId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "chargeNOMISId", "chargeUuid" ]
      },
      "MigrationCreateCourtAppearanceResponse" : {
        "type" : "object",
        "properties" : {
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "appearanceUuid", "eventId" ]
      },
      "MigrationCreateCourtCaseResponse" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "caseId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "caseId", "courtCaseUuid" ]
      },
      "MigrationCreateCourtCasesResponse" : {
        "type" : "object",
        "properties" : {
          "courtCases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateCourtCaseResponse"
            }
          },
          "appearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateCourtAppearanceResponse"
            }
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateChargeResponse"
            }
          },
          "sentences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreateSentenceResponse"
            }
          },
          "sentenceTerms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MigrationCreatePeriodLengthResponse"
            }
          }
        },
        "required" : [ "appearances", "charges", "courtCases", "sentenceTerms", "sentences" ]
      },
      "MigrationCreatePeriodLengthResponse" : {
        "type" : "object",
        "properties" : {
          "periodLengthUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "sentenceTermNOMISId" : {
            "$ref" : "#/components/schemas/NomisPeriodLengthId"
          }
        },
        "required" : [ "periodLengthUuid", "sentenceTermNOMISId" ]
      },
      "MigrationCreateSentenceResponse" : {
        "type" : "object",
        "properties" : {
          "sentenceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "sentenceNOMISId" : {
            "$ref" : "#/components/schemas/MigrationSentenceId"
          }
        },
        "required" : [ "sentenceNOMISId", "sentenceUuid" ]
      },
      "LegacyCourtAppearanceCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "lifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "courtCaseUuid" : {
            "type" : "string"
          },
          "prisonerId" : {
            "type" : "string"
          }
        },
        "required" : [ "courtCaseUuid", "lifetimeUuid", "prisonerId" ]
      },
      "LegacyCreateCharge" : {
        "type" : "object",
        "properties" : {
          "appearanceLifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "offenceCode" : {
            "type" : "string"
          },
          "offenceStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "offenceEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/ChargeLegacyData"
          }
        },
        "required" : [ "appearanceLifetimeUuid", "legacyData", "offenceCode" ]
      },
      "LegacyChargeCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "lifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "courtCaseUuid" : {
            "type" : "string"
          },
          "prisonerId" : {
            "type" : "string"
          }
        },
        "required" : [ "courtCaseUuid", "lifetimeUuid", "prisonerId" ]
      },
      "DraftCreateCourtCase" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "draftAppearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DraftCreateCourtAppearance"
            }
          }
        },
        "required" : [ "draftAppearances", "prisonerId" ]
      },
      "DraftCourtAppearanceCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "draftUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "draftUuid" ]
      },
      "DraftCourtCaseCreatedResponse" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "draftAppearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DraftCourtAppearanceCreatedResponse"
            }
          }
        },
        "required" : [ "courtCaseUuid", "draftAppearances" ]
      },
      "FineAmount" : {
        "type" : "object",
        "properties" : {
          "fineAmount" : {
            "type" : "number"
          }
        },
        "required" : [ "fineAmount" ]
      },
      "PeriodLength" : {
        "type" : "object",
        "properties" : {
          "years" : {
            "type" : "integer",
            "format" : "int32"
          },
          "months" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodOrder" : {
            "type" : "string"
          },
          "periodLengthType" : {
            "type" : "string",
            "enum" : [ "SENTENCE_LENGTH", "CUSTODIAL_TERM", "LICENCE_PERIOD", "TARIFF_LENGTH", "TERM_LENGTH", "OVERALL_SENTENCE_LENGTH", "UNSUPPORTED" ]
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/PeriodLengthLegacyData"
          },
          "periodLengthUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "periodLengthType", "periodLengthUuid", "periodOrder" ]
      },
      "Sentence" : {
        "type" : "object",
        "properties" : {
          "sentenceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeNumber" : {
            "type" : "string"
          },
          "periodLengths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PeriodLength"
            }
          },
          "sentenceServeType" : {
            "type" : "string"
          },
          "consecutiveToChargeNumber" : {
            "type" : "string"
          },
          "sentenceType" : {
            "$ref" : "#/components/schemas/SentenceType"
          },
          "convictionDate" : {
            "type" : "string",
            "format" : "date"
          },
          "fineAmount" : {
            "$ref" : "#/components/schemas/FineAmount"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/SentenceLegacyData"
          }
        },
        "required" : [ "periodLengths", "sentenceServeType", "sentenceUuid" ]
      },
      "SentenceType" : {
        "type" : "object",
        "properties" : {
          "sentenceTypeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string",
            "enum" : [ "STANDARD", "EXTENDED", "SOPC", "INDETERMINATE", "BOTUS", "CIVIL", "DTO", "FINE", "LEGACY", "NON_CUSTODIAL", "LEGACY_RECALL", "UNKNOWN" ]
          },
          "hintText" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "classification", "description", "displayOrder", "sentenceTypeUuid" ]
      },
      "Recall" : {
        "type" : "object",
        "properties" : {
          "recallUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "prisonerId" : {
            "type" : "string"
          },
          "revocationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "returnToCustodyDate" : {
            "type" : "string",
            "format" : "date"
          },
          "recallType" : {
            "type" : "string",
            "enum" : [ "LR", "FTR_14", "FTR_28", "LR_HDC", "FTR_HDC_14", "FTR_HDC_28", "CUR_HDC", "IN_HDC" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdByUsername" : {
            "type" : "string"
          },
          "createdByPrison" : {
            "type" : "string"
          },
          "sentences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sentence"
            }
          },
          "courtCaseIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "createdAt", "createdByPrison", "createdByUsername", "prisonerId", "recallType", "recallUuid" ]
      },
      "PersonDetails" : {
        "type" : "object",
        "properties" : {
          "personId" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "establishment" : {
            "type" : "string"
          },
          "cellNumber" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date"
          },
          "pncNumber" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        },
        "required" : [ "dateOfBirth", "firstName", "lastName", "personId" ]
      },
      "AppearanceType" : {
        "type" : "object",
        "properties" : {
          "appearanceTypeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "description" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "appearanceTypeUuid", "description", "displayOrder" ]
      },
      "Charge" : {
        "type" : "object",
        "properties" : {
          "chargeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "offenceCode" : {
            "type" : "string"
          },
          "offenceStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "offenceEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/ChargeOutcome"
          },
          "terrorRelated" : {
            "type" : "boolean"
          },
          "sentence" : {
            "$ref" : "#/components/schemas/Sentence"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/ChargeLegacyData"
          }
        },
        "required" : [ "chargeUuid", "offenceCode" ]
      },
      "ChargeOutcome" : {
        "type" : "object",
        "properties" : {
          "outcomeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "outcomeName" : {
            "type" : "string"
          },
          "nomisCode" : {
            "type" : "string"
          },
          "outcomeType" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dispositionCode" : {
            "type" : "string"
          }
        },
        "required" : [ "displayOrder", "dispositionCode", "nomisCode", "outcomeName", "outcomeType", "outcomeUuid" ]
      },
      "CourtAppearance" : {
        "type" : "object",
        "properties" : {
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/CourtAppearanceOutcome"
          },
          "courtCode" : {
            "type" : "string"
          },
          "courtCaseReference" : {
            "type" : "string"
          },
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "warrantId" : {
            "type" : "string"
          },
          "warrantType" : {
            "type" : "string"
          },
          "taggedBail" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nextCourtAppearance" : {
            "$ref" : "#/components/schemas/NextCourtAppearance"
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Charge"
            }
          },
          "overallSentenceLength" : {
            "$ref" : "#/components/schemas/PeriodLength"
          },
          "overallConvictionDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/CourtAppearanceLegacyData"
          }
        },
        "required" : [ "appearanceDate", "appearanceUuid", "charges", "courtCode", "warrantType" ]
      },
      "CourtAppearanceOutcome" : {
        "type" : "object",
        "properties" : {
          "outcomeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "outcomeName" : {
            "type" : "string"
          },
          "nomisCode" : {
            "type" : "string"
          },
          "outcomeType" : {
            "type" : "string"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "relatedChargeOutcomeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "isSubList" : {
            "type" : "boolean"
          }
        },
        "required" : [ "displayOrder", "isSubList", "nomisCode", "outcomeName", "outcomeType", "outcomeUuid", "relatedChargeOutcomeUuid" ]
      },
      "CourtCase" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "courtCaseUuid" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "EDITED", "DELETED", "DRAFT", "FUTURE", "MERGED" ]
          },
          "latestAppearance" : {
            "$ref" : "#/components/schemas/CourtAppearance"
          },
          "appearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CourtAppearance"
            }
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/CourtCaseLegacyData"
          },
          "draftAppearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DraftCourtAppearance"
            }
          }
        },
        "required" : [ "appearances", "courtCaseUuid", "draftAppearances", "prisonerId", "status" ]
      },
      "CourtCases" : {
        "type" : "object",
        "properties" : {
          "courtCases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CourtCase"
            }
          }
        },
        "required" : [ "courtCases" ]
      },
      "DraftCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "draftUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "sessionBlob" : {
            "$ref" : "#/components/schemas/JsonNode"
          }
        },
        "required" : [ "draftUuid", "sessionBlob" ]
      },
      "NextCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "appearanceTime" : {
            "type" : "string",
            "example" : "14:30:00"
          },
          "courtCode" : {
            "type" : "string"
          },
          "appearanceType" : {
            "$ref" : "#/components/schemas/AppearanceType"
          }
        },
        "required" : [ "appearanceDate", "appearanceType", "courtCode" ]
      },
      "LegacyPeriodLength" : {
        "type" : "object",
        "properties" : {
          "periodYears" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodMonths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodWeeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "periodDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isLifeSentence" : {
            "type" : "boolean"
          },
          "sentenceTermCode" : {
            "type" : "string"
          },
          "periodLengthUuid" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "periodLengthUuid", "sentenceTermCode" ]
      },
      "LegacySentence" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "courtCaseId" : {
            "type" : "string"
          },
          "chargeLifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "lifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "appearanceUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "active" : {
            "type" : "boolean"
          },
          "sentenceCalcType" : {
            "type" : "string"
          },
          "sentenceCategory" : {
            "type" : "string"
          },
          "consecutiveToLifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "chargeNumber" : {
            "type" : "string"
          },
          "fineAmount" : {
            "type" : "number"
          },
          "periodLengths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegacyPeriodLength"
            }
          },
          "sentenceStartDate" : {
            "type" : "string",
            "format" : "date"
          }
        },
        "required" : [ "active", "appearanceUuid", "chargeLifetimeUuid", "courtCaseId", "lifetimeUuid", "periodLengths", "prisonerId", "sentenceCalcType", "sentenceCategory", "sentenceStartDate" ]
      },
      "LegacySentenceTypeGroupingSummary" : {
        "type" : "object",
        "properties" : {
          "nomisSentenceTypeReference" : {
            "type" : "string"
          },
          "nomisDescription" : {
            "type" : "string"
          },
          "isIndeterminate" : {
            "type" : "boolean"
          },
          "recall" : {
            "$ref" : "#/components/schemas/RecallType"
          },
          "nomisActive" : {
            "type" : "boolean"
          },
          "nomisExpiryDate" : {
            "type" : "string",
            "format" : "date"
          }
        },
        "required" : [ "isIndeterminate", "nomisActive", "nomisDescription", "nomisSentenceTypeReference", "recall" ]
      },
      "RecallType" : {
        "type" : "object",
        "properties" : {
          "isRecall" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string"
          },
          "isFixedTermRecall" : {
            "type" : "boolean"
          },
          "lengthInDays" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "isFixedTermRecall", "isRecall", "lengthInDays", "type" ]
      },
      "LegacySentenceType" : {
        "type" : "object",
        "properties" : {
          "nomisSentenceTypeReference" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string",
            "enum" : [ "STANDARD", "EXTENDED", "SOPC", "INDETERMINATE", "BOTUS", "CIVIL", "DTO", "FINE", "LEGACY", "NON_CUSTODIAL", "LEGACY_RECALL", "UNKNOWN" ]
          },
          "classificationPeriodDefinition" : {
            "$ref" : "#/components/schemas/SentenceTypePeriodDefinitions"
          },
          "sentencingAct" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eligibility" : {
            "$ref" : "#/components/schemas/SentenceEligibility"
          },
          "recallType" : {
            "$ref" : "#/components/schemas/RecallType"
          },
          "inputSentenceType" : {
            "$ref" : "#/components/schemas/SentenceType"
          },
          "nomisActive" : {
            "type" : "boolean"
          },
          "nomisDescription" : {
            "type" : "string"
          },
          "nomisExpiryDate" : {
            "type" : "string",
            "format" : "date"
          },
          "nomisTermTypes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "classification", "nomisActive", "nomisDescription", "nomisSentenceTypeReference", "nomisTermTypes", "recallType", "sentencingAct" ]
      },
      "Period" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SENTENCE_LENGTH", "CUSTODIAL_TERM", "LICENCE_PERIOD", "TARIFF_LENGTH", "TERM_LENGTH", "OVERALL_SENTENCE_LENGTH", "UNSUPPORTED" ]
          },
          "auto" : {
            "type" : "boolean"
          },
          "periodLength" : {
            "$ref" : "#/components/schemas/PeriodLengthDetail"
          }
        },
        "required" : [ "auto", "type" ]
      },
      "PeriodLengthDetail" : {
        "type" : "object",
        "properties" : {
          "years" : {
            "type" : "string"
          },
          "periodOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "periodLengthType" : {
            "type" : "string",
            "enum" : [ "SENTENCE_LENGTH", "CUSTODIAL_TERM", "LICENCE_PERIOD", "TARIFF_LENGTH", "TERM_LENGTH", "OVERALL_SENTENCE_LENGTH", "UNSUPPORTED" ]
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description", "periodLengthType", "periodOrder", "years" ]
      },
      "SentenceEligibility" : {
        "type" : "object",
        "properties" : {
          "toreraEligibilityType" : {
            "type" : "string",
            "enum" : [ "NONE", "SOPC", "SDS" ]
          },
          "sdsPlusEligibilityType" : {
            "type" : "string",
            "enum" : [ "NONE", "SECTION250", "SDS" ]
          }
        }
      },
      "SentenceTypePeriodDefinitions" : {
        "type" : "object",
        "properties" : {
          "periodDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Period"
            }
          }
        },
        "required" : [ "periodDefinitions" ]
      },
      "LegacyCourtCase" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "prisonerId" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "courtId" : {
            "type" : "string"
          },
          "caseReference" : {
            "type" : "string"
          },
          "caseReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseReferenceLegacyData"
            }
          }
        },
        "required" : [ "active", "caseReferences", "courtCaseUuid", "prisonerId" ]
      },
      "LegacyCharge" : {
        "type" : "object",
        "properties" : {
          "prisonerId" : {
            "type" : "string"
          },
          "courtCaseUuid" : {
            "type" : "string"
          },
          "lifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "nomisOutcomeCode" : {
            "type" : "string"
          },
          "offenceCode" : {
            "type" : "string"
          },
          "offenceStartDate" : {
            "type" : "string",
            "format" : "date"
          },
          "offenceEndDate" : {
            "type" : "string",
            "format" : "date"
          },
          "legacyData" : {
            "$ref" : "#/components/schemas/ChargeLegacyData"
          }
        },
        "required" : [ "courtCaseUuid", "lifetimeUuid", "offenceCode", "prisonerId" ]
      },
      "LegacyCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "lifetimeUuid" : {
            "type" : "string",
            "format" : "uuid"
          },
          "courtCaseUuid" : {
            "type" : "string"
          },
          "prisonerId" : {
            "type" : "string"
          },
          "nomisOutcomeCode" : {
            "type" : "string"
          },
          "courtCode" : {
            "type" : "string"
          },
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "appearanceTime" : {
            "type" : "string",
            "example" : "14:30:00"
          },
          "charges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegacyCharge"
            }
          },
          "nextCourtAppearance" : {
            "$ref" : "#/components/schemas/LegacyNextCourtAppearance"
          }
        },
        "required" : [ "appearanceDate", "appearanceTime", "charges", "courtCaseUuid", "courtCode", "lifetimeUuid", "prisonerId" ]
      },
      "LegacyNextCourtAppearance" : {
        "type" : "object",
        "properties" : {
          "appearanceDate" : {
            "type" : "string",
            "format" : "date"
          },
          "appearanceTime" : {
            "type" : "string",
            "example" : "14:30:00"
          },
          "courtId" : {
            "type" : "string"
          }
        },
        "required" : [ "appearanceDate", "courtId" ]
      },
      "TestCourtCase" : {
        "type" : "object",
        "properties" : {
          "courtCaseUuid" : {
            "type" : "string"
          },
          "prisonerId" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "courtId" : {
            "type" : "string"
          },
          "caseReference" : {
            "type" : "string"
          },
          "caseReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseReferenceLegacyData"
            }
          },
          "appearances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LegacyCourtAppearance"
            }
          }
        },
        "required" : [ "active", "appearances", "caseReferences", "courtCaseUuid", "prisonerId" ]
      },
      "Pageable" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PageCourtCase" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CourtCase"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PageableObject" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unpaged" : {
            "type" : "boolean"
          }
        }
      },
      "SortObject" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}