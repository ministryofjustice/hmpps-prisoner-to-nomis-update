{
  "openapi": "3.0.1",
  "info": {
    "title": "HMPPS Remand and Sentencing API",
    "description": "Recording Remand and sentencing",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2025-01-03.4029.a413794"
  },
  "servers": [
    {
      "url": "https://remand-and-sentencing-api.hmpps.service.justice.gov.uk",
      "description": "Prod"
    },
    {
      "url": "https://remand-and-sentencing-api-preprod.hmpps.service.justice.gov.ukk",
      "description": "Preprod"
    },
    {
      "url": "https://remand-and-sentencing-api-dev.hmpps.service.justice.gov.uk",
      "description": "Development"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "legacy-court-appearance-controller",
      "description": "CRUD operations for syncing court appearance data from NOMIS Court Events into remand and sentencing api database."
    },
    {
      "name": "legacy-court-case-controller",
      "description": "CRUD operations for syncing court case data from NOMIS into remand and sentencing api database."
    },
    {
      "name": "sentence-type-controller",
      "description": "Sentence Type"
    },
    {
      "name": "migration-controller",
      "description": "Create operation for migrating court case data from NOMIS into remand and sentencing api database."
    },
    {
      "name": "charge-outcome-controller",
      "description": "Charge outcome"
    },
    {
      "name": "sentence-controller",
      "description": "Sentences"
    },
    {
      "name": "recall-controller",
      "description": "Recall"
    },
    {
      "name": "court-appearance-controller",
      "description": "Court Appearances"
    },
    {
      "name": "appearance-outcome-controller",
      "description": "Appearance outcome"
    },
    {
      "name": "person-controller",
      "description": "Get person details"
    },
    {
      "name": "charge-controller",
      "description": "Charges"
    },
    {
      "name": "draft-court-appearance-controller",
      "description": "Draft Court appearance"
    },
    {
      "name": "legacy-charge-controller",
      "description": "CRUD operations for syncing charge data from NOMIS Offender charges into remand and sentencing api database."
    },
    {
      "name": "draft-court-case-controller",
      "description": "Draft Court case"
    },
    {
      "name": "court-case-controller",
      "description": "Court case"
    },
    {
      "name": "appearance-type-controller",
      "description": "Appearance Type"
    }
  ],
  "paths": {
    "/recall/{recallUuid}": {
      "get": {
        "tags": [
          "recall-controller"
        ],
        "summary": "Retrieve a recall",
        "description": "This endpoint will retrieve the details of a recall",
        "operationId": "getRecall",
        "parameters": [
          {
            "name": "recallUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recall"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no recall uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recall"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recall"
                }
              }
            }
          },
          "200": {
            "description": "Returns recall details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recall"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "recall-controller"
        ],
        "summary": "Update a recall (or create one with the passed in details)",
        "description": "This endpoint will update a recall (or create one with the passed in details)",
        "operationId": "updateRecall",
        "parameters": [
          {
            "name": "recallUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns court case UUID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-case/{courtCaseUuid}": {
      "get": {
        "tags": [
          "legacy-court-case-controller"
        ],
        "summary": "Retrieve court case details",
        "description": "This endpoint will retrieve court case details",
        "operationId": "get",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns court case details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no court case at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "legacy-court-case-controller"
        ],
        "summary": "Updates a court case",
        "description": "Synchronise an update of court case from NOMIS into remand and sentencing API.",
        "operationId": "update",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyCreateCourtCase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "court case updated"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete": {
        "tags": [
          "legacy-court-case-controller"
        ],
        "summary": "Deletes a court case",
        "description": "Synchronise a deletion of court case from NOMIS into remand and sentencing API.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "court case deleted"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/court-appearance/{lifetimeUuid}": {
      "get": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "Retrieve court appearance details",
        "description": "This endpoint will retrieve court appearance details",
        "operationId": "get_1",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns court appearance details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no court appearance at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "Updates a court appearance",
        "description": "Synchronise an update of court appearance from NOMIS court events into remand and sentencing API.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyCreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "court appearance updated"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "Delete Appearance",
        "description": "Synchronise a deletion of court appearance from NOMIS court events into remand and sentencing API.",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/court-appearance/{lifetimeUuid}/charge/{chargeLifetimeUuid}": {
      "get": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "Get latest charge at appearance",
        "description": "This endpoint will retrieve the latest charge at a court appearance",
        "operationId": "getChargeAtAppearance",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "chargeLifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCharge"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "link Appearance with Charge",
        "description": "Synchronise a link between court appearance and charge from NOMIS into remand and sentencing API.",
        "operationId": "linkAppearanceWithCharge",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "chargeLifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "Delete Appearance Charge link",
        "description": "Synchronise a deletion of link between court appearance and charge from NOMIS into remand and sentencing API.",
        "operationId": "unlinkAppearanceWithCharge",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "chargeLifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/charge/{lifetimeUuid}": {
      "get": {
        "tags": [
          "legacy-charge-controller"
        ],
        "summary": "retrieve a charge",
        "description": "This endpoint will retrieve charge details.",
        "operationId": "get_2",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "200": {
            "description": "Returns charge details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCharge"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCharge"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "legacy-charge-controller"
        ],
        "summary": "Update a charge in all appearances",
        "description": "Synchronise an update of charge in all appearances from NOMIS Offender charges into remand and sentencing API.",
        "operationId": "update_2",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyUpdateWholeCharge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "charge updated"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete": {
        "tags": [
          "legacy-charge-controller"
        ],
        "summary": "Delete Charge",
        "description": "Synchronise a deletion of charge from NOMIS offender charges into remand and sentencing API.",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/legacy/charge/{lifetimeUuid}/appearance/{appearanceLifetimeUuid}": {
      "put": {
        "tags": [
          "legacy-charge-controller"
        ],
        "summary": "Update a charge in an appearance",
        "description": "Synchronise an update of charge within an appearance from NOMIS Offender charges into remand and sentencing API.",
        "operationId": "updateInAppearance",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "appearanceLifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyUpdateCharge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "charge updated"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/draft/court-appearance/{draftUuid}": {
      "get": {
        "tags": [
          "draft-court-appearance-controller"
        ],
        "summary": "Retrieves a draft court appearance",
        "description": "Retrieves a draft court appearance",
        "operationId": "get_3",
        "parameters": [
          {
            "name": "draftUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtAppearance"
                }
              }
            }
          },
          "200": {
            "description": "court appearance updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtAppearance"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtAppearance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "draft-court-appearance-controller"
        ],
        "summary": "Updates a draft court appearance",
        "description": "Updates a draft court appearance for when a user wants to pause inputting a warrant and come back later",
        "operationId": "update_3",
        "parameters": [
          {
            "name": "draftUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftCreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "200": {
            "description": "court appearance updated"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      },
      "delete": {
        "tags": [
          "draft-court-appearance-controller"
        ],
        "summary": "deletes a draft court appearance",
        "description": "deletes a draft court appearance",
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "draftUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          },
          "200": {
            "description": "court appearance deleted"
          }
        }
      }
    },
    "/court-case/{courtCaseUuid}": {
      "get": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Retrieve court case details",
        "description": "This endpoint will retrieve court case details",
        "operationId": "getCourtCaseDetails",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns court case details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtCase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtCase"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtCase"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no court case at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtCase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Create Court case",
        "description": "This endpoint will create a court case",
        "operationId": "putCourtCase",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourtCase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "201": {
            "description": "Returns court case UUID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Delete Court case",
        "description": "This endpoint will delete a court case",
        "operationId": "deleteCourtCase",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/court-case/{courtCaseUuid}/case-references/refresh": {
      "put": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Refresh case references",
        "description": "This endpoint will refresh case references",
        "operationId": "refreshCaseReferences",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourtCaseLegacyData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/court-appearance/{lifetimeUuid}/lifetime": {
      "put": {
        "tags": [
          "court-appearance-controller"
        ],
        "summary": "Create Court appearance",
        "description": "This endpoint will create a court appearance in a given court case",
        "operationId": "updateCourtAppearanceByLifetime",
        "parameters": [
          {
            "name": "lifetimeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns court case UUID",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/court-appearance/{appearanceUuid}": {
      "get": {
        "tags": [
          "court-appearance-controller"
        ],
        "summary": "Retrieve court appearance details",
        "description": "This endpoint will retrieve court appearance details",
        "operationId": "getCourtAppearanceDetails",
        "parameters": [
          {
            "name": "appearanceUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns court appearance details",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no court appearance at uuid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "court-appearance-controller"
        ],
        "summary": "Create Court appearance",
        "description": "This endpoint will create a court appearance in a given court case",
        "operationId": "updateCourtAppearance",
        "parameters": [
          {
            "name": "appearanceUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns court case UUID",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "court-appearance-controller"
        ],
        "summary": "Delete Appearance",
        "description": "This endpoint will delete an appearance",
        "operationId": "deleteAppearance",
        "parameters": [
          {
            "name": "appearanceUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/charge/{chargeUuid}": {
      "get": {
        "tags": [
          "charge-controller"
        ],
        "summary": "Retrieve charge details",
        "description": "This endpoint will retrieve charge details",
        "operationId": "getChargeDetails",
        "parameters": [
          {
            "name": "chargeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not found if no charge at uuid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Charge"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Charge"
                }
              }
            }
          },
          "200": {
            "description": "Returns charge details",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Charge"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Charge"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "charge-controller"
        ],
        "summary": "Create Charge",
        "description": "This endpoint will create a charge in a given court appearance",
        "operationId": "updateCharge",
        "parameters": [
          {
            "name": "chargeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCharge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChargeResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChargeResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns court case UUID",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChargeResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charge-controller"
        ],
        "summary": "Delete Charge",
        "description": "This endpoint will delete a charge",
        "operationId": "deleteCharge",
        "parameters": [
          {
            "name": "chargeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role"
          }
        }
      }
    },
    "/recall": {
      "post": {
        "tags": [
          "recall-controller"
        ],
        "summary": "Create a recall",
        "description": "This endpoint will create a recall",
        "operationId": "createRecall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "201": {
            "description": "Returns recall UUID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveRecallResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-case": {
      "post": {
        "tags": [
          "legacy-court-case-controller"
        ],
        "summary": "Create a court case",
        "description": "Synchronise a creation of court case from NOMIS into remand and sentencing API.",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyCreateCourtCase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCaseCreatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCaseCreatedResponse"
                }
              }
            }
          },
          "201": {
            "description": "court case created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtCaseCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-case/migration": {
      "post": {
        "tags": [
          "migration-controller"
        ],
        "summary": "Creates a court case",
        "description": "Migrates a court case, court appearance and charge from NOMIS into remand and sentencing API.",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationCreateCourtCase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationCreateCourtCaseResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationCreateCourtCaseResponse"
                }
              }
            }
          },
          "201": {
            "description": "court case created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationCreateCourtCaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/court-appearance": {
      "post": {
        "tags": [
          "legacy-court-appearance-controller"
        ],
        "summary": "Create a court appearance",
        "description": "Synchronise a creation of court appearance from NOMIS court events into remand and sentencing API.",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyCreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "201": {
            "description": "court appearance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyCourtAppearanceCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/legacy/charge": {
      "post": {
        "tags": [
          "legacy-charge-controller"
        ],
        "summary": "Create a charge",
        "description": "Synchronise a creation of charge from NOMIS Offender charges into remand and sentencing API.",
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyCreateCharge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "charge created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyChargeCreatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyChargeCreatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyChargeCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/draft/court-case": {
      "post": {
        "tags": [
          "draft-court-case-controller"
        ],
        "summary": "Create a draft court case",
        "description": "Creates a draft court case for when a user wants to pause inputting a warrant and come back later",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftCreateCourtCase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtCaseCreatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtCaseCreatedResponse"
                }
              }
            }
          },
          "201": {
            "description": "court case created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtCaseCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/draft/court-case/{courtCaseUuid}/appearance": {
      "post": {
        "tags": [
          "draft-court-case-controller"
        ],
        "summary": "Create a draft court appearance in court case",
        "description": "Creates a draft draft court appearance in court case for when a user wants to pause inputting a warrant and come back later",
        "operationId": "createDraftAppearanceInCourtCase",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DraftCreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtAppearanceCreatedResponse"
                }
              }
            }
          },
          "201": {
            "description": "draft court appearance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftCourtAppearanceCreatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/court-case": {
      "post": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Create Court case",
        "description": "This endpoint will create a court case",
        "operationId": "createCourtCase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourtCase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          },
          "201": {
            "description": "Returns court case UUID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtCaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/court-appearance": {
      "post": {
        "tags": [
          "court-appearance-controller"
        ],
        "summary": "Create Court appearance",
        "description": "This endpoint will create a court appearance in a given court case",
        "operationId": "createCourtAppearance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourtAppearance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          },
          "201": {
            "description": "Returns court case UUID",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/charge": {
      "post": {
        "tags": [
          "charge-controller"
        ],
        "summary": "Create Charge",
        "description": "This endpoint will create a charge in a given court appearance",
        "operationId": "createCharge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCharge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChargeResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChargeResponse"
                }
              }
            }
          },
          "201": {
            "description": "Returns court case UUID",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChargeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sentence/{sentenceUuid}": {
      "get": {
        "tags": [
          "sentence-controller"
        ],
        "summary": "Retrieve sentence details",
        "description": "This endpoint will retrieve sentence details",
        "operationId": "getChargeDetails_1",
        "parameters": [
          {
            "name": "sentenceUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not found if no charge at uuid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Sentence"
                }
              }
            }
          },
          "200": {
            "description": "Returns sentence details",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Sentence"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Sentence"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Sentence"
                }
              }
            }
          }
        }
      }
    },
    "/sentence-type/{sentenceTypeUuid}": {
      "get": {
        "tags": [
          "sentence-type-controller"
        ],
        "summary": "Get Sentence type by UUID",
        "description": "This endpoint will retrieve sentence type by UUID",
        "operationId": "getSentenceTypeByUuid",
        "parameters": [
          {
            "name": "sentenceTypeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns sentence",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceType"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no sentence type at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceType"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceType"
                }
              }
            }
          }
        }
      }
    },
    "/sentence-type/uuid/multiple": {
      "get": {
        "tags": [
          "sentence-type-controller"
        ],
        "summary": "get all sentence types by uuids",
        "description": "This endpoint will get all sentence types by uuids",
        "operationId": "getSentenceTypesByIds",
        "parameters": [
          {
            "name": "uuids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Returns sentence types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sentence-type/search": {
      "get": {
        "tags": [
          "sentence-type-controller"
        ],
        "summary": "Search all sentence types",
        "description": "This endpoint will search all sentence types",
        "operationId": "searchSentenceTypes",
        "parameters": [
          {
            "name": "age",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "convictionDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Returns sentence types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SentenceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recall/person/{prisonerId}": {
      "get": {
        "tags": [
          "recall-controller"
        ],
        "summary": "Retrieve all recalls for a person",
        "description": "This endpoint will retrieve  all recalls for a person",
        "operationId": "getRecallsByPrisonerId",
        "parameters": [
          {
            "name": "prisonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all recalls for person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recall"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recall"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recall"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/{prisonerId}": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Retrieve person details",
        "description": "This endpoint will retrieve person details",
        "operationId": "getPersonDetails",
        "parameters": [
          {
            "name": "prisonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returns person details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetails"
                }
              }
            }
          }
        }
      }
    },
    "/court-case/{courtCaseUuid}/latest-appearance": {
      "get": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Retrieve latest court appearance of court case",
        "description": "This endpoint will retrieve latest court appearance of court case",
        "operationId": "getLatestAppearanceDetails",
        "parameters": [
          {
            "name": "courtCaseUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "200": {
            "description": "Returns latest appearance details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no court case at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearance"
                }
              }
            }
          }
        }
      }
    },
    "/court-case/search": {
      "get": {
        "tags": [
          "court-case-controller"
        ],
        "summary": "Retrieve all court cases for person",
        "description": "This endpoint will retrieve all court cases for a person",
        "operationId": "searchCourtCases",
        "parameters": [
          {
            "name": "prisonerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns court cases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCourtCase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCourtCase"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCourtCase"
                }
              }
            }
          }
        }
      }
    },
    "/charge-outcome/{outcomeUuid}": {
      "get": {
        "tags": [
          "charge-outcome-controller"
        ],
        "summary": "Get charge outcome by UUID",
        "description": "This endpoint will retrieve charge outcome by UUID",
        "operationId": "getChargeOutcomeByUuid",
        "parameters": [
          {
            "name": "outcomeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not found if no charge outcome at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeOutcome"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeOutcome"
                }
              }
            }
          },
          "200": {
            "description": "Returns charge outcome",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/charge-outcome/uuid/multiple": {
      "get": {
        "tags": [
          "charge-outcome-controller"
        ],
        "summary": "get all charge outcomes by uuids",
        "description": "This endpoint will get all charge outcomes by uuids",
        "operationId": "getChargeOutcomesByIds",
        "parameters": [
          {
            "name": "uuids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns charge outcomes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charge-outcome/all": {
      "get": {
        "tags": [
          "charge-outcome-controller"
        ],
        "summary": "Get all charge outcomes",
        "description": "This endpoint will get all charge outcomes",
        "operationId": "getAllChargeOutcomes",
        "responses": {
          "200": {
            "description": "Returns charge outcomes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargeOutcome"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appearance-type/{appearanceTypeUuid}": {
      "get": {
        "tags": [
          "appearance-type-controller"
        ],
        "summary": "Get appearance type by uuid",
        "description": "This endpoint will get appearance type by uuid",
        "operationId": "getAppearanceTypeById",
        "parameters": [
          {
            "name": "appearanceTypeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppearanceType"
                }
              }
            }
          },
          "404": {
            "description": "Appearance type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppearanceType"
                }
              }
            }
          },
          "200": {
            "description": "Returns appearance type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppearanceType"
                }
              }
            }
          }
        }
      }
    },
    "/appearance-type/all": {
      "get": {
        "tags": [
          "appearance-type-controller"
        ],
        "summary": "Get all appearance types",
        "description": "This endpoint will get all appearance types",
        "operationId": "getAllAppearanceTypes",
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppearanceType"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Returns appearance types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppearanceType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appearance-outcome/{outcomeUuid}": {
      "get": {
        "tags": [
          "appearance-outcome-controller"
        ],
        "summary": "Get appearance outcome by UUID",
        "description": "This endpoint will retrieve appearance outcome by UUID",
        "operationId": "getAppearanceOutcomeByUuid",
        "parameters": [
          {
            "name": "outcomeUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns appearance outcome",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          },
          "404": {
            "description": "Not found if no appearance outcome at uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourtAppearanceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/appearance-outcome/all": {
      "get": {
        "tags": [
          "appearance-outcome-controller"
        ],
        "summary": "Get all appearance outcomes",
        "description": "This endpoint will get all appearance outcomes",
        "operationId": "getAllAppearanceOutcomes",
        "responses": {
          "200": {
            "description": "Returns appearance outcomes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourtAppearanceOutcome"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourtAppearanceOutcome"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourtAppearanceOutcome"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateRecall": {
        "required": [
          "createdByUsername",
          "prisonerId",
          "recallDate",
          "recallType",
          "returnToCustodyDate"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "recallDate": {
            "type": "string",
            "format": "date"
          },
          "returnToCustodyDate": {
            "type": "string",
            "format": "date"
          },
          "recallType": {
            "type": "string",
            "enum": [
              "FOURTEEN_DAY_FIXED_TERM_RECALL",
              "TWENTY_EIGHT_DAY_FIXED_TERM_RECALL",
              "STANDARD_RECALL",
              "HDC_STANDARD_RECALL",
              "HDC_FOURTEEN_DAY_RECALL",
              "HDC_TWENTY_EIGHT_DAY_RECALL",
              "HDC_CURFEW_VIOLATION_RECALL",
              "HDC_INABILITY_TO_MONITOR_RECALL"
            ]
          },
          "createdByUsername": {
            "type": "string"
          }
        }
      },
      "SaveRecallResponse": {
        "required": [
          "recallUuid"
        ],
        "type": "object",
        "properties": {
          "recallUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LegacyCreateCourtCase": {
        "required": [
          "active",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "CourtAppearanceLegacyData": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "caseId": {
            "type": "string"
          },
          "postedDate": {
            "type": "string"
          },
          "nomisOutcomeCode": {
            "type": "string"
          },
          "outcomeDescription": {
            "type": "string"
          },
          "nextEventDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "appearanceTime": {
            "type": "string",
            "example": "08:54:21.103635331"
          }
        }
      },
      "LegacyCreateCourtAppearance": {
        "required": [
          "appearanceDate",
          "appearanceTypeUuid",
          "courtCaseUuid",
          "courtCode",
          "legacyData"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          },
          "courtCode": {
            "type": "string"
          },
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "legacyData": {
            "$ref": "#/components/schemas/CourtAppearanceLegacyData"
          },
          "appearanceTypeUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LegacyUpdateWholeCharge": {
        "required": [
          "offenceCode"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "type": "string"
          }
        }
      },
      "ChargeLegacyData": {
        "type": "object",
        "properties": {
          "postedDate": {
            "type": "string"
          },
          "nomisOutcomeCode": {
            "type": "string"
          },
          "outcomeDescription": {
            "type": "string"
          }
        }
      },
      "LegacyUpdateCharge": {
        "required": [
          "active",
          "legacyData"
        ],
        "type": "object",
        "properties": {
          "offenceStartDate": {
            "type": "string",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "format": "date"
          },
          "active": {
            "type": "boolean"
          },
          "legacyData": {
            "$ref": "#/components/schemas/ChargeLegacyData"
          }
        }
      },
      "DraftCreateCourtAppearance": {
        "required": [
          "sessionBlob"
        ],
        "type": "object",
        "properties": {
          "sessionBlob": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "CaseReferenceLegacyData": {
        "required": [
          "offenderCaseReference",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "offenderCaseReference": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CourtCaseLegacyData": {
        "required": [
          "caseReferences"
        ],
        "type": "object",
        "properties": {
          "caseReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CaseReferenceLegacyData"
            }
          }
        }
      },
      "CreateCharge": {
        "required": [
          "offenceCode",
          "offenceStartDate"
        ],
        "type": "object",
        "properties": {
          "appearanceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "chargeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "lifetimeChargeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "offenceCode": {
            "type": "string"
          },
          "offenceStartDate": {
            "type": "string",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "format": "date"
          },
          "outcomeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "terrorRelated": {
            "type": "boolean"
          },
          "sentence": {
            "$ref": "#/components/schemas/CreateSentence"
          },
          "legacyData": {
            "$ref": "#/components/schemas/ChargeLegacyData"
          }
        }
      },
      "CreateCourtAppearance": {
        "required": [
          "appearanceDate",
          "charges",
          "courtCode",
          "warrantType"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          },
          "appearanceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "outcomeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "courtCode": {
            "type": "string"
          },
          "courtCaseReference": {
            "type": "string"
          },
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "warrantId": {
            "type": "string"
          },
          "warrantType": {
            "type": "string"
          },
          "taggedBail": {
            "type": "integer",
            "format": "int32"
          },
          "overallSentenceLength": {
            "$ref": "#/components/schemas/CreatePeriodLength"
          },
          "nextCourtAppearance": {
            "$ref": "#/components/schemas/CreateNextCourtAppearance"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCharge"
            }
          },
          "overallConvictionDate": {
            "type": "string",
            "format": "date"
          },
          "legacyData": {
            "$ref": "#/components/schemas/CourtAppearanceLegacyData"
          }
        }
      },
      "CreateCourtCase": {
        "required": [
          "appearances",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "appearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCourtAppearance"
            }
          },
          "legacyData": {
            "$ref": "#/components/schemas/CourtCaseLegacyData"
          }
        }
      },
      "CreateFineAmount": {
        "required": [
          "fineAmount"
        ],
        "type": "object",
        "properties": {
          "fineAmount": {
            "type": "number"
          }
        }
      },
      "CreateNextCourtAppearance": {
        "required": [
          "appearanceDate",
          "appearanceTypeUuid",
          "courtCode"
        ],
        "type": "object",
        "properties": {
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "appearanceTime": {
            "type": "string",
            "example": "08:54:21.103635331"
          },
          "courtCode": {
            "type": "string"
          },
          "appearanceTypeUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreatePeriodLength": {
        "required": [
          "periodOrder",
          "type"
        ],
        "type": "object",
        "properties": {
          "years": {
            "type": "integer",
            "format": "int32"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          },
          "weeks": {
            "type": "integer",
            "format": "int32"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "periodOrder": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SENTENCE_LENGTH",
              "CUSTODIAL_TERM",
              "LICENCE_PERIOD",
              "TARIFF_LENGTH",
              "TERM_LENGTH",
              "OVERALL_SENTENCE_LENGTH"
            ]
          }
        }
      },
      "CreateSentence": {
        "required": [
          "periodLengths",
          "sentenceServeType",
          "sentenceTypeId"
        ],
        "type": "object",
        "properties": {
          "sentenceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "chargeNumber": {
            "type": "string"
          },
          "periodLengths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePeriodLength"
            }
          },
          "sentenceServeType": {
            "type": "string"
          },
          "consecutiveToChargeNumber": {
            "type": "string"
          },
          "consecutiveToSentenceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "sentenceTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "convictionDate": {
            "type": "string",
            "format": "date"
          },
          "fineAmount": {
            "$ref": "#/components/schemas/CreateFineAmount"
          }
        }
      },
      "CreateChargeResponse": {
        "required": [
          "chargeUuid"
        ],
        "type": "object",
        "properties": {
          "chargeUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateCourtAppearanceResponse": {
        "required": [
          "appearanceUuid"
        ],
        "type": "object",
        "properties": {
          "appearanceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "eventId": {
            "type": "string"
          }
        }
      },
      "CreateCourtCaseResponse": {
        "required": [
          "appearances",
          "charges",
          "courtCaseUuid"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          },
          "appearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCourtAppearanceResponse"
            }
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateChargeResponse"
            }
          }
        }
      },
      "LegacyCourtCaseCreatedResponse": {
        "required": [
          "courtCaseUuid"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          }
        }
      },
      "MigrationCreateCharge": {
        "required": [
          "active",
          "chargeNOMISId",
          "legacyData",
          "offenceCode"
        ],
        "type": "object",
        "properties": {
          "chargeNOMISId": {
            "type": "string"
          },
          "offenceCode": {
            "type": "string"
          },
          "offenceStartDate": {
            "type": "string",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "format": "date"
          },
          "active": {
            "type": "boolean"
          },
          "legacyData": {
            "$ref": "#/components/schemas/ChargeLegacyData"
          }
        }
      },
      "MigrationCreateCourtAppearance": {
        "required": [
          "appearanceDate",
          "appearanceTypeUuid",
          "charges",
          "courtCode",
          "legacyData"
        ],
        "type": "object",
        "properties": {
          "courtCode": {
            "type": "string"
          },
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "appearanceTypeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "legacyData": {
            "$ref": "#/components/schemas/CourtAppearanceLegacyData"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MigrationCreateCharge"
            }
          }
        }
      },
      "MigrationCreateCourtCase": {
        "required": [
          "active",
          "appearances",
          "courtCaseLegacyData",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "courtCaseLegacyData": {
            "$ref": "#/components/schemas/CourtCaseLegacyData"
          },
          "appearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MigrationCreateCourtAppearance"
            }
          }
        }
      },
      "MigrationCreateChargeResponse": {
        "required": [
          "chargeNOMISId",
          "lifetimeChargeUuid"
        ],
        "type": "object",
        "properties": {
          "lifetimeChargeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "chargeNOMISId": {
            "type": "string"
          }
        }
      },
      "MigrationCreateCourtAppearanceResponse": {
        "required": [
          "eventId",
          "lifetimeUuid"
        ],
        "type": "object",
        "properties": {
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "eventId": {
            "type": "string"
          }
        }
      },
      "MigrationCreateCourtCaseResponse": {
        "required": [
          "appearances",
          "charges",
          "courtCaseUuid"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          },
          "appearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MigrationCreateCourtAppearanceResponse"
            }
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MigrationCreateChargeResponse"
            }
          }
        }
      },
      "LegacyCourtAppearanceCreatedResponse": {
        "required": [
          "courtCaseUuid",
          "lifetimeUuid",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "courtCaseUuid": {
            "type": "string"
          },
          "prisonerId": {
            "type": "string"
          }
        }
      },
      "LegacyCreateCharge": {
        "required": [
          "active",
          "appearanceLifetimeUuid",
          "legacyData",
          "offenceCode"
        ],
        "type": "object",
        "properties": {
          "appearanceLifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "offenceCode": {
            "type": "string"
          },
          "offenceStartDate": {
            "type": "string",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "format": "date"
          },
          "active": {
            "type": "boolean"
          },
          "legacyData": {
            "$ref": "#/components/schemas/ChargeLegacyData"
          }
        }
      },
      "LegacyChargeCreatedResponse": {
        "required": [
          "courtCaseUuid",
          "lifetimeUuid",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "courtCaseUuid": {
            "type": "string"
          },
          "prisonerId": {
            "type": "string"
          }
        }
      },
      "DraftCreateCourtCase": {
        "required": [
          "draftAppearances",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "draftAppearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftCreateCourtAppearance"
            }
          }
        }
      },
      "DraftCourtAppearanceCreatedResponse": {
        "required": [
          "draftUuid"
        ],
        "type": "object",
        "properties": {
          "draftUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DraftCourtCaseCreatedResponse": {
        "required": [
          "courtCaseUuid",
          "draftAppearances"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          },
          "draftAppearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftCourtAppearanceCreatedResponse"
            }
          }
        }
      },
      "FineAmount": {
        "required": [
          "fineAmount"
        ],
        "type": "object",
        "properties": {
          "fineAmount": {
            "type": "number"
          }
        }
      },
      "PeriodLength": {
        "required": [
          "periodLengthType",
          "periodOrder"
        ],
        "type": "object",
        "properties": {
          "years": {
            "type": "integer",
            "format": "int32"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          },
          "weeks": {
            "type": "integer",
            "format": "int32"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "periodOrder": {
            "type": "string"
          },
          "periodLengthType": {
            "type": "string",
            "enum": [
              "SENTENCE_LENGTH",
              "CUSTODIAL_TERM",
              "LICENCE_PERIOD",
              "TARIFF_LENGTH",
              "TERM_LENGTH",
              "OVERALL_SENTENCE_LENGTH"
            ]
          }
        }
      },
      "Sentence": {
        "required": [
          "periodLengths",
          "sentenceServeType",
          "sentenceType",
          "sentenceUuid"
        ],
        "type": "object",
        "properties": {
          "sentenceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "chargeNumber": {
            "type": "string"
          },
          "periodLengths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeriodLength"
            }
          },
          "sentenceServeType": {
            "type": "string"
          },
          "consecutiveToChargeNumber": {
            "type": "string"
          },
          "sentenceType": {
            "$ref": "#/components/schemas/SentenceType"
          },
          "convictionDate": {
            "type": "string",
            "format": "date"
          },
          "fineAmount": {
            "$ref": "#/components/schemas/FineAmount"
          }
        }
      },
      "SentenceType": {
        "required": [
          "classification",
          "description",
          "sentenceTypeUuid"
        ],
        "type": "object",
        "properties": {
          "sentenceTypeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "classification": {
            "type": "string",
            "enum": [
              "STANDARD",
              "EXTENDED",
              "SOPC",
              "INDETERMINATE",
              "BOTUS",
              "CIVIL",
              "DTO",
              "FINE",
              "LEGACY",
              "NON_CUSTODIAL"
            ]
          },
          "hintText": {
            "type": "string"
          }
        }
      },
      "Recall": {
        "required": [
          "createdAt",
          "createdByUsername",
          "prisonerId",
          "recallDate",
          "recallType",
          "recallUniqueIdentifier",
          "returnToCustodyDate"
        ],
        "type": "object",
        "properties": {
          "recallUniqueIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "prisonerId": {
            "type": "string"
          },
          "recallDate": {
            "type": "string",
            "format": "date"
          },
          "returnToCustodyDate": {
            "type": "string",
            "format": "date"
          },
          "recallType": {
            "type": "string",
            "enum": [
              "FOURTEEN_DAY_FIXED_TERM_RECALL",
              "TWENTY_EIGHT_DAY_FIXED_TERM_RECALL",
              "STANDARD_RECALL",
              "HDC_STANDARD_RECALL",
              "HDC_FOURTEEN_DAY_RECALL",
              "HDC_TWENTY_EIGHT_DAY_RECALL",
              "HDC_CURFEW_VIOLATION_RECALL",
              "HDC_INABILITY_TO_MONITOR_RECALL"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUsername": {
            "type": "string"
          }
        }
      },
      "PersonDetails": {
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName",
          "personId"
        ],
        "type": "object",
        "properties": {
          "personId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "establishment": {
            "type": "string"
          },
          "cellNumber": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "pncNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "LegacyCourtCase": {
        "required": [
          "active",
          "caseReferences",
          "courtCaseUuid",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "courtCaseUuid": {
            "type": "string"
          },
          "prisonerId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "courtId": {
            "type": "string"
          },
          "caseReference": {
            "type": "string"
          },
          "caseReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CaseReferenceLegacyData"
            }
          }
        }
      },
      "LegacyCharge": {
        "required": [
          "courtCaseUuid",
          "lifetimeUuid",
          "offenceCode",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "courtCaseUuid": {
            "type": "string"
          },
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "nomisOutcomeCode": {
            "type": "string"
          },
          "offenceCode": {
            "type": "string"
          },
          "offenceStartDate": {
            "type": "string",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "format": "date"
          },
          "legacyData": {
            "$ref": "#/components/schemas/ChargeLegacyData"
          }
        }
      },
      "LegacyCourtAppearance": {
        "required": [
          "appearanceDate",
          "appearanceTime",
          "charges",
          "courtCaseUuid",
          "courtCode",
          "lifetimeUuid",
          "prisonerId"
        ],
        "type": "object",
        "properties": {
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "courtCaseUuid": {
            "type": "string"
          },
          "prisonerId": {
            "type": "string"
          },
          "nomisOutcomeCode": {
            "type": "string"
          },
          "courtCode": {
            "type": "string"
          },
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "appearanceTime": {
            "type": "string",
            "example": "08:54:21.103635331"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegacyCharge"
            }
          },
          "nextCourtAppearance": {
            "$ref": "#/components/schemas/LegacyNextCourtAppearance"
          }
        }
      },
      "LegacyNextCourtAppearance": {
        "required": [
          "appearanceDate",
          "courtId"
        ],
        "type": "object",
        "properties": {
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "appearanceTime": {
            "type": "string",
            "example": "08:54:21.103635331"
          },
          "courtId": {
            "type": "string"
          }
        }
      },
      "DraftCourtAppearance": {
        "required": [
          "draftUuid",
          "sessionBlob"
        ],
        "type": "object",
        "properties": {
          "draftUuid": {
            "type": "string",
            "format": "uuid"
          },
          "sessionBlob": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "AppearanceType": {
        "required": [
          "appearanceTypeUuid",
          "description",
          "displayOrder"
        ],
        "type": "object",
        "properties": {
          "appearanceTypeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Charge": {
        "required": [
          "chargeUuid",
          "lifetimeUuid",
          "offenceCode"
        ],
        "type": "object",
        "properties": {
          "chargeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "offenceCode": {
            "type": "string"
          },
          "offenceStartDate": {
            "type": "string",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "format": "date"
          },
          "outcome": {
            "$ref": "#/components/schemas/ChargeOutcome"
          },
          "terrorRelated": {
            "type": "boolean"
          },
          "sentence": {
            "$ref": "#/components/schemas/Sentence"
          },
          "legacyData": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "ChargeOutcome": {
        "required": [
          "displayOrder",
          "isSubList",
          "nomisCode",
          "outcomeName",
          "outcomeType",
          "outcomeUuid"
        ],
        "type": "object",
        "properties": {
          "outcomeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "outcomeName": {
            "type": "string"
          },
          "nomisCode": {
            "type": "string"
          },
          "outcomeType": {
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isSubList": {
            "type": "boolean"
          }
        }
      },
      "CourtAppearance": {
        "required": [
          "appearanceDate",
          "appearanceUuid",
          "charges",
          "courtCode",
          "lifetimeUuid",
          "warrantType"
        ],
        "type": "object",
        "properties": {
          "appearanceUuid": {
            "type": "string",
            "format": "uuid"
          },
          "lifetimeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "outcome": {
            "$ref": "#/components/schemas/CourtAppearanceOutcome"
          },
          "courtCode": {
            "type": "string"
          },
          "courtCaseReference": {
            "type": "string"
          },
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "warrantId": {
            "type": "string"
          },
          "warrantType": {
            "type": "string"
          },
          "taggedBail": {
            "type": "integer",
            "format": "int32"
          },
          "nextCourtAppearance": {
            "$ref": "#/components/schemas/NextCourtAppearance"
          },
          "charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Charge"
            }
          },
          "overallSentenceLength": {
            "$ref": "#/components/schemas/PeriodLength"
          },
          "overallConvictionDate": {
            "type": "string",
            "format": "date"
          },
          "legacyData": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "CourtAppearanceOutcome": {
        "required": [
          "displayOrder",
          "isSubList",
          "nomisCode",
          "outcomeName",
          "outcomeType",
          "outcomeUuid",
          "relatedChargeOutcomeUuid"
        ],
        "type": "object",
        "properties": {
          "outcomeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "outcomeName": {
            "type": "string"
          },
          "nomisCode": {
            "type": "string"
          },
          "outcomeType": {
            "type": "string"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "relatedChargeOutcomeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "isSubList": {
            "type": "boolean"
          }
        }
      },
      "CourtCase": {
        "required": [
          "appearances",
          "courtCaseUuid",
          "draftAppearances",
          "prisonerId",
          "status"
        ],
        "type": "object",
        "properties": {
          "prisonerId": {
            "type": "string"
          },
          "courtCaseUuid": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "EDITED",
              "DELETED",
              "DRAFT",
              "FUTURE"
            ]
          },
          "latestAppearance": {
            "$ref": "#/components/schemas/CourtAppearance"
          },
          "appearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourtAppearance"
            }
          },
          "legacyData": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "draftAppearances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftCourtAppearance"
            }
          }
        }
      },
      "NextCourtAppearance": {
        "required": [
          "appearanceDate",
          "appearanceType",
          "courtCode"
        ],
        "type": "object",
        "properties": {
          "appearanceDate": {
            "type": "string",
            "format": "date"
          },
          "appearanceTime": {
            "type": "string",
            "example": "08:54:21.103635331"
          },
          "courtCode": {
            "type": "string"
          },
          "appearanceType": {
            "$ref": "#/components/schemas/AppearanceType"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageCourtCase": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourtCase"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
