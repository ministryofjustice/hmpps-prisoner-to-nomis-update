{
  "openapi": "3.0.1",
  "info": {
    "title": "HMPPS Offender Case Notes",
    "description": "HMPPS Offender Case Notes API",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2024-07-15.5573.ff24c22"
  },
  "servers": [
    {
      "url": "https://offender-case-notes.service.justice.gov.uk",
      "description": "Prod"
    },
    {
      "url": "https://preprod.offender-case-notes.service.justice.gov.uk",
      "description": "PreProd"
    },
    {
      "url": "https://dev.offender-case-notes.service.justice.gov.uk",
      "description": "Development"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "publish-notes",
      "description": "Prison Notes Controller"
    },
    {
      "name": "case-notes",
      "description": "Case Note Controller"
    }
  ],
  "paths": {
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryDlq",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RetryDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "purgeQueue",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/{offenderIdentifier}/{caseNoteIdentifier}": {
      "get": {
        "tags": [
          "case-notes"
        ],
        "summary": "Retrieves a case note",
        "operationId": "getCaseNote",
        "parameters": [
          {
            "name": "offenderIdentifier",
            "in": "path",
            "description": "Offender Identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "caseNoteIdentifier",
            "in": "path",
            "description": "Case Note Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "518b2200-6489-4c77-8514-10cf80ccd488"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNote"
                }
              }
            }
          },
          "404": {
            "description": "Offender or case note not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "case-notes"
        ],
        "summary": "Amend Case Note for offender",
        "description": "Amend a case note information adds and additional entry to the note",
        "operationId": "amendCaseNote",
        "parameters": [
          {
            "name": "offenderIdentifier",
            "in": "path",
            "description": "Offender Identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "caseNoteIdentifier",
            "in": "path",
            "description": "Case Note Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "518b2200-6489-4c77-8514-10cf80ccd488"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCaseNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The Case Note has been recorded. The updated object is returned including the status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNote"
                }
              }
            }
          },
          "404": {
            "description": "No case notes where found for this offender and case note id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/types/{parentType}": {
      "put": {
        "tags": [
          "case-notes"
        ],
        "summary": "Update Case Note Type",
        "description": "Creates a new case note type",
        "operationId": "updateCaseNoteType",
        "parameters": [
          {
            "name": "parentType",
            "in": "path",
            "description": "Parent Case Note Type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "OBS"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCaseNoteType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "The case note type is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "The case note type has been updated. The updated object is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNoteTypeDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "case-notes"
        ],
        "summary": "Add New Case Note Sub Type",
        "description": "Creates a new case note sub type",
        "operationId": "createCaseNoteSubType",
        "parameters": [
          {
            "name": "parentType",
            "in": "path",
            "description": "Parent Case Note Type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "GEN"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCaseNoteType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The Case Note Sub Type has been recorded. The updated object is returned including the status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNoteTypeDto"
                }
              }
            }
          },
          "409": {
            "description": "The case note sub type has already been recorded. The current unmodified object (including status) is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/types/{parentType}/{subType}": {
      "put": {
        "tags": [
          "case-notes"
        ],
        "summary": "Update Case Note Sub Type",
        "description": "Creates a new case note sub type",
        "operationId": "updateCaseNoteSubType",
        "parameters": [
          {
            "name": "parentType",
            "in": "path",
            "description": "Parent Case Note Type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "OBS"
          },
          {
            "name": "subType",
            "in": "path",
            "description": "Sub Case Note Type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "GEN"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCaseNoteType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The case note sub type update has been updated. The updated object is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNoteTypeDto"
                }
              }
            }
          },
          "404": {
            "description": "The case note sub type is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/publish-notes": {
      "post": {
        "tags": [
          "publish-notes"
        ],
        "summary": "Publish sensitive case notes",
        "operationId": "publishCaseNotes",
        "parameters": [
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "A timestamp that indicates the earliest record required",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "A timestamp that indicates the latest record required",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of notes to be published (asynchronously)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/{offenderIdentifier}": {
      "get": {
        "tags": [
          "case-notes"
        ],
        "summary": "Retrieves a list of case notes",
        "operationId": "getCaseNotes",
        "parameters": [
          {
            "name": "offenderIdentifier",
            "in": "path",
            "description": "Offender Identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optionally specify a case note filter",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CaseNoteFilter"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Offender not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCaseNote"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "case-notes"
        ],
        "summary": "Add Case Note for offender",
        "description": "Creates a note for a specific type/subType",
        "operationId": "createCaseNote",
        "parameters": [
          {
            "name": "offenderIdentifier",
            "in": "path",
            "description": "Offender Identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCaseNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The Case Note has been recorded. The updated object is returned including the status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNote"
                }
              }
            }
          },
          "409": {
            "description": "The case note has already been recorded under the booking. The current unmodified object (including status) is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/types": {
      "get": {
        "tags": [
          "case-notes"
        ],
        "summary": "Retrieves a list of case note types",
        "operationId": "getCaseNoteTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseNoteTypeDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Case notes types not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "case-notes"
        ],
        "summary": "Add New Case Note Type",
        "description": "Creates a new case note type",
        "operationId": "createCaseNoteType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCaseNoteType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The Case Note Type has been recorded. The updated object is returned including the status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseNoteTypeDto"
                }
              }
            }
          },
          "409": {
            "description": "The case note type has already been recorded. The current unmodified object (including status) is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subject-access-request": {
      "get": {
        "tags": [
          "Subject Access Request"
        ],
        "summary": "Provides content for a prisoner to satisfy the needs of a subject access request on their behalf",
        "description": "Requires role SAR_DATA_ACCESS",
        "operationId": "getSarContentByReference",
        "parameters": [
          {
            "name": "prn",
            "in": "query",
            "description": "NOMIS Prison Reference Number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "crn",
            "in": "query",
            "description": "nDelius Case Reference Number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Optional parameter denoting minimum date of event occurrence which should be returned in the response",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Optional parameter denoting maximum date of event occurrence which should be returned in the response",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request successfully processed - no content found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Request successfully processed - content found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectAccessRequestContent"
                }
              }
            }
          },
          "401": {
            "description": "The client does not have authorisation to make this request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "209": {
            "description": "Subject Identifier is not recognised by this service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "getDlqMessages",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxMessages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/types-for-user": {
      "get": {
        "tags": [
          "case-notes"
        ],
        "summary": "Retrieves a list of case note types for this user",
        "operationId": "getUserCaseNoteTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseNoteTypeDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Case notes types not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/{offenderIdentifier}/{caseNoteId}": {
      "delete": {
        "tags": [
          "case-notes"
        ],
        "summary": "Deletes a case note",
        "operationId": "softDeleteCaseNote",
        "parameters": [
          {
            "name": "offenderIdentifier",
            "in": "path",
            "description": "Offender Identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "caseNoteId",
            "in": "path",
            "description": "Case Note Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "518b2200-6489-4c77-8514-10cf80ccd488"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Offender or case note not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/case-notes/amendment/{offenderIdentifier}/{caseNoteAmendmentId}": {
      "delete": {
        "tags": [
          "case-notes"
        ],
        "summary": "Deletes a case note amendment",
        "operationId": "softDeleteCaseNoteAmendment",
        "parameters": [
          {
            "name": "offenderIdentifier",
            "in": "path",
            "description": "Offender Identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "caseNoteAmendmentId",
            "in": "path",
            "description": "Case Note Amendment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Offender or case note not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RetryDlqResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurgeQueueResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateCaseNote": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text of case note",
            "example": "This is a case note message"
          }
        },
        "description": "Amend a Case Note"
      },
      "ErrorResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "userMessage": {
            "type": "string"
          },
          "developerMessage": {
            "type": "string"
          },
          "moreInfo": {
            "type": "string"
          }
        }
      },
      "CaseNote": {
        "required": [
          "amendments",
          "authorName",
          "authorUserId",
          "caseNoteId",
          "creationDateTime",
          "eventId",
          "occurrenceDateTime",
          "offenderIdentifier",
          "sensitive",
          "source",
          "subType",
          "subTypeDescription",
          "text",
          "type",
          "typeDescription"
        ],
        "type": "object",
        "properties": {
          "caseNoteId": {
            "type": "string",
            "description": "Case Note Id (unique)",
            "example": "12311312"
          },
          "offenderIdentifier": {
            "type": "string",
            "description": "Offender Unique Identifier",
            "example": "A1234AA"
          },
          "type": {
            "type": "string",
            "description": "Case Note Type",
            "example": "KA"
          },
          "typeDescription": {
            "type": "string",
            "description": "Case Note Type Description",
            "example": "Key Worker"
          },
          "subType": {
            "type": "string",
            "description": "Case Note Sub Type",
            "example": "KS"
          },
          "subTypeDescription": {
            "type": "string",
            "description": "Case Note Sub Type Description",
            "example": "Key Worker Session"
          },
          "source": {
            "type": "string",
            "description": "Source Type",
            "example": "INST"
          },
          "creationDateTime": {
            "type": "string",
            "description": "Date and Time of Case Note creation",
            "format": "date-time"
          },
          "occurrenceDateTime": {
            "type": "string",
            "description": "Date and Time of when case note contact with offender was made",
            "format": "date-time"
          },
          "authorName": {
            "type": "string",
            "description": "Full name of case note author",
            "example": "John Smith"
          },
          "authorUserId": {
            "type": "string",
            "description": "User Id of case note author - staffId for nomis users, username for auth users",
            "example": "12345 or USERNAME_12345"
          },
          "text": {
            "type": "string",
            "description": "Case Note Text",
            "example": "This is some text"
          },
          "locationId": {
            "type": "string",
            "description": "Location Id representing where Case Note was made.",
            "example": "MDI"
          },
          "eventId": {
            "type": "integer",
            "description": "Delius number representation of the case note id - will be negative for sensitive case note types",
            "format": "int32",
            "example": -23
          },
          "sensitive": {
            "type": "boolean",
            "description": "Sensitive Note",
            "example": true
          },
          "amendments": {
            "type": "array",
            "description": "Ordered list of amendments to the case note (oldest first)",
            "items": {
              "$ref": "#/components/schemas/CaseNoteAmendment"
            }
          }
        },
        "description": "Case Note"
      },
      "CaseNoteAmendment": {
        "required": [
          "additionalNoteText",
          "authorName",
          "authorUserId",
          "authorUserName",
          "caseNoteAmendmentId",
          "creationDateTime"
        ],
        "type": "object",
        "properties": {
          "caseNoteAmendmentId": {
            "type": "integer",
            "description": "Amendment Case Note Id (unique)",
            "format": "int64",
            "example": 123232
          },
          "creationDateTime": {
            "type": "string",
            "description": "Date and Time of Case Note creation",
            "format": "date-time"
          },
          "authorUserName": {
            "type": "string",
            "description": "Username of the user amending the case note",
            "example": "USER1"
          },
          "authorName": {
            "type": "string",
            "description": "Name of the user amending the case note",
            "example": "Mickey Mouse"
          },
          "authorUserId": {
            "type": "string",
            "description": "User Id of the user amending the case note - staffId for nomis users, userId for auth users",
            "example": "12345"
          },
          "additionalNoteText": {
            "type": "string",
            "description": "Additional Case Note Information",
            "example": "Some Additional Text"
          }
        },
        "description": "Case Note Amendment"
      },
      "UpdateCaseNoteType": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Type Description",
            "example": "General Note Type"
          },
          "active": {
            "type": "boolean",
            "description": "Active Type",
            "example": true
          },
          "sensitive": {
            "type": "boolean",
            "description": "Sensitive Case Note Type, default true",
            "example": true
          },
          "restrictedUse": {
            "type": "boolean",
            "description": "Restricted Use, default true",
            "example": true
          }
        },
        "description": "Update a Case Note Type"
      },
      "CaseNoteTypeDto": {
        "required": [
          "activeFlag",
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Case Note Code",
            "example": "OBSERVE"
          },
          "description": {
            "type": "string",
            "description": "Case Note description.",
            "example": "Observations"
          },
          "activeFlag": {
            "type": "string",
            "description": "Active indicator flag.",
            "example": "Y",
            "enum": [
              "Y,N"
            ]
          },
          "subCodes": {
            "type": "array",
            "description": "List of case note sub types",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CaseNoteTypeDto"
            }
          },
          "source": {
            "type": "string",
            "description": "Source of Case Note Type, legacy case note are null",
            "example": "OCNS"
          },
          "sensitive": {
            "type": "boolean",
            "description": "Indicates the type of note is sensitive",
            "example": true
          },
          "restrictedUse": {
            "type": "boolean",
            "description": "Indicates the type of note can only be created by a sub-set of users (e.g. POMs)",
            "example": true
          }
        },
        "description": "Case Note Type"
      },
      "NewCaseNote": {
        "required": [
          "locationId",
          "occurrenceDateTime",
          "subType",
          "text",
          "type"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "Location where case note was made, if blank it will be looked up in Nomis",
            "example": "MDI"
          },
          "type": {
            "type": "string",
            "description": "Type of case note",
            "example": "GEN"
          },
          "subType": {
            "type": "string",
            "description": "Sub Type of case note",
            "example": "OBS"
          },
          "occurrenceDateTime": {
            "type": "string",
            "description": "Occurrence time of case note",
            "format": "date-time"
          },
          "text": {
            "type": "string",
            "description": "Text of case note",
            "example": "This is a case note message"
          }
        },
        "description": "Create a Case Note"
      },
      "NewCaseNoteType": {
        "required": [
          "description",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of case note",
            "example": "GEN"
          },
          "description": {
            "type": "string",
            "description": "Type Description",
            "example": "General Note Type"
          },
          "active": {
            "type": "boolean",
            "description": "Active Type, default true",
            "example": true
          },
          "sensitive": {
            "type": "boolean",
            "description": "Sensitive Case Note Type, default true",
            "example": true
          },
          "restrictedUse": {
            "type": "boolean",
            "description": "Restricted Use, default true",
            "example": true
          }
        },
        "description": "Create a New Case Note Type"
      },
      "SARCaseNoteAmendment": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "authorName": {
            "type": "string"
          },
          "additionalNoteText": {
            "type": "string"
          }
        },
        "description": "SubjectAccessResponse"
      },
      "SubjectAccessRequestContent": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectAccessRequestData"
            }
          }
        }
      },
      "SubjectAccessRequestData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "creationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "authorName": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "amendments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SARCaseNoteAmendment"
            }
          }
        },
        "description": "SubjectAccessResponse"
      },
      "DlqMessage": {
        "required": [
          "body",
          "messageId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "messageId": {
            "type": "string"
          }
        }
      },
      "GetDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount",
          "messagesReturnedCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messagesReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        }
      },
      "CaseNoteFilter": {
        "required": [
          "includeSensitive",
          "typesAndSubTypes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Filter by Case Note Type. Cannot be used in conjunction with typeSubTypes.",
            "example": "KA"
          },
          "subType": {
            "type": "string",
            "description": "Filter by Case Note Sub Type. Must used in conjunction with type, and cannot be used in conjunction with typeSubTypes.",
            "example": "KS"
          },
          "startDate": {
            "type": "string",
            "description": "Filter case notes from this date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Filter case notes up to this date",
            "format": "date-time"
          },
          "locationId": {
            "type": "string",
            "description": "Filter by the location",
            "example": "MDI"
          },
          "authorUsername": {
            "type": "string",
            "description": "Filter by username",
            "example": "USER1"
          },
          "typeSubTypes": {
            "type": "array",
            "description": "Filter by a list of case note types and optional case note sub types separated by plus. Cannot be used in conjunction with type or subType.",
            "example": "KA+KE,OBS,POM+GEN",
            "items": {
              "type": "string",
              "description": "Filter by a list of case note types and optional case note sub types separated by plus. Cannot be used in conjunction with type or subType.",
              "example": "KA+KE,OBS,POM+GEN"
            }
          },
          "includeSensitive": {
            "type": "boolean",
            "description": "Allow client credentials clients to filter out sensitive case notes. Defaults to true (sensitive case notes are included by default).",
            "example": false
          },
          "typesAndSubTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Case Note Filter"
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageCaseNote": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CaseNote"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string"
          },
          "nullHandling": {
            "type": "string"
          },
          "ascending": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "ignoreCase": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
