{
  "openapi": "3.0.1",
  "info": {
    "title": "Prison Person API",
    "description": "API for access to Prison Person Data (data about a person that is specific to their time in prison)",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2024-08-15.661.0b81d25"
  },
  "servers": [
    {
      "url": "/",
      "description": "Current url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    },
    {
      "hmpps-auth": []
    }
  ],
  "tags": [
    {
      "name": "Reference Data Domains",
      "description": "Reference Data Domains for Prison Person data"
    },
    {
      "name": "Sync with NOMIS",
      "description": "Endpoints to keep the Prison Person database in sync with changes in the NOMIS database"
    },
    {
      "name": "Prison Person Data",
      "description": "Data about a person that is specific to their time in prison"
    },
    {
      "name": "Physical Attributes",
      "description": "The height and weight of a prisoner"
    },
    {
      "name": "Migration from NOMIS",
      "description": "Endpoints to facilitate migration of data from NOMIS to the Prison Person database"
    },
    {
      "name": "Reference Data Codes",
      "description": "Reference Data Codes for Prison Person data"
    }
  ],
  "paths": {
    "/sync/prisoners/{prisonerNumber}/physical-attributes": {
      "put": {
        "tags": [
          "Physical Attributes",
          "Sync with NOMIS"
        ],
        "summary": "SYNC endpoint to sync changes to physical attributes made in NOMIS",
        "description": "This endpoint <b>SHOULD ONLY BE USED IN ORDER TO SYNC CHANGES MADE IN NOMIS.</b> There is a separate endpoint for normal editing of the Physical Attributes.<br/><br/>Requires role `ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_SYNC__RW`<br/><br/>Edits can be made to physical attributes in NOMIS to both the current booking and to old bookings. This sync API can handle both by accepting the `appliesFrom` and `appliesTo` timestamps.  For edits to the current booking, `appliesFrom` should be equal to the point in time that the edit happened, and `appliesTo` should be null.  For edits to historical bookings `appliesFrom` should be equal to the booking start date and and `appliesTo` should be equal to the booking end date. The `createdAt` date should always be the point in time that the user made the edit.",
        "operationId": "syncPhysicalAttributes",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalAttributesSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner's physical attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesSyncResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_SYNC__RW",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesSyncResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryDlq",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RetryDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "purgeQueue",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          }
        }
      }
    },
    "/migration/prisoners/{prisonerNumber}/physical-attributes": {
      "put": {
        "tags": [
          "Physical Attributes",
          "Migration from NOMIS"
        ],
        "summary": "MIGRATION endpoint to sync changes to physical attributes made in NOMIS",
        "description": "This endpoint <b>SHOULD ONLY BE USED IN ORDER TO MIGRATE DATA.</b><br/><br/>Requires role `ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_MIGRATION__RW` user made the edit.",
        "operationId": "migratePhysicalAttributes",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalAttributesMigrationRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner's physical attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesMigrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_MIGRATION__RW",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesMigrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prisoners/{prisonerNumber}/physical-attributes": {
      "patch": {
        "tags": [
          "Physical Attributes"
        ],
        "summary": "Updates the physical attributes (height and weight) for a prisoner",
        "description": "Requires role `ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES__RW`",
        "operationId": "setPhysicalAttributes",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalAttributesUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner's physical attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES__RW",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesDto"
                }
              }
            }
          }
        }
      }
    },
    "/reference-data/domains": {
      "get": {
        "tags": [
          "Reference Data Domains"
        ],
        "summary": "Get all reference data domains",
        "description": "Returns the list of reference data domains. By default this endpoint only returns active reference data domains. The `includeInactive` parameter can be used to return all reference data domains. Requires role `ROLE_PRISON_PERSON_API__REFERENCE_DATA__RO`",
        "operationId": "getReferenceDataDomains",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Include inactive reference data domains. Defaults to false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference data domains found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReferenceDataDomainDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reference-data/domains/{domain}": {
      "get": {
        "tags": [
          "Reference Data Domains"
        ],
        "summary": "Get a reference data domain",
        "description": "Returns the reference data domain, including all reference data codes linked to that domain. Requires role `ROLE_PRISON_PERSON_API__REFERENCE_DATA__RO`",
        "operationId": "getReferenceDataDomain",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference data domain retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataDomainDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found, the reference data domain was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reference-data/domains/{domain}/codes": {
      "get": {
        "tags": [
          "Reference Data Codes"
        ],
        "summary": "Get all reference data codes for {domain}",
        "description": "Returns the list of reference data codes within {domain}. By default this endpoint only returns active reference data codes. The `includeInactive` parameter can be used to return all reference data codes. Requires role `ROLE_PRISON_PERSON_API__REFERENCE_DATA__RO`",
        "operationId": "getReferenceDataCodes",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Include inactive reference data codes. Defaults to false. Requires role `ROLE_PRISON_PERSON_API__REFERENCE_DATA__RO`",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference data codes found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReferenceDataCodeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found, the reference data domain was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reference-data/domains/{domain}/codes/{code}": {
      "get": {
        "tags": [
          "Reference Data Codes"
        ],
        "summary": "Get a reference data code",
        "description": "Returns the reference data code.",
        "operationId": "getReferenceDataCode",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference data code retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataCodeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found, the reference data code was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "getDlqMessages",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxMessages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/prisoners/{prisonerNumber}": {
      "get": {
        "tags": [
          "Prison Person Data"
        ],
        "description": "Requires role `ROLE_PRISON_PERSON_API__PRISON_PERSON_DATA__RO`",
        "operationId": "getPrisonPersonData",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Prison Person Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrisonPersonDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PRISON_PERSON_DATA__RO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "type": "string"
          },
          "userMessage": {
            "type": "string"
          },
          "developerMessage": {
            "type": "string"
          },
          "moreInfo": {
            "type": "string"
          }
        }
      },
      "PhysicalAttributesSyncRequest": {
        "required": [
          "appliesFrom",
          "createdAt",
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres). May be left null if no data available for height.",
            "format": "int32",
            "nullable": true,
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms). May be left null if no data available for weight.",
            "format": "int32",
            "nullable": true,
            "example": 70
          },
          "appliesFrom": {
            "type": "string",
            "description": "The timestamp indicating from when these physical attributes were true for the prisoner. For edits to the current booking, this should be equal to the 'createdAt' date. For edits to historical bookings, this should be equal to the booking start date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "appliesTo": {
            "type": "string",
            "description": "The timestamp of when these physical attributes should no longer be considered applicable. For edits to the current booking, this should be left null. For edits to historical bookings, this should be equal to the booking end date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp indicating when this record was last edited in NOMIS.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of who last edited the record in NOMIS",
            "example": "USER1"
          }
        },
        "description": "Request object for syncing a prisoner's physical attributes"
      },
      "PhysicalAttributesSyncResponse": {
        "required": [
          "fieldHistoryInserted"
        ],
        "type": "object",
        "properties": {
          "fieldHistoryInserted": {
            "type": "array",
            "description": "The IDs of field history inserted during the sync",
            "example": [
              123,
              456
            ],
            "items": {
              "type": "integer",
              "description": "The IDs of field history inserted during the sync",
              "format": "int64"
            }
          }
        },
        "description": "Physical Attributes Sync Response"
      },
      "RetryDlqResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurgeQueueResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PhysicalAttributesMigrationRequest": {
        "required": [
          "appliesFrom",
          "createdAt",
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres). May be left null if no data available for height.",
            "format": "int32",
            "nullable": true,
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms). May be left null if no data available for weight.",
            "format": "int32",
            "nullable": true,
            "example": 70
          },
          "appliesFrom": {
            "type": "string",
            "description": "The timestamp indicating from when these physical attributes were true for the prisoner. For migration of the current booking, this should be equal to the 'createdAt' date. For migration of historical bookings, this should be equal to the booking start date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "appliesTo": {
            "type": "string",
            "description": "The timestamp of when these physical attributes should no longer be considered applicable. For migration of the current booking, this should be left null. For migration of historical bookings, this should be equal to the booking end date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp indicating when this record was last edited in NOMIS.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of who last edited the record in NOMIS",
            "example": "USER1"
          }
        },
        "description": "Request object for migration of a prisoner's physical attributes"
      },
      "PhysicalAttributesMigrationResponse": {
        "required": [
          "fieldHistoryInserted"
        ],
        "type": "object",
        "properties": {
          "fieldHistoryInserted": {
            "type": "array",
            "description": "The IDs of field history created during the migration",
            "example": [
              123,
              456
            ],
            "items": {
              "type": "integer",
              "description": "The IDs of field history created during the migration",
              "format": "int64"
            }
          }
        },
        "description": "Physical Attributes Migration Response"
      },
      "PhysicalAttributesUpdateRequest": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres).",
            "format": "int32",
            "nullable": true,
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms).",
            "format": "int32",
            "nullable": true,
            "example": 70
          },
          "hair": {
            "type": "string",
            "description": "Hair type or colour. `ReferenceDataCode.id`.",
            "nullable": true,
            "example": "HAIR_BROWN"
          },
          "facialHair": {
            "type": "string",
            "description": "Facial hair type. `ReferenceDataCode.id`.",
            "nullable": true,
            "example": "FACIAL_HAIR_BEARDED"
          },
          "face": {
            "type": "string",
            "description": "Face shape. `ReferenceDataCode.id`.",
            "nullable": true,
            "example": "FACE_OVAL"
          },
          "build": {
            "type": "string",
            "description": "Build. `ReferenceDataCode.id`.",
            "nullable": true,
            "example": "BUILD_MEDIUM"
          },
          "leftEyeColour": {
            "type": "string",
            "description": "Left eye colour. `ReferenceDataCode.id`.",
            "nullable": true,
            "example": "EYE_GREEN"
          },
          "rightEyeColour": {
            "type": "string",
            "description": "Right eye colour. `ReferenceDataCode.id`.",
            "nullable": true,
            "example": "EYE_BLUE"
          },
          "shoeSize": {
            "type": "string",
            "description": "Shoe size (in UK half sizes).",
            "nullable": true,
            "example": "9.5"
          }
        },
        "description": "Request object for updating a prisoner's physical attributes. Can include one or multiple attributes. If an attribute is not provided, it will not be updated.  If an attribute is provided and set to 'null' it will be updated to equal 'null'."
      },
      "PhysicalAttributesDto": {
        "type": "object",
        "properties": {
          "height": {
            "$ref": "#/components/schemas/ValueWithMetadataInteger"
          },
          "weight": {
            "$ref": "#/components/schemas/ValueWithMetadataInteger"
          },
          "hair": {
            "$ref": "#/components/schemas/ValueWithMetadataReferenceDataCodeDto"
          },
          "facialHair": {
            "$ref": "#/components/schemas/ValueWithMetadataReferenceDataCodeDto"
          },
          "face": {
            "$ref": "#/components/schemas/ValueWithMetadataReferenceDataCodeDto"
          },
          "build": {
            "$ref": "#/components/schemas/ValueWithMetadataReferenceDataCodeDto"
          },
          "leftEyeColour": {
            "$ref": "#/components/schemas/ValueWithMetadataReferenceDataCodeDto"
          },
          "rightEyeColour": {
            "$ref": "#/components/schemas/ValueWithMetadataReferenceDataCodeDto"
          },
          "shoeSize": {
            "$ref": "#/components/schemas/ValueWithMetadataString"
          }
        },
        "description": "Physical Attributes"
      },
      "ReferenceDataCodeDto": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "description",
          "domain",
          "id",
          "isActive",
          "listSequence"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "example": "FACIAL_HAIR_BEARDED"
          },
          "domain": {
            "type": "string",
            "description": "Short code for the reference data code",
            "example": "FACIAL_HAIR"
          },
          "code": {
            "type": "string",
            "description": "Short code for reference data code",
            "example": "BEARDED"
          },
          "description": {
            "type": "string",
            "description": "Description of the reference data code",
            "example": "Full Beard"
          },
          "listSequence": {
            "type": "integer",
            "description": "The sequence number of the reference data code. Used for ordering reference data correctly in lists and dropdowns. 0 is default order by description.",
            "format": "int32",
            "example": 3
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates that the reference data code is active and can be used. Inactive reference data codes are not returned by default in the API",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time the reference data code was created",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the user who created the reference data code",
            "example": "USER1234"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "The date and time the reference data code was last modified",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the user who last modified the reference data code",
            "example": "USER1234"
          },
          "deactivatedAt": {
            "type": "string",
            "description": "The date and time the reference data code was deactivated",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "deactivatedBy": {
            "type": "string",
            "description": "The username of the user who deactivated the reference data code",
            "example": "USER1234"
          }
        },
        "description": "Reference Data Code"
      },
      "ValueWithMetadataInteger": {
        "required": [
          "lastModifiedAt",
          "lastModifiedBy"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "Value",
            "format": "int32"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "Timestamp this field was last modified",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Username of the user that last modified this field",
            "example": "USER1"
          }
        },
        "description": "Weight (in kilograms)"
      },
      "ValueWithMetadataReferenceDataCodeDto": {
        "required": [
          "lastModifiedAt",
          "lastModifiedBy"
        ],
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ReferenceDataCodeDto"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "Timestamp this field was last modified",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Username of the user that last modified this field",
            "example": "USER1"
          }
        },
        "description": "Right eye colour"
      },
      "ValueWithMetadataString": {
        "required": [
          "lastModifiedAt",
          "lastModifiedBy"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "Timestamp this field was last modified",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Username of the user that last modified this field",
            "example": "USER1"
          }
        },
        "description": "Shoe size"
      },
      "ReferenceDataDomainDto": {
        "required": [
          "code",
          "createdAt",
          "createdBy",
          "description",
          "isActive",
          "listSequence",
          "referenceDataCodes"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Short code for the reference data domain",
            "example": "HAIR"
          },
          "description": {
            "type": "string",
            "description": "Description of the reference data domain",
            "example": "Hair type or colour"
          },
          "listSequence": {
            "type": "integer",
            "description": "The sequence number of the reference data domain. Used for ordering domains correctly in lists. 0 is default order by description.",
            "format": "int32",
            "example": 3
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates that the reference data domain is active and can be used. Inactive reference data domains are not returned by default in the API",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time the reference data domain was created",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the user who created the reference data domain",
            "example": "USER1234"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "The date and time the reference data domain was last modified",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the user who last modified the reference data domain",
            "example": "USER1234"
          },
          "deactivatedAt": {
            "type": "string",
            "description": "The date and time the reference data domain was deactivated",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "deactivatedBy": {
            "type": "string",
            "description": "The username of the user who deactivated the reference data domain",
            "example": "USER1234"
          },
          "referenceDataCodes": {
            "type": "array",
            "description": "The reference data codes associated with this reference data domain",
            "items": {
              "$ref": "#/components/schemas/ReferenceDataCodeDto"
            }
          }
        },
        "description": "Reference Data Domain"
      },
      "DlqMessage": {
        "required": [
          "body",
          "messageId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "messageId": {
            "type": "string"
          }
        }
      },
      "GetDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount",
          "messagesReturnedCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messagesReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        }
      },
      "HealthDto": {
        "type": "object",
        "properties": {
          "smokerOrVaper": {
            "$ref": "#/components/schemas/ReferenceDataCodeDto"
          }
        },
        "description": "Prison person health"
      },
      "PrisonPersonDto": {
        "required": [
          "health",
          "physicalAttributes",
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner Number",
            "example": "A1234AA"
          },
          "physicalAttributes": {
            "$ref": "#/components/schemas/PhysicalAttributesDto"
          },
          "health": {
            "$ref": "#/components/schemas/HealthDto"
          }
        },
        "description": "Prison Person"
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "hmpps-auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/authorize",
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          }
        },
        "openIdConnectUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/.well-known/openid-configuration"
      }
    }
  }
}
