{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "Activities management API",
    "description" : "API for management of prisoner activities",
    "contact" : {
      "name" : "HMPPS Digital Studio",
      "email" : "feedback@digital.justice.gov.uk"
    },
    "version" : "2025-03-10.25320.703aab5"
  },
  "servers" : [ {
    "url" : "https://activities-api-dev.prison.service.justice.gov.uk",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "bearer-jwt" : [ "read", "write" ]
  } ],
  "paths" : {
    "/schedules/{scheduleId}/deallocate" : {
      "put" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Deallocate offenders",
        "description" : "Deallocates offenders from an activity schedule on a future date.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "deallocate",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrisonerDeallocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "One or more prisoners were deallocated from the schedule."
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity schedule for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-instances/{instanceId}/uncancel" : {
      "put" : {
        "tags" : [ "scheduled-instance-controller" ],
        "summary" : "Un-cancels a scheduled instance.",
        "description" : "Un-cancels a previously cancelled scheduled instance.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "uncancelScheduledInstance",
        "parameters" : [ {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UncancelScheduledInstanceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The scheduled instance was successfully un cancelled."
          },
          "400" : {
            "description" : "The scheduled instance is not cancelled or it is in the past",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found, the scheduled instance does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-instances/{instanceId}/cancel" : {
      "put" : {
        "tags" : [ "scheduled-instance-controller" ],
        "summary" : "Cancel a scheduled instance",
        "description" : "Cancels scheduled instance and associated attendance records\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "cancelScheduledInstance",
        "parameters" : [ {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleInstanceCancelRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Scheduled instance successfully cancelled",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The scheduled instance was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-dlq/{dlqName}" : {
      "put" : {
        "tags" : [ "hmpps-queue-resource" ],
        "description" : "\n\nRequires one of the following roles:\n* ACTIVITY_QUEUE_ADMIN",
        "operationId" : "retryDlq",
        "parameters" : [ {
          "name" : "dlqName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetryDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-all-dlqs" : {
      "put" : {
        "tags" : [ "hmpps-queue-resource" ],
        "operationId" : "retryAllDlqs",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}" : {
      "put" : {
        "tags" : [ "hmpps-queue-resource" ],
        "description" : "\n\nRequires one of the following roles:\n* ACTIVITY_QUEUE_ADMIN",
        "operationId" : "purgeQueue",
        "parameters" : [ {
          "name" : "queueName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          }
        }
      }
    },
    "/attendances" : {
      "put" : {
        "tags" : [ "attendance-controller" ],
        "summary" : "Updates attendance records.",
        "description" : "Updates the given attendance records with the supplied update request details.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "markAttendances",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AttendanceUpdateRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The attendance records were updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{appointmentId}/uncancel" : {
      "put" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Uncancel an appointment or series of appointments",
        "description" : "\n    Uncancel an appointment or series of appointments based on the applyTo property.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "uncancelAppointment",
        "parameters" : [ {
          "name" : "appointmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentUncancelRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The appointment or series of appointments was uncancelled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{appointmentId}/cancel" : {
      "put" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Cancel an appointment or series of appointments",
        "description" : "\n    Cancel an appointment or series of appointments based on the applyTo property.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "cancelAppointment",
        "parameters" : [ {
          "name" : "appointmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentCancelRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The appointment or series of appointments was cancelled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{appointmentId}/attendance" : {
      "put" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Mark the attendance for an appointment",
        "description" : "\n    Mark or update the attendance records for the attendees of an appointment. This sets the current attendance record\n    for each supplied prison number, replacing any existing record. This supports both the initial recording of attendance\n    and changing that attendance record. There are no restrictions on when attendance can be recorded. It can be done\n    for past and future appointments.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "markAttendance",
        "parameters" : [ {
          "name" : "appointmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentAttendanceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Attendance for the appointment was recorded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/updateAttendances" : {
      "put" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Update the attendances for multiple appointments",
        "description" : "\n    Update the attendance records for attendees on multiple appointments. This sets the current attendance records\n    for the supplied prison numbers, replacing any existing records. This supports both the initial recording of attendances\n    and changing that attendance records. There are no restrictions on when attendances can be recorded. It can be done\n    for past and future appointments.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "markMultipleAttendances",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "How to mark the attendance records.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "ATTENDED", "NOT_ATTENDED", "RESET" ]
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "The lists of prison numbers to mark as attended and non-attended",
                "items" : {
                  "$ref" : "#/components/schemas/MultipleAppointmentAttendanceRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Attendance for the appointment was recorded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/waiting-list-applications/{prisonCode}/search" : {
      "post" : {
        "tags" : [ "waiting-list-application-controller" ],
        "description" : "Search waiting list applications\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* ACTIVITIES_MANAGEMENT__RO",
        "operationId" : "searchWaitingLists",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number of search results (default: 0)",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of search results per page (default: 50)",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WaitingListSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Waiting list application search results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedWaitingListApplication"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Waiting list application not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/utility/publish-events" : {
      "post" : {
        "tags" : [ "utility-controller" ],
        "summary" : "Publish an event to the domain events SNS topic.",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "publishDomainEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublishEventUtilityModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{scheduleId}/allocations" : {
      "get" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Get a list of activity schedule allocations",
        "description" : "Returns zero or more activity schedule allocations.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAllocationsBy",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "activeOnly",
          "in" : "query",
          "description" : "If true will only return active allocations. Defaults to true.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includePrisonerSummary",
          "in" : "query",
          "description" : "If true will fetch and add prisoner details from prisoner search. Defaults to false.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "If provided will filter allocations by the given date. Format YYYY-MM-DD.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The allocations for an activity schedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Allocation"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Schedule ID not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Allocate offender to schedule",
        "description" : "Allocates the supplied offender allocation request to the activity schedule.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "allocate",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrisonerAllocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The allocation was created and added to the schedule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity schedule for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-instances" : {
      "post" : {
        "tags" : [ "scheduled-instance-controller" ],
        "summary" : "Get scheduled instances by their ids",
        "description" : "Returns a list of scheduled instances.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getScheduledInstancesByIds",
        "parameters" : [ {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "The scheduled instance ids",
                "items" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The scheduled instances found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityScheduleInstance"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-events/prison/{prisonCode}" : {
      "get" : {
        "tags" : [ "scheduled-event-controller" ],
        "summary" : "Get a list of scheduled events for a prison, prisoner, date range (max 3 months) and optional time slot.",
        "description" : "\n      Returns scheduled events for the prison, prisoner, date range (max 3 months) and optional time slot.\n      Court hearings, adjudication hearings, transfers and visits come from NOMIS (via prison API).\n      Activities and appointments come from either NOMIS or the local database depending on whether the prison is\n      marked as active for appointments and/or activities.\n      (Intended usage: Prisoner calendar / schedule)\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getScheduledEventsForSinglePrisoner",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-digit prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prisonerNumber",
          "in" : "query",
          "description" : "Prisoner number (required). Format A9999AA.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date of query (required). Format YYYY-MM-DD.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date of query (required). Format YYYY-MM-DD. The end date must be within 3 months of the start date)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "timeSlot",
          "in" : "query",
          "description" : "Time slot for the events (optional). If supplied, one of AM, PM or ED.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AM", "PM", "ED" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more scheduled events found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrisonerScheduledEvents"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "scheduled-event-controller" ],
        "summary" : "Get a list of scheduled events for a prison and list of prisoner numbers for a date and time slot",
        "description" : "\n      Returns scheduled events for the prison, prisoner numbers, single date and an optional time slot.\n      Court hearings, adjudication hearings, transfers and visits come from NOMIS (via prison API).\n      Activities and appointments come from either NOMIS or the local database depending on whether the prison is\n      marked as rolled-out for activities and/or appointments.\n      (Intended usage: Unlock list)\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getScheduledEventsForMultiplePrisoners",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-character prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "The exact date to return events for (required) in format YYYY-MM-DD",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "timeSlot",
          "in" : "query",
          "description" : "Time slot of the events (optional). If supplied, one of AM, PM or ED.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AM", "PM", "ED" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "Set of prisoner numbers (required). Example ['G11234YI', 'B5234YI'].",
                "items" : {
                  "type" : "string"
                },
                "uniqueItems" : true
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more scheduled events found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrisonerScheduledEvents"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-events/prison/{prisonCode}/locations" : {
      "post" : {
        "tags" : [ "scheduled-event-controller" ],
        "summary" : "Get a list of scheduled events for a prison and list of internal location ids numbers for a date and optional time slot",
        "description" : "\n      Returns scheduled events for the prison, internal location ids, single date and an optional time slot.\n      This endpoint only returns activities and appointments and these come from the local database.\n      This endpoint supports the creation of movement lists.\n      Note that activities are only scheduled 60 days in advance. Appointments may be scheduled for any date in the future.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getScheduledEventsForMultipleLocations",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-character prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "The exact date to return events for (required) in format YYYY-MM-DD",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "timeSlot",
          "in" : "query",
          "description" : "Time slot of the events (optional). If supplied, one of AM, PM or ED.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AM", "PM", "ED" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "Set of internal location ids (required). Example [123, 456].",
                "items" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "uniqueItems" : true
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more scheduled events found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InternalLocationEvents"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rollout/prison-regime/{agencyId}" : {
      "post" : {
        "tags" : [ "rollout-controller" ],
        "summary" : "Creates a prison regime for a given prison",
        "description" : "If a regine exists it will overwrite it.  Called via migration dashboard only\n\nRequires one of the following roles:\n* MIGRATE_ACTIVITIES",
        "operationId" : "setPrisonRegimeSlots",
        "parameters" : [ {
          "name" : "agencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PrisonRegimeSlot"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrisonRegime"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/prisons/{prisonCode}/prisoner-allocations" : {
      "post" : {
        "tags" : [ "prisoner-allocation-controller" ],
        "summary" : "Get all allocations for prisoners",
        "description" : "Returns zero or more allocations for the supplied list of prisoners.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* ACTIVITIES_MANAGEMENT__RO",
        "operationId" : "prisonerAllocations",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activeOnly",
          "in" : "query",
          "description" : "If true will only return active allocations. Defaults to true.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "The required prisoner numbers (mandatory)",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The allocations for the prisoners",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrisonerAllocations"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonCode}/prison-pay-band" : {
      "post" : {
        "tags" : [ "prison-controller" ],
        "summary" : "Create a pay band for a given prison",
        "description" : "Returns the newly created pay band.\n\nRequires one of the following roles:\n* MIGRATE_ACTIVITIES\n* ACTIVITY_ADMIN",
        "operationId" : "createPayBand",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrisonPayBandCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Prison pay band created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrisonPayBand"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/allocation" : {
      "post" : {
        "tags" : [ "migrate-activity-controller" ],
        "summary" : "Migrate an allocation",
        "description" : "Migrate an allocation from NOMIS.\n\nRequires one of the following roles:\n* NOMIS_ACTIVITIES",
        "operationId" : "migrateAllocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllocationMigrateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The allocation was migrated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationMigrateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/activity" : {
      "post" : {
        "tags" : [ "migrate-activity-controller" ],
        "summary" : "Migrate an activity",
        "description" : "Migrate an activity.\n\nRequires one of the following roles:\n* NOMIS_ACTIVITIES",
        "operationId" : "migrateActivity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityMigrateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The activity was migrated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMigrateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate-appointment" : {
      "post" : {
        "tags" : [ "migrate-appointment-controller" ],
        "summary" : "Migrate an appointment from NOMIS",
        "description" : "\n    Migrate an appointment creating an appointment series with one appointment that has the supplied prisoner allocated.\n    Will return null if appointment was dropped.\n    \n\nRequires one of the following roles:\n* NOMIS_APPOINTMENTS",
        "operationId" : "migrateAppointment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentMigrateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The appointment was migrated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentInstance"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/job/purposeful-activity-reports" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job to generate purposeful activity reports and upload to s3",
        "description" : "\n      Generates 3 csv reports which are uploaded to an s3 bucket for prison performance reporting team to process for\n      purposeful activity generation purposes and to display on the prison regime dashboard in the performance hub.\n\n      Report 1) Details of attended purposeful-activity activities\n      Report 2) Details of attended purposeful-activity appointments\n      Report 3) Prison rollout table\n\n      Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.\n      ",
        "operationId" : "triggerPurposefulActivityReportsJob",
        "parameters" : [ {
          "name" : "weekOffset",
          "in" : "query",
          "description" : "Report is calculated for the week up to the prior saturday. increase offset to generate reports for weeks prior to that",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/manage-attendance-records" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job to manage attendance records in advance",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "triggerManageAttendanceRecordsJob",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "query",
          "description" : "If supplied will create attendance records for the given rolled out prison.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "If supplied will create attendance records for the given date. Default to the current date.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "withExpiry",
          "in" : "query",
          "description" : "If true will run the attendance expiry process in addition to other features. Defaults to false.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/manage-allocations" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job to manage allocations",
        "description" : "\n        One or more operations to trigger for managing allocations.\n\n        Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.\n    ",
        "operationId" : "triggerManageAllocationsJob",
        "parameters" : [ {
          "name" : "withActivate",
          "in" : "query",
          "description" : "If true will run the activate pending allocations process. Defaults to false.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "withDeallocateEnding",
          "in" : "query",
          "description" : "If true will run the deallocate allocations that are ending process. Defaults to false.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "withDeallocateExpiring",
          "in" : "query",
          "description" : "If true will run the deallocate allocations that are expiring process. Defaults to false.",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/fix-zero-pay" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job fix zero pay activities",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "triggerFixZeroPayJob",
        "parameters" : [ {
          "name" : "deallocate",
          "in" : "query",
          "description" : "If supplied will deallocate prisoners",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "makeUnpaid",
          "in" : "query",
          "description" : "If supplied will make activity unpaid",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "allocate",
          "in" : "query",
          "description" : "If supplied will reallocate prisoners",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "prisonCode",
          "in" : "query",
          "description" : "The prison code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityScheduleId",
          "in" : "query",
          "description" : "The activity schedule Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/create-scheduled-instances" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job to create the scheduled instances in advance for the active schedules on activities",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "triggerCreateScheduledInstancesJob",
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/appointments/manage-attendees" : {
      "post" : {
        "tags" : [ "appointment-job-controller" ],
        "summary" : "Starts a job to manage appointment attendees",
        "description" : "\n      Job will retrieve all future appointments starting within the number of days defined by the days after now parameter.\n      It will retrieve the attendees for these appointments and retrieve the associated prisoner records. The status, location and\n      any other pertinent information for these prisoners will be used to determine whether the attendee records should be removed.\n      \n      Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.\n    ",
        "operationId" : "triggerManageAllocationsJob_1",
        "parameters" : [ {
          "name" : "daysAfterNow",
          "in" : "query",
          "description" : "The number of days into the future to manage appointments up to a maximum of 60. The attendees for future appointments starting on those days this will be managed.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/appointments-metrics" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job to generate appointments metrics",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "triggerAppointmentsMetricsJob",
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/activities-metrics" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job to generate activity metrics",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "triggerActivityMetricsJob",
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/job/activities-fix-locations" : {
      "post" : {
        "tags" : [ "job-trigger-controller" ],
        "summary" : "Trigger the job fix zero pay activities",
        "description" : "Can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.",
        "operationId" : "triggerActivitiesLocationsJob",
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/event-review/prison/{prison}/acknowledge" : {
      "post" : {
        "tags" : [ "event-review-controller" ],
        "summary" : "Acknowledge a list of change of circumstance events in the prison.",
        "description" : "Used to indicate that a subset of change events have been acknowledged.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "acknowledgeEvents",
        "parameters" : [ {
          "name" : "prison",
          "in" : "path",
          "description" : "The prison code e.g. MDI",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventAcknowledgeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The event IDS were acknowledged.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request body",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/audit/search" : {
      "post" : {
        "tags" : [ "audit-controller" ],
        "summary" : "Search for audit records",
        "description" : "Returns all records that match the search criteria.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAuditRecords",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 3
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuditRecordSearchFilters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Search performed successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocalAuditSearchResults"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{prisonCode}/search" : {
      "post" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Search for appointments within the specified prison",
        "description" : "\n    Uses the supplied prison code and search parameters to filter and return appointment search results.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "searchAppointments",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Prison code and search parameters were accepted and results returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppointmentSearchResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/details" : {
      "post" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Get the details of appointments for display purposes by their ids",
        "description" : "Returns the displayable details of appointments by their unique identifiers.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentDetailsById",
        "parameters" : [ {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "The appointment ids",
                "items" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Appointment found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-set" : {
      "post" : {
        "tags" : [ "appointment-set-controller" ],
        "summary" : "Create a set of appointments",
        "description" : "\n    Create a set of appointments that start on the same day and add the associated prisoner as the appointment attendee.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "createAppointmentSet",
        "parameters" : [ {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentSetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The appointment set was created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSet"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-series" : {
      "post" : {
        "tags" : [ "appointment-series-controller" ],
        "summary" : "Create an appointment series with one or more appointments",
        "description" : "\n    Create an appointment series with one or more appointments and add the supplied prisoner or prisoners as appointment attendees.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "createAppointmentSeries",
        "parameters" : [ {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentSeriesCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The appointment series was created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{prisonCode}/waiting-list-application" : {
      "post" : {
        "tags" : [ "allocation-controller" ],
        "summary" : "Add a prisoner to an activity schedule waiting list",
        "description" : "Adds the supplied waiting list creation request to the activity schedule.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "addToWaitingList",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WaitingListApplicationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The waiting list entry was created and added to the schedule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity schedule in the request for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{prisonCode}/unsuspend" : {
      "post" : {
        "tags" : [ "allocation-controller" ],
        "summary" : "Suspend allocations",
        "description" : "Add a suspension end date to a list of allocations\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "unsuspend",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnsuspendPrisonerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The suspensions were updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Allocation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{prisonCode}/suspend" : {
      "post" : {
        "tags" : [ "allocation-controller" ],
        "summary" : "Suspend allocations",
        "description" : "Add a suspension start date to a list of allocations, accompanied by an optional case note.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "suspend",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SuspendPrisonerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The suspensions were updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Allocation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/activities" : {
      "post" : {
        "tags" : [ "activity-controller" ],
        "summary" : "Create an activity",
        "description" : "Create an activity\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The activity was created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/waiting-list-applications/{waitingListId}" : {
      "get" : {
        "tags" : [ "waiting-list-application-controller" ],
        "summary" : "Get a waiting list application by its id",
        "description" : "Returns a single waiting list application by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getWaitingListById",
        "parameters" : [ {
          "name" : "waitingListId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Waiting list application found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WaitingListApplication"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The waiting list application for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "waiting-list-application-controller" ],
        "description" : "Update a waiting list application.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "updateWaitingList",
        "parameters" : [ {
          "name" : "waitingListId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WaitingListApplicationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The updated waiting list application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WaitingListApplication"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Waiting list application not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonCode}/prison-pay-band/{prisonPayBandId}" : {
      "patch" : {
        "tags" : [ "prison-controller" ],
        "summary" : "Update a pay band for a given prison",
        "description" : "Returns the updated pay band.\n\nRequires one of the following roles:\n* MIGRATE_ACTIVITIES\n* ACTIVITY_ADMIN",
        "operationId" : "updatePayBand",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prisonPayBandId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrisonPayBandUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Prison pay band updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrisonPayBand"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{appointmentId}" : {
      "patch" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Update an appointment or series of appointments",
        "description" : "\n    Update an appointment or series of appointments based on the applyTo property.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "updateAppointment",
        "parameters" : [ {
          "name" : "appointmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The appointment or series of appointments was updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{prisonCode}/allocationId/{allocationId}" : {
      "patch" : {
        "tags" : [ "allocation-controller" ],
        "summary" : "Update an allocation",
        "description" : "Update an allocation\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "allocationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllocationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The allocation was updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Allocation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Allocation ID not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{prisonCode}/activityId/{activityId}" : {
      "patch" : {
        "tags" : [ "activity-controller" ],
        "summary" : "Update an activity",
        "description" : "Update an activity\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The activity was updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Activity ID not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/synchronisation/reconciliation/attendances/{prisonId}" : {
      "get" : {
        "tags" : [ "synchronisation-controller" ],
        "summary" : "Retrieves attendance details for the sync reconciliation",
        "description" : "Retrieves booking numbers and counts for paid attendances in the prison on the date\n\nRequires one of the following roles:\n* NOMIS_ACTIVITIES",
        "operationId" : "getAttendanceReconciliation",
        "parameters" : [ {
          "name" : "prisonId",
          "in" : "path",
          "description" : "Prison id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Prison id"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Attendance date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date",
            "description" : "Attendance date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reconciliation information retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttendanceReconciliationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "There was an error with the request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/synchronisation/reconciliation/allocations/{prisonId}" : {
      "get" : {
        "tags" : [ "synchronisation-controller" ],
        "summary" : "Retrieves allocation details for the sync reconciliation",
        "description" : "Retrieves booking numbers and counts for allocations currently active in each prison\n\nRequires one of the following roles:\n* NOMIS_ACTIVITIES",
        "operationId" : "getAllocationReconciliation",
        "parameters" : [ {
          "name" : "prisonId",
          "in" : "path",
          "description" : "Prison id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Prison id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reconciliation information retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationReconciliationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "There was an error with the request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/synchronisation/attendance/{attendanceId}" : {
      "get" : {
        "tags" : [ "synchronisation-controller" ],
        "summary" : "Retrieves Nomis synchronisation details",
        "description" : "Retrieves all details required in order to synchronise an attendance with the Nomis database.\n\nRequires one of the following roles:\n* NOMIS_ACTIVITIES",
        "operationId" : "getAttendanceSync",
        "parameters" : [ {
          "name" : "attendanceId",
          "in" : "path",
          "description" : "Attendance id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Attendance id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Attendance retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttendanceSync"
                }
              }
            }
          },
          "400" : {
            "description" : "There was an error with the request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Attendance not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subject-access-request" : {
      "get" : {
        "tags" : [ "Subject Access Request" ],
        "summary" : "Provides content for a prisoner to satisfy the needs of a subject access request on their behalf",
        "description" : "Requires role SAR_DATA_ACCESS or additional role as specified by hmpps.sar.additionalAccessRole configuration.\n\nRequires one of the following roles:\n* SAR_DATA_ACCESS\n* SAR_DATA_ACCESS",
        "operationId" : "getSarContentByReference",
        "parameters" : [ {
          "name" : "prn",
          "in" : "query",
          "description" : "NOMIS Prison Reference Number",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "crn",
          "in" : "query",
          "description" : "nDelius Case Reference Number",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "Optional parameter denoting minimum date of event occurrence which should be returned in the response",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "Optional parameter denoting maximum date of event occurrence which should be returned in the response",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request successfully processed - content found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HmppsSubjectAccessRequestContent"
                }
              }
            }
          },
          "204" : {
            "description" : "Request successfully processed - no content found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "209" : {
            "description" : "Subject Identifier is not recognised by this service",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "The client does not have authorisation to make this request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Unexpected error occurred",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{scheduleId}" : {
      "get" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Get an activity schedule by its id",
        "description" : "Returns a single activity schedule by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getScheduleById",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "earliestSessionDate",
          "in" : "query",
          "description" : "If provided will filter earliest sessions >= the given date. Format YYYY-MM-DD, otherwise defaults to 4 weeks prior to the current date.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Activity found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivitySchedule"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{scheduleId}/waiting-list-applications" : {
      "get" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Get a schedules waiting list applications",
        "description" : "Returns zero or more activity schedule waiting list applications.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getWaitingListApplicationsBy",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The waiting list applications for an activity schedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WaitingListApplication"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Schedule ID not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{scheduleId}/suitability" : {
      "get" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Gets the suitability details of a candidate for an activity",
        "description" : "Returns candidate suitability details considering factors such as, workplace risk assessment, incentive level, education levels, earliest release date and non-associations\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "allocationSuitability",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "prisonerNumber",
          "in" : "query",
          "description" : "Prisoner number (required). Format A9999AA.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Candidate suitability details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationSuitability"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity schedule for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{scheduleId}/non-associations" : {
      "get" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Get non-associations for a prisoner within an activity schedule",
        "description" : "Returns a list of non-associations for the prisoner.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getNonAssociations",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "prisonerNumber",
          "in" : "query",
          "description" : "Prisoner number. Format A9999AA.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get non-associations for the prisoner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NonAssociationDetails"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/schedules/{scheduleId}/candidates" : {
      "get" : {
        "tags" : [ "activity-schedule-controller" ],
        "summary" : "Get the suitable candidates for an activity",
        "description" : "Returns a paginated view of the list of candidates suitable for a given activity schedule. Filterable by employment status, workplace risk assessment, and incentive level.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "candidates",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "suitableIncentiveLevel",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "suitableRiskLevel",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "suitableForEmployed",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "noAllocations",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page index (0..N)",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 0,
            "minimum" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page to be returned",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "default" : 10,
            "minimum" : 1
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paginated list of candidates was returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageActivityCandidate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity schedule for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-instances/{instanceId}" : {
      "get" : {
        "tags" : [ "scheduled-instance-controller" ],
        "summary" : "Get a scheduled instance by ID",
        "description" : "Returns a scheduled instance.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getScheduledInstanceById",
        "parameters" : [ {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Scheduled instance found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityScheduleInstance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The scheduled instance was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-instances/{instanceId}/scheduled-attendees" : {
      "get" : {
        "tags" : [ "scheduled-instance-controller" ],
        "summary" : "Get a list of scheduled attendees for a scheduled instance",
        "description" : "Returns a list of prisoners who are scheduled to attend a given scheduled instance.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getScheduledAttendeesByScheduledInstance",
        "parameters" : [ {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Scheduled attendees found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduledAttendee"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The scheduled instance was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scheduled-instances/attendance-summary" : {
      "get" : {
        "tags" : [ "scheduled-instance-controller" ],
        "summary" : "Attendance summary of activity sessions for a given date",
        "description" : "Attendance summary of activity sessions for a given date\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "attendanceSummary",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "query",
          "description" : "The prison code of the prison to return an attendance summary for",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "MDI"
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "The date of the attendance summary. Format, YYYY-MM-DD.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "example" : "2023-09-20"
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Attendance summary",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduledInstanceAttendanceSummary"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The scheduled instance was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rollout" : {
      "get" : {
        "tags" : [ "rollout-controller" ],
        "summary" : "Get all rollout prisons",
        "description" : "Returns a list of all rolled out prisons.\n\nRequires one of the following roles:\n* ACTIVITY_ADMIN",
        "operationId" : "getRolledOutPrisons",
        "parameters" : [ {
          "name" : "prisonsLive",
          "in" : "query",
          "description" : "Restrict the list of rolled out prisons to prisons live to users",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of prisons that are rolled out",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RolloutPrisonPlan"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rollout/{prisonCode}" : {
      "get" : {
        "tags" : [ "rollout-controller" ],
        "summary" : "Get a prison's rollout plan by prison code",
        "description" : "Returns a single prison and its activities management service rollout plan by its unique code.\n\nRequires one of the following roles:\n* ACTIVITY_ADMIN",
        "operationId" : "getPrisonByCode",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Prison rollout plan found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RolloutPrisonPlan"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}" : {
      "get" : {
        "tags" : [ "hmpps-queue-resource" ],
        "description" : "\n\nRequires one of the following roles:\n* ACTIVITY_QUEUE_ADMIN",
        "operationId" : "getDlqMessages",
        "parameters" : [ {
          "name" : "dlqName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "maxMessages",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/prisons/{prisonCode}/scheduled-instances" : {
      "get" : {
        "tags" : [ "activity-schedule-instance-controller" ],
        "summary" : "Get a list of scheduled instances for a prison, date range (max 3 months) and time slot (AM, PM or ED - optional)",
        "description" : "Returns zero or more scheduled instances for a prison and date range (max 3 months).\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getActivityScheduleInstancesByDateRange",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-character prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date of query (required). Format YYYY-MM-DD.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date of query (required). The end date must be within 3 months of the start date.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "slot",
          "in" : "query",
          "description" : "The time slot (optional). If supplied, one of AM, PM or ED.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AM", "PM", "ED" ]
          }
        }, {
          "name" : "cancelled",
          "in" : "query",
          "description" : "Return cancelled scheduled instances?",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more scheduled instance records found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityScheduleInstance"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonCode}/prison-pay-bands" : {
      "get" : {
        "tags" : [ "prison-controller" ],
        "summary" : "Get a list of pay bands at a given prison",
        "description" : "Returns the pay bands at a given prison or a default list of values if none present.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getPrisonPayBands",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Prison pay bands found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrisonPayBand"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonCode}/activities" : {
      "get" : {
        "tags" : [ "prison-controller" ],
        "summary" : "Get list of activities running at a specified prison. Optionally and by default, only currently LIVE activities are returned",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* ACTIVITIES_MANAGEMENT__RO",
        "operationId" : "getActivities",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeArchived",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Activities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivitySummary"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/prison-regime/{prisonCode}" : {
      "get" : {
        "tags" : [ "prison-controller" ],
        "summary" : "Get a prison regime by its code",
        "description" : "Returns a single prison regime and its details by its unique prison code.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getPrisonRegimeByPrisonCode",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Prison regime found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrisonRegime"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate-appointment/{prisonCode}/summary" : {
      "get" : {
        "tags" : [ "migrate-appointment-controller" ],
        "summary" : "Get the list of appointment categories",
        "description" : "\n\nRequires one of the following roles:\n* NOMIS_APPOINTMENTS\n* MIGRATE_APPOINTMENTS",
        "operationId" : "migratedAppointmentsSummary",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-digit prison code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Inclusive start date of migrated appointments. Must be today or in the future",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "categoryCodes",
          "in" : "query",
          "description" : "A list of category codes to retrieve summaries appointments",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment summary details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppointmentCountSummary"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonCode}" : {
      "get" : {
        "tags" : [ "location-controller" ],
        "summary" : "List of cell locations for a prison group supplied as a query parameter",
        "description" : "List of cell locations for a prison group supplied as a query parameter\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getCellLocationsForGroup",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more cell locations found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonCode}/location-prefix" : {
      "get" : {
        "tags" : [ "location-controller" ],
        "summary" : "Get the location prefix for a location group supplied as a query parameter",
        "description" : "Get location prefix for a location group name supplied as a query parameter\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getLocationPrefixForGroup",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - Location prefix found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationPrefixDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonCode}/location-groups" : {
      "get" : {
        "tags" : [ "location-controller" ],
        "summary" : "List of all available location groups defined at a prison",
        "description" : "List of all available location groups defined at a prison\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getLocationGroups",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more location groups found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LocationGroup"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonCode}/events-summaries" : {
      "get" : {
        "tags" : [ "location-controller" ],
        "summary" : "\n      Get a list of internal locations that have events scheduled to take place on the specified date and optional time slot.\n      ",
        "description" : "\n      Returns internal locations that have events scheduled to take place on the specified date and optional time slot.\n      Will contain summary information about the events taking place at the location as well as the total number of\n      prisoners due to arrive at the location. This endpoint supports the creation of movement lists allowing\n      users to select from a sublist of only the internal locations that have events scheduled there.\n      Note that activities are only scheduled 60 days in advance. Appointments may be scheduled for any date in the future.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getInternalLocationEventsSummary",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-digit prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Date of scheduled events (required). Format YYYY-MM-DD",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "timeSlot",
          "in" : "query",
          "description" : "Time slot for the scheduled events (optional). If supplied, one of AM, PM or ED.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "AM", "PM", "ED" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more internal locations with scheduled events found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLocationEventsSummary"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event-review/prison/{prisonCode}" : {
      "get" : {
        "tags" : [ "event-review-controller" ],
        "summary" : "Get events for a prison which may indicate that a change of circumstances affecting allocations had occurred",
        "description" : "Returns events in the prison which match the search criteria provided.\n\nRequires one of the following roles:\n* ACTIVITY_HUB\n* ACTIVITY_ADMIN",
        "operationId" : "getEventsForReview",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The prison code e.g. MDI",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "The date for which to request events, format YYYY-MM-DD, e.g. 2023-10-01",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "prisonerNumber",
          "in" : "query",
          "description" : "The prisoner number, eg. A9999AA (optional). Default is all prisoner numbers.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeAcknowledged",
          "in" : "query",
          "description" : "Whether to include acknowledged events (optional). Default is false.",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page number to return (optional). Default is page zero.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0,
            "minimum" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The maximum number of items to return in each page (optional). Default is 10.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "The sort direction based on the time the events occurred. Default is ascending.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "ascending"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Search performed successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventReviewSearchResults"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attendances/{prisonCode}/{sessionDate}" : {
      "get" : {
        "tags" : [ "attendance-controller" ],
        "summary" : "Get a daily list of attendances",
        "description" : "Returns an attendance list.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAttendanceByDate",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionDate",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "eventTier",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Attendance list found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AllAttendance"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attendances/{prisonCode}/suspended" : {
      "get" : {
        "tags" : [ "attendance-controller" ],
        "summary" : "gets a list of suspended prisoner attendance activities for a given date",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAttendanceForSuspendedPrisoners",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-character prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "date of query (required). Format YYYY-MM-DD.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "reason",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categories",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SAA_EDUCATION", "SAA_INDUSTRIES", "SAA_PRISON_JOBS", "SAA_GYM_SPORTS_FITNESS", "SAA_INDUCTION", "SAA_INTERVENTIONS", "SAA_FAITH_SPIRITUALITY", "SAA_NOT_IN_WORK", "SAA_OTHER" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuspendedPrisonerAttendance"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attendances/{attendanceId}" : {
      "get" : {
        "tags" : [ "attendance-controller" ],
        "summary" : "Get an attendance by ID",
        "description" : "Returns an attendance.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAttendanceById",
        "parameters" : [ {
          "name" : "attendanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Attendance found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attendance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The attendance was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attendance-reasons" : {
      "get" : {
        "tags" : [ "attendance-reason-controller" ],
        "summary" : "Get the list of attendance reasons",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAttendanceReasons",
        "responses" : {
          "200" : {
            "description" : "Attendance reasons found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttendanceReason"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{prisonCode}/{status}/attendance" : {
      "get" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "\n    Get a list of appointments scheduled to take place on the specified date by status\n    ",
        "description" : "\n    Returns appointments scheduled to take place on the specified date by status\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentAttendanceByStatus",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-character prison code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "attendance status",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ATTENDED", "NOT_ATTENDED", "CANCELLED", "NOT_RECORDED", "EVENT_TIER" ]
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Date of appointments. Format YYYY-MM-DD",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "categoryCode",
          "in" : "query",
          "description" : "appointment category code",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customName",
          "in" : "query",
          "description" : "appointment custom name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prisonerNumber",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventTier",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ]
          }
        }, {
          "name" : "organiserCode",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more scheduled appointments found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentAttendeeByStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{prisonCode}/attendance-summaries" : {
      "get" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "\n    Get a list of appointments scheduled to take place on the specified date along with the summary of their attendance.\n    ",
        "description" : "\n    Returns appointments scheduled to take place on the specified date along with the summary of their attendance.\n    Will contain summary information about the appointments taking place on the date as well as counts of attendees,\n    counts of those marked attended and non attended and the count of attendees with no attendance marked.\n    This endpoint supports management level views of appointment attendance and statistics.\n    \n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentAttendanceSummaries",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-digit prison code (required)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Date of appointments (required). Format YYYY-MM-DD",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "categoryCode",
          "in" : "query",
          "description" : "appointment category code",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customName",
          "in" : "query",
          "description" : "appointment custom name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful call - zero or more scheduled appointments found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentAttendanceSummary"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Requested resource not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{appointmentId}/details" : {
      "get" : {
        "tags" : [ "appointment-controller" ],
        "summary" : "Get the details of an appointment for display purposes by its id",
        "description" : "Returns the displayable details of an appointment by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentDetailsById_1",
        "parameters" : [ {
          "name" : "appointmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-set/{appointmentSetId}/details" : {
      "get" : {
        "tags" : [ "appointment-set-controller" ],
        "summary" : "Get the details of an appointment set for display purposes by its id",
        "description" : "Returns the displayable details of an appointment set by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentSetDetailsById",
        "parameters" : [ {
          "name" : "appointmentSetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment set found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSetDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment set for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-series/{appointmentSeriesId}" : {
      "get" : {
        "tags" : [ "appointment-series-controller" ],
        "summary" : "Get an appointment series by its id",
        "description" : "Returns an appointment series with its properties and references to NOMIS by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentSeriesById",
        "parameters" : [ {
          "name" : "appointmentSeriesId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment series found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeries"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment series for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-series/{appointmentSeriesId}/details" : {
      "get" : {
        "tags" : [ "appointment-series-controller" ],
        "summary" : "Get the details of an appointment series for display purposes by its id",
        "description" : "Returns the displayable details of an appointment series by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentDetailsById_2",
        "parameters" : [ {
          "name" : "appointmentSeriesId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment series found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSeriesDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment series for this id was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-locations/{prisonCode}" : {
      "get" : {
        "tags" : [ "appointment-location-controller" ],
        "summary" : "Get the list of appointment locations",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentLocations",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment locations found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppointmentLocationSummary"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-instances/{appointmentInstanceId}" : {
      "get" : {
        "tags" : [ "appointment-instance-controller" ],
        "summary" : "Get an appointment instance by its id",
        "description" : "Returns an appointment instance and its details by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getAppointmentInstanceById",
        "parameters" : [ {
          "name" : "appointmentInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Appointment instance found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentInstance"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The appointment instance for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/appointment-categories" : {
      "get" : {
        "tags" : [ "appointment-category-controller" ],
        "summary" : "Get the list of appointment categories",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getAppointmentCategories",
        "responses" : {
          "200" : {
            "description" : "Appointment categories found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppointmentCategorySummary"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/id/{allocationId}" : {
      "get" : {
        "tags" : [ "allocation-controller" ],
        "summary" : "Get an allocation by its id",
        "description" : "Returns a single allocation and its details by its unique identifier.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getAllocationById",
        "parameters" : [ {
          "name" : "allocationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Caseload-Id",
          "in" : "header",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "allocation found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Allocation"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The allocation for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/deallocation-reasons" : {
      "get" : {
        "tags" : [ "allocation-controller" ],
        "summary" : "Get the list of deallocation reasons",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getDeallocationReasons",
        "responses" : {
          "200" : {
            "description" : "Deallocation reasons found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeallocationReason"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/activity-categories" : {
      "get" : {
        "tags" : [ "activity-category-controller" ],
        "summary" : "Get the list of top-level activity categories",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getCategories",
        "responses" : {
          "200" : {
            "description" : "Activity categories found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityCategory"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{activityId}/schedules" : {
      "get" : {
        "tags" : [ "activity-controller" ],
        "summary" : "Get the capacity and number of allocated slots in an activity",
        "description" : "\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN",
        "operationId" : "getActivitySchedules",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Activity schedules",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityScheduleLite"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Activity ID not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{activityId}/filtered" : {
      "get" : {
        "tags" : [ "activity-controller" ],
        "summary" : "Get an activity by its ID with limited instances (by date)",
        "description" : "Returns a single activity by activity ID with limited instances.\n\nRequires one of the following roles:\n* PRISON\n* ACTIVITY_ADMIN\n* NOMIS_ACTIVITIES",
        "operationId" : "getActivityByIdWithFilters",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "earliestSessionDate",
          "in" : "query",
          "description" : "The date of the earliest scheduled instances to include. Defaults to newer than 1 month ago.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Activity found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Activity"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The activity for this ID was not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/delete-activity/prison/{prisonCode}/id/{activityId}" : {
      "delete" : {
        "tags" : [ "migrate-activity-controller" ],
        "summary" : "Delete an activity with cascade.",
        "description" : "\n      Deletes an activity and all its child entities including schedule, slots, pay, instances, attendances and allocations.\n      Only for use via by migration services to undo a failed migration.\n      \n\nRequires one of the following roles:\n* NOMIS_ACTIVITIES",
        "operationId" : "deleteActivity",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The prison code where this activity exists",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityId",
          "in" : "path",
          "description" : "The activity ID to remove",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The activity was deleted."
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden, requires an appropriate role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate-appointment/{prisonCode}" : {
      "delete" : {
        "tags" : [ "migrate-appointment-controller" ],
        "summary" : "\n      Starts a job to delete migrated appointments taking place at the supplied prison code that start on or after the\n      supplied start date and are assigned the optional category code.\n      ",
        "description" : "\n      Migrated appointments matching the supplied criteria will be soft deleted in the database. An appointment instance\n      deleted domain event used for syncing will be published for each deleted appointment. This will cause the mapped\n      appointment in NOMIS to also be deleted.\n    \n\nRequires one of the following roles:\n* NOMIS_APPOINTMENTS\n* ACTIVITY_ADMIN\n* MIGRATE_APPOINTMENTS",
        "operationId" : "deleteMigratedAppointments",
        "parameters" : [ {
          "name" : "prisonCode",
          "in" : "path",
          "description" : "The 3-digit prison code.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Inclusive start date of migrated appointments to be deleted. Must be today or in the future",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "categoryCode",
          "in" : "query",
          "description" : "The category code assigned to migrated appointments to be deleted.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Migrated appointments matching the supplied criteria are being deleted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppointmentSearchResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorised, requires a valid Oauth2 token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddCaseNoteRequest" : {
        "type" : "object",
        "description" : "Describes a case note to be added to a prisoner's profile",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Case Note Type",
            "enum" : [ "GEN", "NEG" ],
            "example" : "GEN"
          },
          "text" : {
            "type" : "string",
            "description" : "The text which will appear on the case note.",
            "maxLength" : 3800,
            "minLength" : 0
          }
        },
        "required" : [ "text", "type" ]
      },
      "PrisonerDeallocationRequest" : {
        "type" : "object",
        "description" : "The prisoner deallocation request details",
        "properties" : {
          "prisonerNumbers" : {
            "type" : "array",
            "description" : "The prisoner or prisoners to be deallocated. Must be allocated to the schedule affected by the request.",
            "items" : {
              "type" : "string"
            }
          },
          "reasonCode" : {
            "type" : "string",
            "description" : "The reason code for the deallocation",
            "enum" : [ "COMPLETED", "TRANSFERRED", "WITHDRAWN_STAFF", "WITHDRAWN_OWN", "DISMISSED", "HEALTH", "OTHER", "SECURITY" ],
            "example" : "RELEASED"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The future date on which this allocation will end. Must not exceed the end date of the allocation, schedule or activity.",
            "example" : "2023-05-24"
          },
          "caseNote" : {
            "$ref" : "#/components/schemas/AddCaseNoteRequest",
            "description" : "Describes a case note to be added to the prisoner's profile as part of the deallocation."
          },
          "scheduleInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The scheduled instance id required when de-allocation is a session later today"
          }
        },
        "required" : [ "endDate", "prisonerNumbers", "reasonCode" ]
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userMessage" : {
            "type" : "string"
          },
          "developerMessage" : {
            "type" : "string"
          },
          "moreInfo" : {
            "type" : "string"
          }
        },
        "required" : [ "status" ]
      },
      "UncancelScheduledInstanceRequest" : {
        "type" : "object",
        "description" : "The uncancel request with the user details",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "The username of the user performing the unschedule operation",
            "example" : "RJ56DDE"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The displayName of the user performing the unschedule operation",
            "example" : "Bob Adams"
          }
        },
        "required" : [ "displayName", "username" ]
      },
      "ScheduleInstanceCancelRequest" : {
        "type" : "object",
        "description" : "The scheduled instance cancellation request",
        "properties" : {
          "reason" : {
            "type" : "string",
            "description" : "The reason for cancelling the schedule instance",
            "example" : "No tutor available",
            "maxLength" : 100,
            "minLength" : 0
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the user cancelling the schedule instance",
            "example" : "RJ56DDE"
          },
          "comment" : {
            "type" : "string",
            "description" : "A field for any additional comments",
            "example" : "Resume tomorrow"
          }
        },
        "required" : [ "reason", "username" ]
      },
      "RetryDlqResult" : {
        "type" : "object",
        "properties" : {
          "messagesFoundCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "messagesFoundCount" ]
      },
      "PurgeQueueResult" : {
        "type" : "object",
        "properties" : {
          "messagesFoundCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "messagesFoundCount" ]
      },
      "AttendanceUpdateRequest" : {
        "type" : "object",
        "description" : "Request object for updating an attendance record",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this attendance",
            "example" : 123456
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code",
            "example" : "MDI"
          },
          "status" : {
            "type" : "string",
            "description" : "The status - WAITING, COMPLETED",
            "enum" : [ "WAITING", "COMPLETED" ],
            "example" : "WAITING"
          },
          "attendanceReason" : {
            "type" : "string",
            "description" : "The reason codes- SICK, REFUSED, NOT_REQUIRED, REST, CLASH, OTHER, SUSPENDED, CANCELLED, ATTENDED",
            "example" : "ATTENDED"
          },
          "comment" : {
            "type" : "string",
            "description" : "Comments such as more detail for SICK",
            "example" : "Prisoner has COVID-19"
          },
          "issuePayment" : {
            "type" : "boolean",
            "description" : "Should payment be issued for SICK, REST or OTHER. Will be ignored if the activity is unpaid.",
            "example" : true
          },
          "caseNote" : {
            "type" : "string",
            "description" : "Case note provided for REFUSED",
            "example" : "Prisoner refused to attend the scheduled activity without reasonable excuse",
            "maxLength" : 3800,
            "minLength" : 0
          },
          "incentiveLevelWarningIssued" : {
            "type" : "boolean",
            "description" : "Was an incentive level warning issued for REFUSED",
            "example" : true
          },
          "otherAbsenceReason" : {
            "type" : "string",
            "description" : "The absence reason for OTHER",
            "example" : "Prisoner has another reason for missing the activity"
          }
        },
        "required" : [ "id", "prisonCode", "status" ]
      },
      "AppointmentUncancelRequest" : {
        "type" : "object",
        "description" : "The uncancel request with the uncancellation details and how to apply the uncancellation",
        "properties" : {
          "applyTo" : {
            "type" : "string",
            "description" : "\n    Specifies which appointment or appointments this un-cancellation should apply to.\n    Defaults to THIS_APPOINTMENT meaning the un-cancellation will be applied to the appointment specified by the\n    supplied id only.\n    ",
            "enum" : [ "THIS_APPOINTMENT", "THIS_AND_ALL_FUTURE_APPOINTMENTS", "ALL_FUTURE_APPOINTMENTS" ],
            "example" : "THIS_APPOINTMENT"
          }
        },
        "required" : [ "applyTo" ]
      },
      "Appointment" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment\" and represents the scheduled event on a specific date and time.\n  All updates and cancellations happen at this appointment level with the parent appointment series being immutable.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment",
            "example" : 123456
          },
          "sequenceNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The sequence number of this appointment within the appointment series",
            "example" : 3
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS REFERENCE_CODES.CODE (DOMAIN = 'INT_SCH_RSN') value for mapping to NOMIS",
            "example" : "CHAP"
          },
          "tier" : {
            "$ref" : "#/components/schemas/EventTier",
            "description" : "The tier for this appointment, as defined by the Future Prison Regime team"
          },
          "organiser" : {
            "$ref" : "#/components/schemas/EventOrganiser",
            "description" : "The organiser of this appointment"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID value for mapping to NOMIS.\n    Will be null if in cell = true\n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment is in cell rather than an internal prison location.\n    Internal location id should be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date this appointment is taking place on"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of this appointment",
            "example" : "13:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of this appointment",
            "example" : "13:30"
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner or prisoners attending this appointment.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that created the appointment.\n    Usually a NOMIS username\n    ",
            "example" : "AAA01U"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was last changed.\n    Will be null if this appointment has not been altered since it was created\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that edited this appointment.\n    Will be null if this appointment has not been altered since it was created\n    ",
            "example" : "AAA01U"
          },
          "cancelledTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was cancelled.\n    Will be null if this appointment has not been cancelled\n    "
          },
          "cancellationReasonId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The id of the reason why this appointment was cancelled.\n    Will be null if this appointment has not been cancelled\n    ",
            "example" : 12345
          },
          "cancelledBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that cancelled this appointment.\n    Will be null if this appointment has not been cancelled\n    ",
            "example" : "AAA01U"
          },
          "isDeleted" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been deleted and removed from scheduled events.\n    ",
            "example" : false
          },
          "attendees" : {
            "type" : "array",
            "description" : "\n    The prisoner or prisoners attending this appointment. Single appointments such as medical will have one\n    attendee. A group appointment e.g. gym or chaplaincy sessions will have more than one attendee.\n    Attendees are at the appointment level supporting alteration of attendees in any future appointment.\n    ",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentAttendee"
            }
          },
          "isCancelled" : {
            "type" : "boolean"
          }
        },
        "required" : [ "attendees", "categoryCode", "createdBy", "createdTime", "id", "inCell", "isCancelled", "isDeleted", "prisonCode", "sequenceNumber", "startDate", "startTime" ]
      },
      "AppointmentAttendee" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Attendee\". A prisoner attending a specific appointment in an appointment series or set.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The internally generated identifier for this prisoner attending a specific appointment in an appointment series or set.\n    N.B. this is used as the appointment instance id due to there being a one to one relationship between an appointment\n    attendee and appointment instances.\n    ",
            "example" : 123456
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The NOMIS OFFENDERS.OFFENDER_ID_DISPLAY value for mapping to a prisoner record in NOMIS",
            "example" : "A1234BC"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS OFFENDER_BOOKINGS.OFFENDER_BOOK_ID value for mapping to a prisoner booking record in NOMIS",
            "example" : 456
          },
          "addedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this attendee was added appointment.\n    Will be null if this attendee was part of the appointment when the appointment was created\n    "
          },
          "addedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that added this attendee to the appointment.\n    Will be null if this attendee was part of the appointment when the appointment was created\n    ",
            "example" : "AAA01U"
          },
          "attended" : {
            "type" : "boolean",
            "description" : "\n    Specifies whether the prisoner attended the specific appointment in an appointment series or set.\n    A null value means that the prisoner's attendance has not been recorded yet. \n    "
          },
          "attendanceRecordedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The latest date and time attendance was recorded. Note that attendance records can be updated and this is the most\n    recent date and time it was recorded. A null value means that the prisoner's attendance has not been recorded yet. \n    "
          },
          "attendanceRecordedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that last recorded attendance. Note that attendance records\n    can be updated and this is the most recent user that marked attendance. A null value means that the prisoner's\n    attendance has not been recorded yet. \n    ",
            "example" : "AAA01U"
          },
          "removedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this attendee was removed from the appointment.\n    Will be null if this attendee has not been removed from the appointment\n    "
          },
          "removalReasonId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The id of the reason why this attendee was removed from the appointment.\n    Will be null if this attendee has not been removed from the appointment\n    ",
            "example" : 12345
          },
          "removedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that removed this attendee from the appointment.\n    Will be null if this attendee has not been removed from the appointment\n    ",
            "example" : "AAA01U"
          }
        },
        "required" : [ "bookingId", "id", "prisonerNumber" ]
      },
      "AppointmentSeries" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment series\" and only shown for repeat appointments.\n  The top level of the standard appointment hierarchy containing the initial property values common to all appointments\n  in the series.\n  Contains the collection of all the child appointments in the series plus the schedule definition if the appointment series repeats.\n  The properties at this level cannot be changed via the API however the child appointment property values can be changed\n  independently to support rescheduling, cancelling and altered attendee lists per appointment.\n  N.B. there is no collection of attending prisoners at this top level as all attendees are per appointment. This is to\n  support attendee modification for each scheduled appointment and to prevent altering the past by editing attendees\n  in an appointment series where some appointments have past.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment series",
            "example" : 12345
          },
          "appointmentType" : {
            "type" : "string",
            "description" : "The appointment type (INDIVIDUAL or GROUP)",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS REFERENCE_CODES.CODE (DOMAIN = 'INT_SCH_RSN') value for mapping to NOMIS",
            "example" : "CHAP"
          },
          "tier" : {
            "$ref" : "#/components/schemas/EventTier",
            "description" : "The tier for this appointment, as defined by the Future Prison Regime team"
          },
          "organiser" : {
            "$ref" : "#/components/schemas/EventOrganiser",
            "description" : "The organiser of this appointment"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment series. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID value for mapping to NOMIS.\n    Will be null if in cell = true\n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment series is in cell rather than an internal prison location.\n    Internal location id should be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the first appointment in the series"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of the appointment or appointments in the series",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the appointment or appointments in the series",
            "example" : "10:30"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/AppointmentSeriesSchedule",
            "description" : "\n    Describes the schedule of the appointment series i.e. how the appointments in the series repeat. The frequency of\n    those appointments and how many appointments there are in total in the series.\n    If null, the appointment series has only one appointment. Note that the presence of this property does not mean\n    there is more than one appointment as a number of appointments value of one is valid.\n    "
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner or prisoners attending the appointment or appointments in the series.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment series was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that created the appointment series.\n    Usually a NOMIS username\n    ",
            "example" : "AAA01U"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time one or more appointments in this series was last changed.\n    Will be null if no appointments in the series have been altered since they were created\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that last edited one or more appointments in this series.\n    Will be null if no appointments in the series have been altered since they were created\n    ",
            "example" : "AAA01U"
          },
          "appointments" : {
            "type" : "array",
            "description" : "\n    The individual appointment or appointments in this series. Non recurring appointment series will have a single\n    appointment containing the same property values as the parent appointment series. The same start date, time\n    and end time. Recurring appointment series will have one or more appointments. The first in the series will also\n    contain the same property values as the parent appointment series and subsequent appointments will have start dates\n    following on from the original start date incremented as specified by the series' schedule. Each appointment\n    can be edited independently of the parent. All properties of an appointment are separate to those of the parent\n    appointment series. The full series of appointments specified by the schedule will have been created in advance.\n    ",
            "items" : {
              "$ref" : "#/components/schemas/Appointment"
            }
          }
        },
        "required" : [ "appointmentType", "appointments", "categoryCode", "createdBy", "createdTime", "id", "inCell", "prisonCode", "startDate", "startTime" ]
      },
      "AppointmentSeriesSchedule" : {
        "type" : "object",
        "description" : "\n  Describes the schedule of the appointment i.e. how the appointments in the series will repeat. The frequency of\n  those appointments and how many appointments there will be in total in the series.\n  ",
        "properties" : {
          "frequency" : {
            "type" : "string",
            "description" : "\n    The frequency of the appointments in the repeating appointment series. When they will repeat and how often\n    ",
            "enum" : [ "WEEKDAY", "DAILY", "WEEKLY", "FORTNIGHTLY", "MONTHLY" ],
            "example" : "WEEKLY"
          },
          "numberOfAppointments" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "\n    The original total number of appointments in the appointment series i.e. the number that were created initially\n    without excluding any that were subsequently cancelled or deleted\n    ",
            "example" : 6,
            "minimum" : 1
          }
        },
        "required" : [ "frequency", "numberOfAppointments" ]
      },
      "EventOrganiser" : {
        "type" : "object",
        "description" : "An event organiser",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this event organiser",
            "example" : 1
          },
          "code" : {
            "type" : "string",
            "description" : "The code for this event organiser",
            "example" : "PRISON_STAFF"
          },
          "description" : {
            "type" : "string",
            "description" : "The detailed description for this event organiser",
            "example" : "Prison staff"
          }
        },
        "required" : [ "code", "description", "id" ]
      },
      "EventTier" : {
        "type" : "object",
        "description" : "An event tier",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this event tier",
            "example" : 1
          },
          "code" : {
            "type" : "string",
            "description" : "The code for this event tier",
            "example" : "TIER_1"
          },
          "description" : {
            "type" : "string",
            "description" : "The detailed description for this event tier",
            "example" : "Work, education and maintenance"
          }
        },
        "required" : [ "code", "description", "id" ]
      },
      "AppointmentCancelRequest" : {
        "type" : "object",
        "description" : "The cancel request with the cancellation details and how to apply the cancellation",
        "properties" : {
          "cancellationReasonId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    Specifies the id of the reason for the cancellation. The cancellation reason, identified by this id, will determine \n    whether the cancellation is also treated as a soft delete\n    ",
            "example" : 1234
          },
          "applyTo" : {
            "type" : "string",
            "description" : "\n    Specifies which appointment or appointments this cancellation should apply to.\n    Defaults to THIS_APPOINTMENT meaning the cancellation will be applied to the appointment specified by the\n    supplied id only.\n    ",
            "enum" : [ "THIS_APPOINTMENT", "THIS_AND_ALL_FUTURE_APPOINTMENTS", "ALL_FUTURE_APPOINTMENTS" ],
            "example" : "THIS_APPOINTMENT"
          }
        },
        "required" : [ "applyTo", "cancellationReasonId" ]
      },
      "AppointmentAttendanceRequest" : {
        "type" : "object",
        "description" : "The lists of prison numbers to mark as attended and non-attended",
        "properties" : {
          "attendedPrisonNumbers" : {
            "type" : "array",
            "description" : "The prisoner or prisoners that attended the appointment",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          },
          "nonAttendedPrisonNumbers" : {
            "type" : "array",
            "description" : "The prisoner or prisoners that did not attended the appointment",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "attendedPrisonNumbers", "nonAttendedPrisonNumbers" ]
      },
      "MultipleAppointmentAttendanceRequest" : {
        "type" : "object",
        "description" : "\n  Describes how to update attendances for multiple appointments.\n  ",
        "properties" : {
          "appointmentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The appointment id of the appointment which is being marked",
            "example" : 123
          },
          "prisonerNumbers" : {
            "type" : "array",
            "description" : "The list of prisoner numbers to update",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "appointmentId", "prisonerNumbers" ]
      },
      "WaitingListSearchRequest" : {
        "type" : "object",
        "description" : "Search filters",
        "properties" : {
          "applicationDateFrom" : {
            "type" : "string",
            "format" : "date",
            "description" : "Filter applications with a request date on or after provided date",
            "example" : "2023-06-20"
          },
          "applicationDateTo" : {
            "type" : "string",
            "format" : "date",
            "description" : "Filter applications with a request date on or before provided date",
            "example" : "2023-06-20"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The activity to return waiting list applications for.",
            "example" : 3
          },
          "prisonerNumbers" : {
            "type" : "array",
            "description" : "The prisoner or prisoners to retrieve waiting list applications for.",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "array",
            "description" : "Filter by the status of the application. PENDING, APPROVED or DECLINED.",
            "example" : [ "DECLINED", "PENDING" ],
            "items" : {
              "type" : "string",
              "enum" : [ "PENDING", "APPROVED", "DECLINED", "ALLOCATED", "REMOVED" ]
            }
          }
        }
      },
      "EarliestReleaseDate" : {
        "type" : "object",
        "description" : "Summary of a prisoner's sentence and resulting earliest release date",
        "properties" : {
          "releaseDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The prisoner's earliest release date",
            "example" : "2027-09-20"
          },
          "isTariffDate" : {
            "type" : "boolean",
            "description" : "The prisoner's earliest release date is the tariff date"
          },
          "isIndeterminateSentence" : {
            "type" : "boolean",
            "description" : "The prisoner's sentence is indeterminate"
          },
          "isImmigrationDetainee" : {
            "type" : "boolean",
            "description" : "The prisoner is an immigration detainee"
          },
          "isConvictedUnsentenced" : {
            "type" : "boolean",
            "description" : "The prisoner is convicted and unsentenced"
          },
          "isRemand" : {
            "type" : "boolean",
            "description" : "The prisoner is on remand"
          }
        },
        "required" : [ "isConvictedUnsentenced", "isImmigrationDetainee", "isIndeterminateSentence", "isRemand", "isTariffDate" ]
      },
      "PageableObject" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unpaged" : {
            "type" : "boolean"
          }
        }
      },
      "PagedWaitingListApplication" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WaitingListApplication"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "SortObject" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        }
      },
      "WaitingListApplication" : {
        "type" : "object",
        "description" : "Describes a single waiting list application for a prisoner who is waiting to be allocated to an activity.",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this waiting list",
            "example" : 111111
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for the associated activity",
            "example" : 1000
          },
          "scheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for the associated activity schedule",
            "example" : 222222
          },
          "allocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for the associated allocation",
            "example" : 333333
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code for this waiting list",
            "example" : "PVI"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (NOMIS ID) for this waiting list",
            "example" : "A1234AA"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The prisoner booking id (NOMIS ID) for this waiting list",
            "example" : 10001
          },
          "status" : {
            "type" : "string",
            "description" : "The status of this waiting list",
            "enum" : [ "PENDING", "APPROVED", "DECLINED", "ALLOCATED", "REMOVED" ],
            "example" : "PENDING"
          },
          "statusUpdatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the waiting list status was last updated",
            "example" : "2023-06-04T16:30:00"
          },
          "requestedDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The past or present date on which the waiting list was requested",
            "example" : "2023-06-23"
          },
          "requestedBy" : {
            "type" : "string",
            "description" : "The person who made the request for this waiting list",
            "example" : "Fred Bloggs"
          },
          "comments" : {
            "type" : "string",
            "description" : "Any particular comments related to this waiting list",
            "example" : "The prisoner has specifically requested to attend this activity"
          },
          "declinedReason" : {
            "type" : "string",
            "description" : "The reason for the waiting list request to be declined (null if status is not declined)",
            "example" : "The prisoner has specifically requested to attend this activity"
          },
          "creationTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the waiting list was first created",
            "example" : "2023-00-03T12:00:00"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The person who created the waiting list i.e the user at the time",
            "example" : "Jon Doe"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the waiting list was last updated",
            "example" : "2023-00-04T16:30:00"
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "The person who last made changes to the waiting list",
            "example" : "Jane Doe"
          },
          "earliestReleaseDate" : {
            "$ref" : "#/components/schemas/EarliestReleaseDate",
            "description" : "The earliest release date of the prisoner"
          },
          "nonAssociations" : {
            "type" : "boolean",
            "description" : "Does the prisoner have non-associations? Null implies that non-associations could not be retrieved"
          }
        },
        "required" : [ "activityId", "bookingId", "createdBy", "creationTime", "earliestReleaseDate", "id", "prisonCode", "prisonerNumber", "requestedBy", "requestedDate", "scheduleId", "status" ]
      },
      "PublishEventUtilityModel" : {
        "type" : "object",
        "description" : "Describes an event to be published to the domain events SNS topic",
        "properties" : {
          "outboundEvent" : {
            "type" : "string",
            "description" : "The outbound event to be published",
            "enum" : [ "ACTIVITY_SCHEDULE_CREATED", "ACTIVITY_SCHEDULE_UPDATED", "ACTIVITY_SCHEDULED_INSTANCE_AMENDED", "PRISONER_ALLOCATED", "PRISONER_ALLOCATION_AMENDED", "PRISONER_ATTENDANCE_CREATED", "PRISONER_ATTENDANCE_AMENDED", "PRISONER_ATTENDANCE_DELETED", "PRISONER_ATTENDANCE_EXPIRED", "APPOINTMENT_INSTANCE_CREATED", "APPOINTMENT_INSTANCE_UPDATED", "APPOINTMENT_INSTANCE_DELETED", "APPOINTMENT_INSTANCE_CANCELLED", "APPOINTMENT_INSTANCE_UNCANCELLED" ]
          },
          "identifiers" : {
            "type" : "array",
            "description" : "A list of entity identifiers to be published with the event",
            "example" : [ 1, 2 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "required" : [ "identifiers", "outboundEvent" ]
      },
      "PrisonerAllocationRequest" : {
        "type" : "object",
        "description" : "The prisoner allocation request details",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (Nomis ID)",
            "example" : "A1234AA",
            "maxLength" : 7,
            "minLength" : 0
          },
          "payBandId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Where a prison uses pay bands to differentiate earnings, this is the pay band code given to this prisoner. Can be null for unpaid activities.",
            "example" : 1
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will start the activity",
            "example" : "2022-09-10"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will stop attending the activity",
            "example" : "2023-09-10"
          },
          "exclusions" : {
            "type" : "array",
            "description" : "The days and times that the prisoner is excluded from this activity's schedule",
            "items" : {
              "$ref" : "#/components/schemas/Slot"
            }
          },
          "scheduleInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The scheduled instance id required when allocation starts today"
          }
        },
        "required" : [ "prisonerNumber", "startDate" ]
      },
      "Slot" : {
        "type" : "object",
        "description" : "\n    Describes time slot and day (or days) the scheduled activity would run. At least one day must be specified.\n    \n    e.g. 'AM, Monday, Wednesday and Friday' or 'PM Tuesday, Thursday, Sunday'\n  ",
        "properties" : {
          "weekNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The week of the schedule this slot relates to",
            "example" : 1
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "The time slot of the activity schedule",
            "enum" : [ "AM", "PM", "ED" ]
          },
          "monday" : {
            "type" : "boolean"
          },
          "tuesday" : {
            "type" : "boolean"
          },
          "wednesday" : {
            "type" : "boolean"
          },
          "thursday" : {
            "type" : "boolean"
          },
          "friday" : {
            "type" : "boolean"
          },
          "saturday" : {
            "type" : "boolean"
          },
          "sunday" : {
            "type" : "boolean"
          },
          "customStartTime" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "customEndTime" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "daysOfWeek" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
            },
            "uniqueItems" : true
          }
        },
        "required" : [ "daysOfWeek", "friday", "monday", "saturday", "sunday", "thursday", "timeSlot", "tuesday", "wednesday", "weekNumber" ]
      },
      "ActivityCategory" : {
        "type" : "object",
        "description" : "Describes a top-level activity category",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated identifier for this activity category",
            "example" : 1
          },
          "code" : {
            "type" : "string",
            "description" : "The activity category code",
            "example" : "LEISURE_SOCIAL"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the activity category",
            "example" : "Leisure and social"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the activity category",
            "example" : "Such as association, library time and social clubs, like music or art"
          }
        },
        "required" : [ "code", "id", "name" ]
      },
      "ActivityLite" : {
        "type" : "object",
        "description" : "Describes a top-level activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity",
            "example" : 123456
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this activity takes place",
            "example" : "PVI"
          },
          "attendanceRequired" : {
            "type" : "boolean",
            "description" : "Flag to indicate if attendance is required for this activity, e.g. gym induction might not be mandatory attendance",
            "example" : false
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is in cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "pieceWork" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity is piece work",
            "example" : false
          },
          "outsideWork" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity carried out outside of the prison",
            "example" : false
          },
          "payPerSession" : {
            "type" : "string",
            "description" : "Indicates whether the activity session is a (F)ull day or a (H)alf day (for payment purposes). ",
            "enum" : [ "H", "F" ],
            "example" : "H"
          },
          "summary" : {
            "type" : "string",
            "description" : "A brief summary description of this activity for use in forms and lists",
            "example" : "Maths level 1"
          },
          "description" : {
            "type" : "string",
            "description" : "A detailed description for this activity",
            "example" : "A basic maths course suitable for introduction to the subject"
          },
          "category" : {
            "$ref" : "#/components/schemas/ActivityCategory",
            "description" : "The category for this activity, one of the high-level categories"
          },
          "riskLevel" : {
            "type" : "string",
            "description" : "The most recent risk assessment level for this activity",
            "example" : "high"
          },
          "minimumEducationLevel" : {
            "type" : "array",
            "description" : "The list of minimum education levels that can apply to this activity",
            "items" : {
              "$ref" : "#/components/schemas/ActivityMinimumEducationLevel"
            }
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this activity ends. From this date, there will be no more planned instances of the activity. If null, the activity has no end date and will be scheduled indefinitely.",
            "example" : "2022-12-21"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The capacity of the activity"
          },
          "allocated" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of prisoners currently allocated to the activity"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time when this activity was created",
            "example" : "2022-09-01T09:01:02"
          },
          "activityState" : {
            "type" : "string",
            "description" : "Whether the activity is live or archived",
            "enum" : [ "ARCHIVED", "LIVE" ],
            "example" : "live"
          },
          "paid" : {
            "type" : "boolean",
            "description" : "Whether the activity is a paid activity",
            "example" : true
          }
        },
        "required" : [ "activityState", "allocated", "attendanceRequired", "capacity", "category", "createdTime", "id", "inCell", "minimumEducationLevel", "offWing", "onWing", "outsideWork", "paid", "payPerSession", "pieceWork", "prisonCode", "riskLevel", "summary" ]
      },
      "ActivityMinimumEducationLevel" : {
        "type" : "object",
        "description" : "Describes the minimum education levels which apply to an activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity minimum education level",
            "example" : 123456
          },
          "educationLevelCode" : {
            "type" : "string",
            "description" : "The education level code",
            "example" : "Basic"
          },
          "educationLevelDescription" : {
            "type" : "string",
            "description" : "The education level description",
            "example" : "Basic"
          },
          "studyAreaCode" : {
            "type" : "string",
            "description" : "The study area code",
            "example" : "ENGLA"
          },
          "studyAreaDescription" : {
            "type" : "string",
            "description" : "The study area description",
            "example" : "English Language"
          }
        },
        "required" : [ "educationLevelCode", "educationLevelDescription", "id", "studyAreaCode", "studyAreaDescription" ]
      },
      "ActivityScheduleInstance" : {
        "type" : "object",
        "description" : "Describes one instance of an activity schedule",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this scheduled instance",
            "example" : 123456
          },
          "date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The specific date for this scheduled instance",
            "example" : "2022-09-30"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time for this scheduled instance",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time for this scheduled instance",
            "example" : "10:00"
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "Time slot of the scheduled instance",
            "enum" : [ "AM", "PM", "ED" ]
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "Flag to indicate if this scheduled instance has been cancelled since being scheduled",
            "example" : false
          },
          "cancelledTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date and time this scheduled instance was cancelled (or null if not cancelled)",
            "example" : "2022-09-29T11:20:21"
          },
          "cancelledBy" : {
            "type" : "string",
            "description" : "The person who cancelled this scheduled instance (or null if not cancelled)",
            "example" : "Adam Smith"
          },
          "cancelledReason" : {
            "type" : "string",
            "description" : "The reason this scheduled instance was cancelled",
            "example" : "Staff unavailable"
          },
          "comment" : {
            "type" : "string",
            "description" : "Comment on cancelling",
            "example" : "Teacher unavailable"
          },
          "previousScheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id for the previous scheduled instance",
            "example" : 123456
          },
          "previousScheduledInstanceDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date for the previous scheduled instance",
            "example" : "2022-09-30"
          },
          "nextScheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id for the next scheduled instance",
            "example" : 123456
          },
          "nextScheduledInstanceDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date for the next scheduled instance",
            "example" : "2022-09-30"
          },
          "attendances" : {
            "type" : "array",
            "description" : "The list of attendees",
            "items" : {
              "$ref" : "#/components/schemas/Attendance"
            }
          },
          "activitySchedule" : {
            "$ref" : "#/components/schemas/ActivityScheduleLite",
            "description" : "The activity schedule"
          }
        },
        "required" : [ "activitySchedule", "attendances", "cancelled", "date", "endTime", "id", "startTime", "timeSlot" ]
      },
      "ActivityScheduleLite" : {
        "type" : "object",
        "description" : "\n  Describes the weekly schedule for an activity. There can be several of these defined for one activity.\n  An activity schedule describes when, during the week, an activity will be run and where.\n  e.g. Tuesday PM and Thursday AM - suitable for Houseblock 2 to attend.\n  e.g. Monday AM and Thursday PM - suitable for Houseblock 3 to attend.\n  this 'lite' version of ActivitySchedule does not have allocated or instances.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity schedule",
            "example" : 123456
          },
          "description" : {
            "type" : "string",
            "description" : "The description of this activity schedule",
            "example" : "Monday AM Houseblock 3"
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/InternalLocation",
            "description" : "The NOMIS internal location for this schedule",
            "example" : 98877667
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The maximum number of prisoners allowed for a scheduled instance of this schedule",
            "example" : 10
          },
          "activity" : {
            "$ref" : "#/components/schemas/ActivityLite",
            "description" : "The activity"
          },
          "scheduleWeeks" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of weeks in the schedule",
            "example" : 1
          },
          "slots" : {
            "type" : "array",
            "description" : "The slots associated with this activity schedule",
            "items" : {
              "$ref" : "#/components/schemas/ActivityScheduleSlot"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this schedule will start. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-09-21"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this schedule will end. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-10-21"
          },
          "usePrisonRegimeTime" : {
            "type" : "boolean",
            "description" : "a flag to indicate if this activity is scheduled according to prison standard regime times"
          }
        },
        "required" : [ "activity", "capacity", "description", "id", "scheduleWeeks", "slots", "startDate", "usePrisonRegimeTime" ]
      },
      "ActivityScheduleSlot" : {
        "type" : "object",
        "description" : "\n  Describes a slot for an activity schedule. There can be several of these defined for one activity schedule.\n  An activity schedule slot describes when, during the week, an activity will be run.\n  e.g. Tuesday PM on a Monday and Thursday.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity schedule slot",
            "example" : 123456
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "Activity schedule timeslot",
            "enum" : [ "AM", "PM", "ED" ]
          },
          "weekNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The week of the schedule this slot relates to",
            "example" : 1
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The time that any instances of this schedule slot will start",
            "example" : "9:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The time that any instances of this schedule slot will finish",
            "example" : "11:30"
          },
          "daysOfWeek" : {
            "type" : "array",
            "description" : "The days of the week on which the schedule slot takes place",
            "example" : "[Mon,Tue,Wed]",
            "items" : {
              "type" : "string"
            }
          },
          "mondayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Monday",
            "example" : true
          },
          "tuesdayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Tuesday",
            "example" : true
          },
          "wednesdayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Wednesday",
            "example" : true
          },
          "thursdayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Thursday",
            "example" : false
          },
          "fridayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Friday",
            "example" : false
          },
          "saturdayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Saturday",
            "example" : false
          },
          "sundayFlag" : {
            "type" : "boolean",
            "description" : "Indicates whether the schedule slot takes place on a Sunday",
            "example" : false
          }
        },
        "required" : [ "daysOfWeek", "endTime", "fridayFlag", "id", "mondayFlag", "saturdayFlag", "startTime", "sundayFlag", "thursdayFlag", "timeSlot", "tuesdayFlag", "wednesdayFlag", "weekNumber" ]
      },
      "Attendance" : {
        "type" : "object",
        "description" : "An attendance record for a prisoner, can be marked or unmarked",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this attendance",
            "example" : 123456
          },
          "scheduleInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The ID for scheduled instance for this attendance",
            "example" : 123456
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prison number this attendance record is for",
            "example" : "A1234AA"
          },
          "attendanceReason" : {
            "$ref" : "#/components/schemas/AttendanceReason",
            "description" : "The reason for attending or not"
          },
          "comment" : {
            "type" : "string",
            "description" : "Free text to allow comments to be put against the attendance",
            "example" : "Prisoner was too unwell to attend the activity."
          },
          "recordedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the attendance was updated",
            "example" : "2023-09-10T09:30:00"
          },
          "recordedBy" : {
            "type" : "string",
            "description" : "The person who updated the attendance",
            "example" : "A.JONES"
          },
          "status" : {
            "type" : "string",
            "description" : "WAITING or COMPLETED",
            "example" : "WAITING"
          },
          "payAmount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The amount in pence to pay the prisoner for the activity",
            "example" : 100
          },
          "bonusAmount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The bonus amount in pence to pay the prisoner for the activity",
            "example" : 50
          },
          "pieces" : {
            "type" : "integer",
            "format" : "int32"
          },
          "issuePayment" : {
            "type" : "boolean",
            "description" : "Should payment be issued for SICK, REST or OTHER",
            "example" : true
          },
          "incentiveLevelWarningIssued" : {
            "type" : "boolean",
            "description" : "Was an incentive level warning issued for REFUSED",
            "example" : true
          },
          "otherAbsenceReason" : {
            "type" : "string",
            "description" : "Free text to allow other reasons for non attendance against the attendance",
            "example" : "Prisoner has a valid reason to miss the activity."
          },
          "caseNoteText" : {
            "type" : "string",
            "description" : "Free text for any case note entered against the attendance record",
            "example" : "Prisoner has refused to attend the activity without a valid reason to miss the activity."
          },
          "attendanceHistory" : {
            "type" : "array",
            "description" : "The attendance history records for this attendance",
            "items" : {
              "$ref" : "#/components/schemas/AttendanceHistory"
            }
          },
          "editable" : {
            "type" : "boolean",
            "description" : "Flag to show whether this attendance is editable",
            "example" : true
          },
          "payable" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the attendance is payable",
            "example" : true
          }
        },
        "required" : [ "editable", "id", "payable", "prisonerNumber", "scheduleInstanceId", "status" ]
      },
      "AttendanceHistory" : {
        "type" : "object",
        "description" : "An attendance record for a prisoner, can be marked or unmarked",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this attendance",
            "example" : 123456
          },
          "attendanceReason" : {
            "$ref" : "#/components/schemas/AttendanceReason",
            "description" : "The reason for attending or not"
          },
          "comment" : {
            "type" : "string",
            "description" : "Free text to allow comments to be put against the attendance",
            "example" : "Prisoner was too unwell to attend the activity."
          },
          "recordedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the attendance was updated",
            "example" : "2023-09-10T09:30:00"
          },
          "recordedBy" : {
            "type" : "string",
            "description" : "The person who updated the attendance",
            "example" : "A.JONES"
          },
          "issuePayment" : {
            "type" : "boolean",
            "description" : "Should payment be issued for SICK, REST or OTHER",
            "example" : true
          },
          "incentiveLevelWarningIssued" : {
            "type" : "boolean",
            "description" : "Was an incentive level warning issued for REFUSED",
            "example" : true
          },
          "otherAbsenceReason" : {
            "type" : "string",
            "description" : "Free text to allow other reasons for non attendance against the attendance",
            "example" : "Prisoner has a valid reason to miss the activity."
          },
          "caseNoteText" : {
            "type" : "string",
            "description" : "Free text for any case note entered against the attendance record",
            "example" : "Prisoner has refused to attend the activity without a valid reason to miss the activity."
          }
        },
        "required" : [ "id", "recordedBy", "recordedTime" ]
      },
      "AttendanceReason" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this (non) attendance reason",
            "example" : 1
          },
          "code" : {
            "type" : "string",
            "description" : "The code for the (non) attendance reason",
            "example" : "SICK"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the (non) attendance reason",
            "example" : "Sick"
          },
          "attended" : {
            "type" : "boolean",
            "description" : "A flag to show whether the reason is Attended (true) or Not Attended (false)",
            "example" : true
          },
          "capturePay" : {
            "type" : "boolean",
            "description" : "A flag to show whether or not to capture whether the prisoner should still be paid",
            "example" : true
          },
          "captureMoreDetail" : {
            "type" : "boolean",
            "description" : "A flag to show whether or not to capture more detail",
            "example" : true
          },
          "captureCaseNote" : {
            "type" : "boolean",
            "description" : "A flag to show whether or not to capture a case note",
            "example" : true
          },
          "captureIncentiveLevelWarning" : {
            "type" : "boolean",
            "description" : "A flag to show whether or not to capture whether an incentive level warning has been issued due to non attendance",
            "example" : false
          },
          "captureOtherText" : {
            "type" : "boolean",
            "description" : "A flag to show whether or not to capture other text",
            "example" : false
          },
          "displayInAbsence" : {
            "type" : "boolean",
            "description" : "A flag to show whether or not the reason should be displayed in the UI as an option for non attendance",
            "example" : false
          },
          "displaySequence" : {
            "type" : "number",
            "description" : "The sequence in which the reason should be displayed in the UI",
            "example" : 1
          },
          "notes" : {
            "type" : "string",
            "description" : "Any internal notes to explain the use of the reason",
            "example" : "Maps to ACCAB in NOMIS"
          }
        },
        "required" : [ "attended", "captureCaseNote", "captureIncentiveLevelWarning", "captureMoreDetail", "captureOtherText", "capturePay", "code", "description", "displayInAbsence", "id", "notes" ]
      },
      "InternalLocation" : {
        "type" : "object",
        "description" : "An internal NOMIS location for an activity to take place",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The NOMIS internal location id for this schedule",
            "example" : 98877667
          },
          "code" : {
            "type" : "string",
            "description" : "The NOMIS internal location code for this schedule",
            "example" : "EDU-ROOM-1"
          },
          "description" : {
            "type" : "string",
            "description" : "The NOMIS internal location description for this schedule",
            "example" : "Education - R1"
          },
          "dpsLocationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The optional DPS location UUID for this schedule",
            "example" : "b7602cc8-e769-4cbb-8194-62d8e655992a"
          }
        },
        "required" : [ "code", "description", "id" ]
      },
      "PrisonerScheduledEvents" : {
        "type" : "object",
        "description" : "Describes a prisons scheduled events",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code for these scheduled events",
            "example" : "MDI"
          },
          "prisonerNumbers" : {
            "type" : "array",
            "description" : "The set of prisoner numbers for theses scheduled events ",
            "example" : "['GF10101', 'GR123YI']",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The start date for this collection of scheduled events",
            "example" : "2022-11-01"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The end date (inclusive) for this collection of scheduled events",
            "example" : "2022-11-28"
          },
          "appointments" : {
            "type" : "array",
            "description" : "A list of scheduled appointments for this prisoner in this date range",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            }
          },
          "courtHearings" : {
            "type" : "array",
            "description" : "A list of (active) scheduled court hearings for this prisoner in this date range",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            }
          },
          "visits" : {
            "type" : "array",
            "description" : "A list of scheduled visits for this prisoner in this date range",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            }
          },
          "activities" : {
            "type" : "array",
            "description" : "A list of scheduled activities for this prisoner in this date range",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            }
          },
          "externalTransfers" : {
            "type" : "array",
            "description" : "A list of external transfers for this prisoner in this date range",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            }
          },
          "adjudications" : {
            "type" : "array",
            "description" : "A list of adjudications for this prisoner in this date range",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            }
          }
        }
      },
      "ScheduledEvent" : {
        "type" : "object",
        "description" : "Describes a scheduled event",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code for this scheduled event",
            "example" : "MDI"
          },
          "eventSource" : {
            "type" : "string",
            "description" : "The source of this event - valid values are NOMIS or SAA (scheduling activities and appointments)",
            "example" : "NOMIS"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The event type (APPOINTMENT, ACTIVITY, COURT_HEARING, EXTERNAL_TRANSFER, ADJUDICATION_HEARING, VISIT)",
            "example" : "APPOINTMENT"
          },
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "For activities from SAA the ID for the activity scheduled instance, or null when from NOMIS",
            "example" : 9999
          },
          "appointmentSeriesId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "For appointments from SAA the ID for the appointment series, or null when from NOMIS",
            "example" : 9999
          },
          "appointmentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "For appointments from SAA the ID for the appointment, or null when from NOMIS",
            "example" : 9999
          },
          "appointmentAttendeeId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "For appointments from SAA the ID for the appointment attendee, or null when from NOMIS",
            "example" : 9999
          },
          "oicHearingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "For adjudication hearings from NOMIS the ID for the OIC hearing, or null for other types",
            "example" : 9999
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The event ID for events from NOMIS, otherwise null if from SAA",
            "example" : 10001
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The booking id of the prisoner this event relates to.",
            "example" : 10001
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS internal location id where this event takes place",
            "example" : 10001
          },
          "internalLocationCode" : {
            "type" : "string",
            "description" : "The NOMIS location code for this event",
            "example" : "5-A-SIDE COM"
          },
          "internalLocationUserDescription" : {
            "type" : "string",
            "description" : "The NOMIS location user description for this event",
            "example" : "GYM ORDERLY"
          },
          "internalLocationDescription" : {
            "type" : "string",
            "description" : "The NOMIS location description for this event",
            "example" : "MDI-GYM-5-A-SIDE COM"
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "Event category code (e.g appointment category code, activity category code)",
            "example" : "GOVE"
          },
          "categoryDescription" : {
            "type" : "string",
            "description" : "Event category description.",
            "example" : "Governor"
          },
          "summary" : {
            "type" : "string",
            "description" : "The event summary to show on unlock lists, schedules and calendars",
            "example" : "Court hearing"
          },
          "comments" : {
            "type" : "string",
            "description" : "Any comments supplied that relate to this event",
            "example" : "Reception for 8am please."
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Set to true if this event will take place in the prisoner's cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "outsidePrison" : {
            "type" : "boolean",
            "description" : "Set to true if this event takes place outside the prison",
            "example" : false
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "Set to true if this event has been cancelled",
            "example" : false
          },
          "suspended" : {
            "type" : "boolean",
            "description" : "Set to true if this prisoner is suspended for this event (only applies to activities)",
            "example" : false
          },
          "autoSuspended" : {
            "type" : "boolean",
            "description" : "Set to true if this prisoner is auto-suspended for this event (only applies to activities)",
            "example" : false
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number",
            "example" : "GF10101"
          },
          "date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The specific date for this event",
            "example" : "2022-09-30"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time for this scheduled instance",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time for this scheduled instance",
            "example" : "10:00"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The event priority - configurable by prison, or via defaults."
          },
          "appointmentSeriesCancellationStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The start date of the first appointment cancelled in the series"
          },
          "appointmentSeriesCancellationStartTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time of the first appointment cancelled in the series",
            "example" : "10:30"
          },
          "appointmentSeriesFrequency" : {
            "type" : "string",
            "description" : "The appointment series frequency",
            "enum" : [ "WEEKDAY", "DAILY", "WEEKLY", "FORTNIGHTLY", "MONTHLY" ],
            "example" : "DAILY"
          },
          "paidActivity" : {
            "type" : "boolean",
            "description" : "Set to true if this activity is a paid activity",
            "example" : false
          },
          "issuePayment" : {
            "type" : "boolean",
            "description" : "Should activity payment be issued for SICK, REST or OTHER",
            "example" : true
          },
          "attendanceStatus" : {
            "type" : "string",
            "description" : "The activity attendance status - WAITING or COMPLETED",
            "example" : "WAITING"
          },
          "attendanceReasonCode" : {
            "type" : "string",
            "description" : "The code for the activity (non) attendance reason",
            "example" : "SICK"
          }
        },
        "required" : [ "autoSuspended", "cancelled", "inCell", "offWing", "onWing", "outsidePrison", "priority", "startTime", "suspended" ]
      },
      "InternalLocationEvents" : {
        "type" : "object",
        "description" : "\n  The details of an internal location that has events scheduled to take place there. Supports movement lists.\n  Contains additional information about the events taking place at the location.\n  The system of record for internal locations is NOMIS and they are managed in that application.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The id of the internal location. Mapped from AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID in NOMIS.\n    ",
            "example" : 27723
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "\n    The prison code/agency id of the internal location. Mapped from AGENCY_LOCATIONS.AGY_LOC_ID in NOMIS.\n    ",
            "example" : "SKI"
          },
          "code" : {
            "type" : "string",
            "description" : "The code of the internal location. Mapped from AGENCY_INTERNAL_LOCATIONS.DESCRIPTION",
            "example" : "EDUC-ED1-ED1"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the internal location. Mapped from AGENCY_INTERNAL_LOCATIONS.USER_DESC",
            "example" : "Education 1"
          },
          "events" : {
            "type" : "array",
            "description" : "Collection of scheduled events due to take place at the internal location",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEvent"
            },
            "uniqueItems" : true
          }
        },
        "required" : [ "code", "description", "events", "id", "prisonCode" ]
      },
      "PrisonRegimeSlot" : {
        "type" : "object",
        "description" : "prison regime slots for a day of the week",
        "properties" : {
          "dayOfWeek" : {
            "type" : "string",
            "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
          },
          "amStart" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "amFinish" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "pmStart" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "pmFinish" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "edStart" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "edFinish" : {
            "type" : "string",
            "format" : "partial-time"
          }
        },
        "required" : [ "amFinish", "amStart", "dayOfWeek", "edFinish", "edStart", "pmFinish", "pmStart" ]
      },
      "PrisonRegime" : {
        "type" : "object",
        "description" : "Describes a top-level activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this prison regime",
            "example" : 123456
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this activity takes place",
            "example" : "MDI"
          },
          "amStart" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time for the am slot",
            "example" : "09:00"
          },
          "amFinish" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time for the am slot",
            "example" : "12:00"
          },
          "pmStart" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time for the pm slot",
            "example" : "13:00"
          },
          "pmFinish" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time for the pm slot",
            "example" : "16:30"
          },
          "edStart" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time for the ed slot",
            "example" : "18:00"
          },
          "edFinish" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time for the ed slot",
            "example" : "20:00"
          },
          "dayOfWeek" : {
            "type" : "string",
            "description" : "day of week the regime is applicable to",
            "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
          }
        },
        "required" : [ "amFinish", "amStart", "dayOfWeek", "edFinish", "edStart", "id", "pmFinish", "pmStart", "prisonCode" ]
      },
      "Allocation" : {
        "type" : "object",
        "description" : "A prisoner who is allocated to an activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this allocation",
            "example" : 123456
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (Nomis ID)",
            "example" : "A1234AA"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The offender booking id",
            "example" : 10001
          },
          "activitySummary" : {
            "type" : "string"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scheduleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scheduleDescription" : {
            "type" : "string"
          },
          "isUnemployment" : {
            "type" : "boolean",
            "description" : "Indicates whether this allocation is to an activity within the 'Not in work' category"
          },
          "prisonPayBand" : {
            "$ref" : "#/components/schemas/PrisonPayBand",
            "description" : "Where a prison uses pay bands to differentiate earnings, this is the pay band given to this prisoner. Will be null for unpaid activities."
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will start the activity",
            "example" : "2022-09-10"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will stop attending the activity",
            "example" : "2023-09-10"
          },
          "allocatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the prisoner was allocated to the activity",
            "example" : "2022-09-01T09:00:00"
          },
          "allocatedBy" : {
            "type" : "string",
            "description" : "The person who allocated the prisoner to the activity",
            "example" : "Mr Blogs"
          },
          "deallocatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the prisoner was deallocated from the activity",
            "example" : "2022-09-02T09:00:00"
          },
          "deallocatedBy" : {
            "type" : "string",
            "description" : "The person who deallocated the prisoner from the activity",
            "example" : "Mrs Blogs"
          },
          "deallocatedReason" : {
            "$ref" : "#/components/schemas/DeallocationReason"
          },
          "suspendedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the allocation was suspended",
            "example" : "2022-09-02T09:00:00"
          },
          "suspendedBy" : {
            "type" : "string",
            "description" : "The person who suspended the prisoner from the activity",
            "example" : "Mrs Blogs"
          },
          "suspendedReason" : {
            "type" : "string",
            "description" : "The descriptive reason why this prisoner was suspended from the activity",
            "example" : "Temporarily released from prison"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the allocation. Note that SUSPENDED is suspended without pay.",
            "enum" : [ "ACTIVE", "PENDING", "SUSPENDED", "AUTO_SUSPENDED", "ENDED", "SUSPENDED_WITH_PAY" ],
            "example" : "ACTIVE"
          },
          "plannedDeallocation" : {
            "$ref" : "#/components/schemas/PlannedDeallocation",
            "description" : "Where an allocation end date has been set, this includes the details of the planned de-allocation"
          },
          "plannedSuspension" : {
            "$ref" : "#/components/schemas/PlannedSuspension",
            "description" : "This includes the details of the planned suspension for the allocation if there is one"
          },
          "exclusions" : {
            "type" : "array",
            "description" : "The days and times that the prisoner is excluded from this activity's schedule. All values must match a slot where the activity is scheduled to run, and due to sync to nomis, there can not not be exclusions defined on the same day and time slot over multiple weeks.",
            "items" : {
              "$ref" : "#/components/schemas/Slot"
            }
          },
          "prisonerName" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "The name of the prisoner. Included only if includePrisonerSummary = true"
          },
          "prisonerFirstName" : {
            "type" : "string",
            "description" : "The prisoner's first name. Included only if includePrisonerSummary = true",
            "example" : "Joe"
          },
          "prisonerLastName" : {
            "type" : "string",
            "description" : "The prisoner's last name. Included only if includePrisonerSummary = true",
            "example" : "Bloggs"
          },
          "prisonerStatus" : {
            "type" : "string",
            "description" : "The status of the prisoner. Included only if includePrisonerSummary = true",
            "example" : "ACTIVE IN"
          },
          "prisonerPrisonCode" : {
            "type" : "string",
            "description" : "The prison code of the prison which of the prisoner currently resides. Included only if includePrisonerSummary = true",
            "example" : "MDI"
          },
          "cellLocation" : {
            "type" : "string",
            "description" : "The cell location of the prisoner. Included only if includePrisonerSummary = true"
          },
          "earliestReleaseDate" : {
            "$ref" : "#/components/schemas/EarliestReleaseDate",
            "description" : "The earliest release date of the prisoner. Included only if includePrisonerSummary = true"
          },
          "nonAssociations" : {
            "type" : "boolean",
            "description" : "Does the prisoner have non-associations?. Included only if includePrisonerSummary = true. Null implies that non-associations could not be retrieved"
          }
        },
        "required" : [ "activityId", "activitySummary", "bookingId", "exclusions", "id", "isUnemployment", "prisonerNumber", "scheduleDescription", "scheduleId", "startDate", "status" ]
      },
      "DeallocationReason" : {
        "type" : "object",
        "description" : "The code and descriptive reason why this prisoner was deallocated from the activity",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code for the deallocation reason",
            "example" : "RELEASED"
          },
          "description" : {
            "type" : "string",
            "description" : "The description for the deallocation reason",
            "example" : "Released from prison"
          }
        },
        "required" : [ "code", "description" ]
      },
      "PlannedDeallocation" : {
        "type" : "object",
        "description" : "Describes one instance of a planned deallocation",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this planned de-allocation",
            "example" : 24
          },
          "plannedDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The planned de-allocation date ",
            "example" : "2023-07-31"
          },
          "plannedBy" : {
            "type" : "string",
            "description" : "The person who planned the de-allocation",
            "example" : "ADMIN"
          },
          "plannedReason" : {
            "$ref" : "#/components/schemas/DeallocationReason",
            "description" : "The planned reason generated by the system",
            "example" : "PLANNED"
          },
          "plannedAt" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The system time when the de-allocation plan was made",
            "example" : "2023-07-10 14:54"
          }
        },
        "required" : [ "id", "plannedAt", "plannedBy", "plannedDate", "plannedReason" ]
      },
      "PlannedSuspension" : {
        "type" : "object",
        "description" : "Describes one instance of a planned suspension",
        "properties" : {
          "plannedStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The planned start date of the suspension",
            "example" : "2023-07-31"
          },
          "plannedEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The planned end date of the suspension",
            "example" : "2023-07-31"
          },
          "caseNoteId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The optional case note identifier which was added to the prisoner's profile along with the suspension",
            "example" : 123456
          },
          "plannedBy" : {
            "type" : "string",
            "description" : "The username of the person who planned the suspension",
            "example" : "ADMIN"
          },
          "plannedAt" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The system time when the suspension plan was made",
            "example" : "2023-07-10 14:54"
          },
          "paid" : {
            "type" : "boolean",
            "description" : "Is the suspension paid or not"
          }
        },
        "required" : [ "plannedAt", "plannedBy", "plannedStartDate" ]
      },
      "PrisonPayBand" : {
        "type" : "object",
        "description" : "Describes one instance of a prison pay band",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this prison pay band",
            "example" : 123456
          },
          "displaySequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The order in which the pay band should be presented within a list e.g. dropdown",
            "example" : 1
          },
          "alias" : {
            "type" : "string",
            "description" : "The alternative text to use in place of the description e.g. Low, Medium, High",
            "example" : "Low"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of pay band in this prison",
            "example" : "Pay band 1"
          },
          "nomisPayBand" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The pay band number this is associated with in NOMIS (1-10)",
            "example" : 1
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code for the pay band. Can also be 'DEFAULT' if none set up for prison",
            "example" : "MDI"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this pay band was created"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The username of the user authenticated via HMPPS auth that created the pay band"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the pay band was last changed"
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "The username of the user authenticated via HMPPS auth that last edited the pay band"
          }
        },
        "required" : [ "alias", "description", "displaySequence", "id", "nomisPayBand", "prisonCode" ]
      },
      "PrisonerAllocations" : {
        "type" : "object",
        "description" : "Describes a prisoners allocations",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number",
            "example" : "GF10101"
          },
          "allocations" : {
            "type" : "array",
            "description" : "The list of allocations for the prisoner",
            "items" : {
              "$ref" : "#/components/schemas/Allocation"
            }
          }
        },
        "required" : [ "allocations", "prisonerNumber" ]
      },
      "PrisonPayBandCreateRequest" : {
        "type" : "object",
        "description" : "The create request with the new pay band details",
        "properties" : {
          "displaySequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The order in which the pay band should be presented within a list e.g. dropdown",
            "example" : 1
          },
          "alias" : {
            "type" : "string",
            "description" : "The alternative text to use in place of the description e.g. Low, Medium, High",
            "example" : "Low"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of pay band in this prison",
            "example" : "Pay band 1"
          },
          "nomisPayBand" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The pay band number this is associated with in NOMIS (1-10)",
            "example" : 1
          }
        },
        "required" : [ "alias", "description", "displaySequence", "nomisPayBand" ]
      },
      "AllocationMigrateRequest" : {
        "type" : "object",
        "description" : "Allocation migration request",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this allocation is to be made",
            "example" : "PVI",
            "maxLength" : 3,
            "minLength" : 0
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The activity ID to which this allocation should be made",
            "example" : 12332
          },
          "splitRegimeActivityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The alternative activity ID in a split regime",
            "example" : 1322
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner display number from NOMIS",
            "example" : "A3334AB"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The prisoner booking id from NOMIS",
            "example" : 99098484
          },
          "cellLocation" : {
            "type" : "string",
            "description" : "The prisoner cell location",
            "example" : "RSI-A-1-2-001"
          },
          "nomisPayBand" : {
            "type" : "string",
            "description" : "The pay band code from NOMIS",
            "example" : 2
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which this allocation starts or started. Not nullable.",
            "example" : "2022-12-23"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which this allocation ended or will end. Nullable.",
            "example" : "2022-12-23"
          },
          "endComment" : {
            "type" : "string",
            "description" : "If an end date is set there may be a comment. Nullable.",
            "example" : "Due to end in January."
          },
          "suspendedFlag" : {
            "type" : "boolean",
            "description" : "True if this prisoner allocation is suspended.",
            "example" : true
          },
          "exclusions" : {
            "type" : "array",
            "description" : "The days and times that the prisoner is excluded from this activity's schedule. All values must match a slot where the activity is scheduled to run, and due to sync to nomis, there can not not be exclusions defined on the same day and time slot over multiple weeks.",
            "items" : {
              "$ref" : "#/components/schemas/Slot"
            }
          }
        },
        "required" : [ "activityId", "bookingId", "prisonCode", "prisonerNumber", "startDate", "suspendedFlag" ]
      },
      "AllocationMigrateResponse" : {
        "type" : "object",
        "description" : "Response for a successful migration of one allocation to an activity",
        "properties" : {
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The actual activity ID to which the allocation was made",
            "example" : 123232
          },
          "allocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The allocation ID created in the activities service",
            "example" : 32323
          }
        },
        "required" : [ "activityId", "allocationId" ]
      },
      "ActivityMigrateRequest" : {
        "type" : "object",
        "description" : "Activity migration request",
        "properties" : {
          "programServiceCode" : {
            "type" : "string",
            "description" : "A nomis program service code (activity category)",
            "example" : "PRISON JOBS"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this activity takes place",
            "example" : "PVI",
            "maxLength" : 3,
            "minLength" : 0
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which this activity starts or started. Can not be null.",
            "example" : "2022-12-23"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date when this activity ends. Can be null.",
            "example" : "2022-12-23"
          },
          "dpsLocationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The optional DPS location UUID",
            "example" : "b7602cc8-e769-4cbb-8194-62d8e655992a"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The maximum number of prisoners who can attend. Not null.",
            "example" : 10
          },
          "description" : {
            "type" : "string",
            "description" : "A summary description for the activity.",
            "example" : "Maths level 1",
            "maxLength" : 50,
            "minLength" : 0
          },
          "payPerSession" : {
            "type" : "string",
            "description" : "Indicates (F)ull or (H)alf day (for payment purposes). Not nullable.",
            "enum" : [ "H", "F" ],
            "example" : "H"
          },
          "runsOnBankHoliday" : {
            "type" : "boolean",
            "description" : "Whether the schedule runs on bank holidays",
            "example" : true
          },
          "outsideWork" : {
            "type" : "boolean",
            "description" : "Whether the activity takes place outside of the prison",
            "example" : true
          },
          "scheduleRules" : {
            "type" : "array",
            "description" : "Details of when this activity runs during the week",
            "items" : {
              "$ref" : "#/components/schemas/NomisScheduleRule"
            }
          },
          "payRates" : {
            "type" : "array",
            "description" : "The pay rates which apply to this activity. Where none are specified we will assume an unpaid activity.",
            "items" : {
              "$ref" : "#/components/schemas/NomisPayRate"
            }
          }
        },
        "required" : [ "capacity", "description", "outsideWork", "payPerSession", "payRates", "prisonCode", "programServiceCode", "runsOnBankHoliday", "scheduleRules", "startDate" ]
      },
      "NomisPayRate" : {
        "type" : "object",
        "description" : "Describes a pay rate for an activity.",
        "properties" : {
          "incentiveLevel" : {
            "type" : "string",
            "description" : "The incentive level code from NOMIS",
            "example" : "BAS"
          },
          "nomisPayBand" : {
            "type" : "string",
            "description" : "The pay band code from NOMIS. If null, will be defaulted to 1",
            "example" : 2
          },
          "rate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The pay rate for one half day session in pence",
            "example" : 120
          }
        },
        "required" : [ "incentiveLevel", "rate" ]
      },
      "NomisScheduleRule" : {
        "type" : "object",
        "description" : "The scheduling rules in Nomis. At least one day and time must be specified.",
        "properties" : {
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "Start time on the day",
            "example" : "10:45"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "End time on the day",
            "example" : "11:45"
          },
          "monday" : {
            "type" : "boolean",
            "description" : "Runs on a Monday",
            "example" : true
          },
          "tuesday" : {
            "type" : "boolean",
            "description" : "Runs on a Tuesday",
            "example" : true
          },
          "wednesday" : {
            "type" : "boolean",
            "description" : "Runs on a Wednesday",
            "example" : true
          },
          "thursday" : {
            "type" : "boolean",
            "description" : "Runs on a Thursday",
            "example" : true
          },
          "friday" : {
            "type" : "boolean",
            "description" : "Runs on a Friday",
            "example" : true
          },
          "saturday" : {
            "type" : "boolean",
            "description" : "Runs on a Saturday",
            "example" : true
          },
          "sunday" : {
            "type" : "boolean",
            "description" : "Runs on a Sunday",
            "example" : true
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "Time slot",
            "enum" : [ "AM", "PM", "ED" ]
          }
        },
        "required" : [ "endTime", "friday", "monday", "saturday", "startTime", "sunday", "thursday", "tuesday", "wednesday" ]
      },
      "ActivityMigrateResponse" : {
        "type" : "object",
        "properties" : {
          "prisonCode" : {
            "type" : "string"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "splitRegimeActivityId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "activityId", "prisonCode" ]
      },
      "AppointmentMigrateRequest" : {
        "type" : "object",
        "description" : "The migration request with the appointment details",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS prison code where this appointment takes place",
            "example" : "PVI",
            "maxLength" : 6,
            "minLength" : 0
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner to allocate to the appointment",
            "example" : "A1234BC",
            "maxLength" : 10,
            "minLength" : 0
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS OFFENDER_BOOKINGS.OFFENDER_BOOK_ID value for mapping to a prisoner booking record in NOMIS",
            "example" : 456
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS reference code for this appointment.",
            "example" : "CHAP",
            "maxLength" : 12,
            "minLength" : 0
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS internal location id within the specified prison.\n    ",
            "example" : 123
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the appointment"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of the appointment",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the appointment",
            "example" : "10:30"
          },
          "comment" : {
            "type" : "string",
            "description" : "\n    Notes relating to the appointment.    \n    ",
            "example" : "This appointment will help adjusting to life outside of prison"
          },
          "isCancelled" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been cancelled\n    ",
            "example" : false
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment was created"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via NOMIS/HMPPS auth that created the appointment\n    ",
            "example" : "AAA01U",
            "maxLength" : 100,
            "minLength" : 0
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was last changed\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via NOMIS/HMPPS auth that modified the appointment\n    ",
            "example" : "AAA01U",
            "maxLength" : 100,
            "minLength" : 0
          }
        },
        "required" : [ "bookingId", "categoryCode", "created", "createdBy", "internalLocationId", "prisonCode", "prisonerNumber", "startDate", "startTime" ]
      },
      "AppointmentInstance" : {
        "type" : "object",
        "description" : "\n  Represents an appointment instance for a specific prisoner to attend at the specified location, date and time.\n  The fully denormalised representation of the appointment series, appointments and attendees equivalent to a row in\n  the NOMIS OFFENDER_IND_SCHEDULES table.\n  Appointment instances do not exist as database records and are the product of the join between appointment attendees,\n  appointments and appointment series. \n  The appointment attendee id is used for the appointment instance id as there is a one to one relationship between an\n  appointment attendee and appointment instances.\n  Appointment instances are used primarily for the one way sync to NOMIS.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The internally generated identifier for this appointment instance. N.B. this is the appointment attendee id due to\n    there being a one to one relationship between an appointment attendee and appointment instances.\n    ",
            "example" : 123456
          },
          "appointmentSeriesId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for the appointment series",
            "example" : 1234
          },
          "appointmentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for the appointment",
            "example" : 12345
          },
          "appointmentAttendeeId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The internally generated identifier for the appointment attendee. N.B. this is used as the appointment instance id\n    due to there being a one to one relationship between an appointment attendee and appointment instances.\n    ",
            "example" : 123456
          },
          "appointmentType" : {
            "type" : "string",
            "description" : "The appointment type (INDIVIDUAL or GROUP)",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The NOMIS OFFENDERS.OFFENDER_ID_DISPLAY value for mapping to a prisoner record in NOMIS",
            "example" : "A1234BC"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS OFFENDER_BOOKINGS.OFFENDER_BOOK_ID value for mapping to a prisoner booking record in NOMIS",
            "example" : 456
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS REFERENCE_CODES.CODE (DOMAIN = 'INT_SCH_RSN') value for mapping to NOMIS",
            "example" : "CHAP"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment instance. Used as part of the appointment name with the\n    format \"Appointment description (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID value for mapping to NOMIS.\n    Will be null if in cell = true\n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment instance is in cell rather than an internal prison location.\n    Internal location id should be null if in cell = true\n    ",
            "example" : false
          },
          "appointmentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the appointment instance"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of the appointment instance",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the appointment instance",
            "example" : "10:30"
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner attending this appointment instance.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment instance was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that created the appointment instance.\n    Usually a NOMIS username\n    ",
            "example" : "AAA01U"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment instance was last changed.\n    Will be null if this appointment instance has not been altered since it was created\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that edited this appointment instance.\n    Will be null if this appointment instance has not been altered since it was created\n    ",
            "example" : "AAA01U"
          }
        },
        "required" : [ "appointmentAttendeeId", "appointmentDate", "appointmentId", "appointmentSeriesId", "appointmentType", "bookingId", "categoryCode", "createdBy", "createdTime", "id", "inCell", "prisonCode", "prisonerNumber", "startTime" ]
      },
      "EventAcknowledgeRequest" : {
        "type" : "object",
        "description" : "The prisoner allocation request details",
        "properties" : {
          "eventReviewIds" : {
            "type" : "array",
            "description" : "The list of IDs to acknowledge",
            "example" : [ 3, 5, 6 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "required" : [ "eventReviewIds" ]
      },
      "AuditRecordSearchFilters" : {
        "type" : "object",
        "description" : "Set of search filters for searching audit records",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The code of the prison",
            "example" : "PVI"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number",
            "example" : "A1234AA"
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the logged-in user",
            "example" : "JONESA"
          },
          "auditType" : {
            "type" : "string",
            "description" : "The top-level audit category",
            "enum" : [ "PRISONER", "ACTIVITY", "APPOINTMENT" ],
            "example" : "ACTIVITY"
          },
          "auditEventType" : {
            "type" : "string",
            "description" : "The specific event type",
            "enum" : [ "ACTIVITY_CREATED", "ACTIVITY_UPDATED", "APPOINTMENT_CANCELLED", "APPOINTMENT_CANCELLED_ON_TRANSFER", "APPOINTMENT_SERIES_CREATED", "APPOINTMENT_DELETED", "APPOINTMENT_EDITED", "APPOINTMENT_UNCANCELLED", "BONUS_PAYMENT_MADE_FOR_ACTIVITY_ATTENDANCE", "APPOINTMENT_SET_CREATED", "INCENTIVE_LEVEL_WARNING_GIVEN_FOR_ACTIVITY_ATTENDANCE", "PRISONER_ACCEPTED_FROM_WAITING_LIST", "PRISONER_ADDED_TO_WAITING_LIST", "PRISONER_ALLOCATED", "PRISONER_DEALLOCATED", "PRISONER_DECLINED_FROM_WAITING_LIST", "PRISONER_REMOVED_FROM_WAITING_LIST", "PRISONER_SUSPENDED_FROM_ACTIVITY", "PRISONER_UNSUSPENDED_FROM_ACTIVITY", "PRISONER_MERGE" ],
            "example" : "ACTIVITY_CREATED"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time on or after which to search for events",
            "example" : "2022-09-01T09:01:02"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time on or before which to search for events",
            "example" : "2022-09-01T09:01:02"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The ID of the activity",
            "example" : 123456
          },
          "scheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The ID of the activity schedule",
            "example" : 123456
          }
        }
      },
      "LocalAuditRecord" : {
        "type" : "object",
        "description" : "Describes a system even that has been recorded for audit purposes",
        "properties" : {
          "localAuditId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this audit record",
            "example" : 123456
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the logg-in user that triggered this event",
            "example" : "JONESA"
          },
          "auditType" : {
            "type" : "string",
            "description" : "The top-level audit category",
            "enum" : [ "PRISONER", "ACTIVITY", "APPOINTMENT" ],
            "example" : "ACTIVITY"
          },
          "auditEventType" : {
            "type" : "string",
            "description" : "The specific event type",
            "enum" : [ "ACTIVITY_CREATED", "ACTIVITY_UPDATED", "APPOINTMENT_CANCELLED", "APPOINTMENT_CANCELLED_ON_TRANSFER", "APPOINTMENT_SERIES_CREATED", "APPOINTMENT_DELETED", "APPOINTMENT_EDITED", "APPOINTMENT_UNCANCELLED", "BONUS_PAYMENT_MADE_FOR_ACTIVITY_ATTENDANCE", "APPOINTMENT_SET_CREATED", "INCENTIVE_LEVEL_WARNING_GIVEN_FOR_ACTIVITY_ATTENDANCE", "PRISONER_ACCEPTED_FROM_WAITING_LIST", "PRISONER_ADDED_TO_WAITING_LIST", "PRISONER_ALLOCATED", "PRISONER_DEALLOCATED", "PRISONER_DECLINED_FROM_WAITING_LIST", "PRISONER_REMOVED_FROM_WAITING_LIST", "PRISONER_SUSPENDED_FROM_ACTIVITY", "PRISONER_UNSUSPENDED_FROM_ACTIVITY", "PRISONER_MERGE" ],
            "example" : "ACTIVITY_CREATED"
          },
          "recordedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time at which this event occurred",
            "example" : "2022-09-01T09:01:02"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The code of the prison to which the event relates",
            "example" : "PVI"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (if any) to which the event relates",
            "example" : "A1234AA"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The ID of the activity (if any) to which the event relates",
            "example" : 123456
          },
          "activityScheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The ID of the activity schedule (if any) to which the event relates",
            "example" : 123456
          },
          "message" : {
            "type" : "string",
            "description" : "A descriptive message of the event",
            "example" : "An activity called 'Some Activity'(1) with category C and starting on 2023-03-23 at prison PBI was created. Event created on 2023-03-22 at 09:00:03 by Bob."
          }
        },
        "required" : [ "auditEventType", "auditType", "localAuditId", "message", "prisonCode", "recordedTime", "username" ]
      },
      "LocalAuditSearchResults" : {
        "type" : "object",
        "description" : "The result of an audit record search",
        "properties" : {
          "content" : {
            "type" : "array",
            "description" : "The matching records",
            "items" : {
              "$ref" : "#/components/schemas/LocalAuditRecord"
            }
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The current page number",
            "example" : 0
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The total number of pages",
            "example" : 5
          }
        },
        "required" : [ "content", "pageNumber", "totalPages" ]
      },
      "AppointmentSearchRequest" : {
        "type" : "object",
        "description" : "The search parameters to use to filter appointments",
        "properties" : {
          "appointmentType" : {
            "type" : "string",
            "description" : "\n    The appointment type (INDIVIDUAL or GROUP) to match with the appointment series. Will restrict the search results to\n    appointments that are part of a series with the matching type when this search parameter is supplied.\n    ",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "\n    The start date to match with the appointments. Will restrict the search results to appointments\n    that have the matching start date when this search parameter is supplied but no end date is supplied.\n    When an end date is also supplied, the search uses a date range and will restrict the search results to\n    appointments that have a start date within the date range.\n    "
          },
          "timeSlots" : {
            "type" : "array",
            "description" : "\n    The time slot to match with the appointments. Will restrict the search results to appointments that have a start\n    time between the times defined by the prison for that time slot when this search parameter is supplied.\n    ",
            "example" : [ "AM", "PM", "ED" ],
            "items" : {
              "type" : "string",
              "enum" : [ "AM", "PM", "ED" ]
            }
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "\n    The NOMIS reference code to match with the appointments. Will restrict the search results to appointments\n    that have the matching category code when this search parameter is supplied.\n    ",
            "example" : "GYMW"
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS internal location id to match with the appointments. Will restrict the search results to\n    appointments that have the matching internal location id when this search parameter is supplied.\n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    The in cell flag value to match with the appointments. Will restrict the search results to appointments\n    that have the matching in cell value when this search parameter is supplied.\n    ",
            "example" : false
          },
          "prisonerNumbers" : {
            "type" : "array",
            "description" : "\n    The allocated prisoner or prisoners to match with the appointments. Will restrict the search results to\n    appointments that have the at least one of the supplied prisoner numbers attending when this search parameter\n    is supplied.\n    ",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth to match with the appointments. Will restrict the\n    search results to appointments that were created by this username when this search parameter is supplied.\n    ",
            "example" : "AAA01U"
          }
        },
        "required" : [ "startDate" ]
      },
      "AppointmentAttendeeSearchResult" : {
        "type" : "object",
        "description" : "\n  Summary search result details of a specific appointment attendee found via search. Contains properties needed to\n  make additional API calls and to populate a table of search results.\n  ",
        "properties" : {
          "appointmentAttendeeId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The internally generated identifier for this prisoner attending a specific appointment in an appointment series or set.\n    N.B. this is used as the appointment instance id due to there being a one to one relationship between an appointment\n    attendee and appointment instances.\n    ",
            "example" : 123456
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The NOMIS OFFENDERS.OFFENDER_ID_DISPLAY value for mapping to a prisoner record in NOMIS",
            "example" : "A1234BC"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS OFFENDER_BOOKINGS.OFFENDER_BOOK_ID value for mapping to a prisoner booking record in NOMIS",
            "example" : 456
          }
        },
        "required" : [ "appointmentAttendeeId", "bookingId", "prisonerNumber" ]
      },
      "AppointmentCategorySummary" : {
        "type" : "object",
        "description" : "\n  Summarises an appointment category for display purposes. Contains only properties needed to make additional API calls\n  and to display.\n  ",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The NOMIS REFERENCE_CODES.CODE (DOMAIN = 'INT_SCH_RSN') value for mapping to NOMIS",
            "example" : "CHAP"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the appointment category",
            "example" : "Chaplaincy"
          }
        },
        "required" : [ "code", "description" ]
      },
      "AppointmentLocationSummary" : {
        "type" : "object",
        "description" : "\n  Summarises an appointment location for display purposes. Contains only properties needed to make additional API calls\n  and to display. NOMIS is the current system of record for appointment locations and they are managed there.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID value for mapping to NOMIS.",
            "example" : 27
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "\n    The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS.\n    ",
            "example" : "SKI"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the appointment location. Mapped from AGENCY_INTERNAL_LOCATIONS.USER_DESC",
            "example" : "Chapel"
          }
        },
        "required" : [ "description", "id", "prisonCode" ]
      },
      "AppointmentSearchResult" : {
        "type" : "object",
        "description" : "\n  Summary search result details of a specific appointment found via search. Contains properties needed to\n  make additional API calls and to populate a table of search results.\n  ",
        "properties" : {
          "appointmentSeriesId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for the appointment series",
            "example" : 12345
          },
          "appointmentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment",
            "example" : 123456
          },
          "appointmentType" : {
            "type" : "string",
            "description" : "The type of the appointment series (INDIVIDUAL or GROUP)",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "\n    The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS.\n    ",
            "example" : "SKI"
          },
          "appointmentName" : {
            "type" : "string",
            "description" : "\n    The appointment's name combining the optional custom name with the category description. If custom name has been\n    specified, the name format will be \"Custom name (Category description)\" \n    "
          },
          "attendees" : {
            "type" : "array",
            "description" : "\n    The prisoner or prisoners attending this appointment. Appointments of type INDIVIDUAL will have one\n    prisoner attending to each appointment. Appointments of type GROUP can have more than one prisoner\n    attending each appointment\n    ",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentAttendeeSearchResult"
            }
          },
          "category" : {
            "$ref" : "#/components/schemas/AppointmentCategorySummary",
            "description" : "\n    The summary of the category of this appointment\n    "
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/AppointmentLocationSummary",
            "description" : "\n    The summary of the internal location this appointment will take place.\n    Will be null if in cell = true\n    "
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment is in cell rather than an internal prison location.\n    Internal location will be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date this appointment is taking place on"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of this appointment",
            "example" : "13:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of this appointment",
            "example" : "13:30"
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "time slot",
            "enum" : [ "AM", "PM", "ED" ]
          },
          "isRepeat" : {
            "type" : "boolean",
            "description" : "Indicates whether the appointment series was specified to repeat via its schedule",
            "example" : false
          },
          "sequenceNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The sequence number of this appointment within the appointment series",
            "example" : 3
          },
          "maxSequenceNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The sequence number of the final appointment within the appointment series",
            "example" : 6
          },
          "isEdited" : {
            "type" : "boolean",
            "description" : "Indicates whether this appointment has been changed from its original state",
            "example" : false
          },
          "isCancelled" : {
            "type" : "boolean",
            "description" : "Indicates whether this appointment has been cancelled",
            "example" : false
          },
          "isExpired" : {
            "type" : "boolean",
            "description" : "Indicates whether this appointment has expired",
            "example" : false
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment was created. Will not change"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was last changed.\n    Will be null if this appointment has not been altered since it was created\n    "
          },
          "cancelledTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was cancelled.\n    Will be null if this appointment has not been cancelled\n    "
          },
          "cancelledBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that cancelled this appointment.\n    Will be null if this appointment has not been cancelled\n    ",
            "example" : "AAA01U"
          }
        },
        "required" : [ "appointmentId", "appointmentName", "appointmentSeriesId", "appointmentType", "attendees", "category", "createdTime", "inCell", "isCancelled", "isEdited", "isExpired", "isRepeat", "maxSequenceNumber", "prisonCode", "sequenceNumber", "startDate", "startTime", "timeSlot" ]
      },
      "AppointmentAttendeeSummary" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Attendee\". A prisoner attending a specific appointment in an appointment series or set.\n  Contains the limited summary information needed to display the prisoner information and whether they attended or not.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The internally generated identifier for this prisoner attending a specific appointment in an appointment series or set.\n    N.B. this is used as the appointment instance id due to there being a one to one relationship between an appointment\n    attendee and appointment instances.\n    ",
            "example" : 123456
          },
          "prisoner" : {
            "$ref" : "#/components/schemas/PrisonerSummary",
            "description" : "Summary of the prisoner attending the appointment"
          },
          "attended" : {
            "type" : "boolean",
            "description" : "\n    Specifies whether the prisoner attended the specific appointment in an appointment series or set.\n    A null value means that the prisoner's attendance has not been recorded yet. \n    "
          },
          "attendanceRecordedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The latest date and time attendance was recorded. Note that attendance records can be updated and this is the most\n    recent date and time it was recorded. A null value means that the prisoner's attendance has not been recorded yet. \n    "
          },
          "attendanceRecordedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that last recorded attendance. Note that attendance records can be updated and this is the\n    most recent user that marked attendance. A null value means that the prisoner's attendance has not been recorded yet.\n    ",
            "example" : "AAA01U"
          }
        },
        "required" : [ "id", "prisoner" ]
      },
      "AppointmentDetails" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment\" and represents the scheduled event on a specific date and time.\n  Contains the full details of all the appointment properties and the summary collection of prisoners attending this appointment.\n  An appointment is part of either a series of an appointments on a schedule or a set of appointments on the same day.\n  The summary information of which appointment collection they are part of is included in these details.\n  All updates and cancellations happen at this appointment level with the parent appointment series being immutable.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment",
            "example" : 123456
          },
          "appointmentSeries" : {
            "$ref" : "#/components/schemas/AppointmentSeriesSummary",
            "description" : "\n    Summary of the appointment series this appointment is part of.\n    Will be null if this appointment is part of a set of appointments on the same day.\n    "
          },
          "appointmentSet" : {
            "$ref" : "#/components/schemas/AppointmentSetSummary",
            "description" : "\n    Summary of the appointment set this appointment is part of\n    Will be null if this appointment is part of a series of an appointments on a schedule.\n    "
          },
          "appointmentType" : {
            "type" : "string",
            "description" : "The appointment type (INDIVIDUAL or GROUP)",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "sequenceNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The sequence number of this appointment within the appointment series",
            "example" : 3
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "appointmentName" : {
            "type" : "string",
            "description" : "\n    The appointment's name combining the optional custom name with the category description. If custom name has been\n    specified, the name format will be \"Custom name (Category description)\" \n    "
          },
          "attendees" : {
            "type" : "array",
            "description" : "\n    Summary of the prisoner or prisoners attending this appointment and their attendance record if any.\n    Attendees are at the appointment level to allow for per appointment attendee changes.\n    ",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentAttendeeSummary"
            }
          },
          "category" : {
            "$ref" : "#/components/schemas/AppointmentCategorySummary",
            "description" : "\n    The summary of the appointment's category. Can be different to the parent appointment series if this appointment\n    has been edited.\n    "
          },
          "tier" : {
            "$ref" : "#/components/schemas/EventTier",
            "description" : "The tier for this appointment, as defined by the Future Prison Regime team"
          },
          "organiser" : {
            "$ref" : "#/components/schemas/EventOrganiser",
            "description" : "The organiser of this appointment"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/AppointmentLocationSummary",
            "description" : "\n    The summary of the internal location this appointment will take place. Can be different to the parent\n    appointment series if this appointment has been edited.\n    Will be null if in cell = true\n    "
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment is in cell rather than an internal prison location.\n    Internal location will be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date this appointment is taking place on"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of this appointment",
            "example" : "13:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of this appointment",
            "example" : "13:30"
          },
          "isExpired" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has expired i.e. it's start date and time is in the past\n    ",
            "example" : false
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner or prisoners attending this appointment.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that created this appointment\n    "
          },
          "isEdited" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been independently changed from the original state it was in when\n    it was created as part of an appointment series\n    ",
            "example" : false
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was last changed.\n    Will be null if this appointment has not been altered since it was created\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that last edited this appointment.\n    Will be null if this appointment has not been altered since it was created\n    "
          },
          "isCancelled" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been cancelled\n    ",
            "example" : false
          },
          "isDeleted" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been deleted and removed from scheduled events.\n    ",
            "example" : false
          },
          "cancelledTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time this appointment was cancelled.\n    Will be null if this appointment has not been cancelled\n    "
          },
          "cancelledBy" : {
            "type" : "string",
            "description" : "\n    The username of the user who cancelled this appointment.\n    Will be null if this appointment has not been cancelled\n    "
          }
        },
        "required" : [ "appointmentName", "appointmentType", "attendees", "category", "createdBy", "createdTime", "id", "inCell", "isCancelled", "isDeleted", "isEdited", "isExpired", "prisonCode", "sequenceNumber", "startDate", "startTime" ]
      },
      "AppointmentSeriesSummary" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment series\" and only shown for repeat appointments.\n  The top level of the standard appointment hierarchy containing summary information of a limited set of the initial\n  property values common to all appointments in the series as well as the count of appointments in the series.\n  The properties at this level cannot be changed via the API however the child appointment property values can be changed\n  independently to support rescheduling, cancelling and altered attendee lists per appointment.\n  N.B. there is no collection of attending prisoners at this top level as all attendees are per appointment. This is to\n  support attendee modification for each scheduled appointment and to prevent altering the past by editing attendees\n  in an appointment series where some appointments have past.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment series",
            "example" : 12345
          },
          "schedule" : {
            "$ref" : "#/components/schemas/AppointmentSeriesSchedule",
            "description" : "\n    Describes the schedule of the appointment series i.e. how the appointments in the series repeat. The frequency of\n    those appointments and how many appointments there are in total in the series.\n    If null, the appointment series has only one appointment. Note that the presence of this property does not mean\n    there is more than one appointment as a number of appointments value of one is valid.\n    "
          },
          "appointmentCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "\n    The total count of appointments in the series that have not been deleted. Counts both appointments in the past and\n    those scheduled.\n    "
          },
          "scheduledAppointmentCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "\n    The count of the remaining scheduled appointments in the series that have not been cancelled or deleted.\n    "
          }
        },
        "required" : [ "appointmentCount", "id", "scheduledAppointmentCount" ]
      },
      "AppointmentSetSummary" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment set\" or \"set of back-to-back appointments\".\n  Contains the limited summary information needed to display the fact that an appointment was created as part of a set.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment set",
            "example" : 12345
          },
          "appointmentCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "\n    The number of appointments in the set that have not been deleted. Counts both appointments in the past and\n    those scheduled.\n    ",
            "example" : 3
          },
          "scheduledAppointmentCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "\n    The count of the remaining scheduled appointments in the set that have not been cancelled or deleted.\n    "
          }
        },
        "required" : [ "appointmentCount", "id", "scheduledAppointmentCount" ]
      },
      "PrisonerSummary" : {
        "type" : "object",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The NOMIS OFFENDERS.OFFENDER_ID_DISPLAY value for mapping to a prisoner record in NOMIS",
            "example" : "A1234BC"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The NOMIS OFFENDER_BOOKINGS.OFFENDER_BOOK_ID value for mapping to a prisoner booking record in NOMIS",
            "example" : 456
          },
          "firstName" : {
            "type" : "string",
            "description" : "The prisoner's first name",
            "example" : "Albert"
          },
          "lastName" : {
            "type" : "string",
            "description" : "The prisoner's first name",
            "example" : "Abbot"
          },
          "status" : {
            "type" : "string",
            "description" : "The prisoner's status at their current prison",
            "example" : "ACTIVE IN"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "\n    The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS.\n    ",
            "example" : "SKI"
          },
          "cellLocation" : {
            "type" : "string",
            "description" : "\n    The prisoner's residential cell location when inside the prison.\n    ",
            "example" : "A-1-002"
          },
          "category" : {
            "type" : "string",
            "description" : "\n    The prisoner's category.\n    ",
            "example" : "P"
          }
        },
        "required" : [ "bookingId", "cellLocation", "firstName", "lastName", "prisonCode", "prisonerNumber" ]
      },
      "AppointmentSetAppointment" : {
        "type" : "object",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner attending the appointment",
            "example" : "A1234BC"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of the appointment",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the appointment",
            "example" : "10:30"
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner or prisoners attending the appointment. Shown only on the appointments details\n    page and on printed movement slips. Wing staff will be notified there is extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison",
            "maxLength" : 4000,
            "minLength" : 0
          }
        },
        "required" : [ "endTime", "prisonerNumber", "startTime" ]
      },
      "AppointmentSetCreateRequest" : {
        "type" : "object",
        "description" : "The create request with the new appointment set details",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS prison code where these appointments takes place",
            "example" : "PVI",
            "maxLength" : 3,
            "minLength" : 0
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS reference code for these appointments. Must exist and be active",
            "example" : "CHAP"
          },
          "tierCode" : {
            "type" : "string",
            "description" : "The tier code for this appointment",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ],
            "example" : "TIER_1"
          },
          "organiserCode" : {
            "type" : "string",
            "description" : "The organiser code for this appointment",
            "enum" : [ "PRISON_STAFF", "PRISONER", "EXTERNAL_PROVIDER", "OTHER" ],
            "example" : "PRISON_STAFF"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment series. Will be used to create the appointment name using the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor",
            "maxLength" : 40,
            "minLength" : 0
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS internal location id within the specified prison. This must be supplied if inCell is false.\n    The internal location id must exist, must be within the prison specified by the prisonCode property and be active. \n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointments is in cell rather than an internal prison location.\n    Internal location id will be ignored if inCell is true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the appointments"
          },
          "appointments" : {
            "type" : "array",
            "description" : "\n    The list of appointments to create\n    ",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentSetAppointment"
            }
          }
        },
        "required" : [ "appointments", "categoryCode", "inCell", "prisonCode", "startDate", "tierCode" ]
      },
      "AppointmentSet" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment set\" or \"set of back-to-back appointments\".\n  Contains the initial property values common to all appointment series and appointments in the set.\n  The properties at this level cannot be changed via the API.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment set",
            "example" : 12345
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS REFERENCE_CODES.CODE (DOMAIN = 'INT_SCH_RSN') value for mapping to NOMIS",
            "example" : "CHAP"
          },
          "tier" : {
            "$ref" : "#/components/schemas/EventTier",
            "description" : "The tier for this appointment, as defined by the Future Prison Regime team"
          },
          "organiser" : {
            "$ref" : "#/components/schemas/EventOrganiser",
            "description" : "The organiser of this appointment"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment set. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID value for mapping to NOMIS.\n    Will be null if in cell = true\n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment set is in cell rather than an internal prison location.\n    Internal location id should be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the first appointment in each appointment series in the set"
          },
          "appointments" : {
            "type" : "array",
            "description" : "The appointments in the set",
            "items" : {
              "$ref" : "#/components/schemas/Appointment"
            }
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment set was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user authenticated via HMPPS auth that created this appointment set.\n    Usually a NOMIS username\n    ",
            "example" : "AAA01U"
          }
        },
        "required" : [ "appointments", "categoryCode", "createdBy", "createdTime", "id", "inCell", "prisonCode", "startDate" ]
      },
      "AppointmentSeriesCreateRequest" : {
        "type" : "object",
        "description" : "The create request with the new appointment series details",
        "properties" : {
          "appointmentType" : {
            "type" : "string",
            "description" : "The appointment type (INDIVIDUAL or GROUP)",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS prison code where this appointment series takes place",
            "example" : "PVI",
            "maxLength" : 3,
            "minLength" : 0
          },
          "prisonerNumbers" : {
            "type" : "array",
            "description" : "The prisoner or prisoners attending the appointment or appointments in the series",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          },
          "categoryCode" : {
            "type" : "string",
            "description" : "The NOMIS reference code for this appointment. Must exist and be active",
            "example" : "CHAP"
          },
          "tierCode" : {
            "type" : "string",
            "description" : "The tier code for this appointment",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ],
            "example" : "TIER_1"
          },
          "organiserCode" : {
            "type" : "string",
            "description" : "The organiser code for this appointment",
            "enum" : [ "PRISON_STAFF", "PRISONER", "EXTERNAL_PROVIDER", "OTHER" ],
            "example" : "PRISON_STAFF"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment series. Will be used to create the appointment name using the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor",
            "maxLength" : 40,
            "minLength" : 0
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The NOMIS internal location id within the specified prison. This must be supplied if inCell is false.\n    The internal location id must exist, must be within the prison specified by the prisonCode property and be active. \n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment series is in cell rather than an internal prison location.\n    Internal location id will be ignored if inCell is true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the first appointment in the series"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of the appointment or appointments in the series",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the appointment or appointments in the series",
            "example" : "10:30"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/AppointmentSeriesSchedule",
            "description" : "\n    Describes the schedule of the appointment series i.e. how the appointments in the series will repeat. The frequency\n    of those appointments and how many appointments there will be in total in the series.\n    Will create a single appointment if not supplied.\n    "
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner or prisoners attending the appointment or appointments in the series.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison",
            "maxLength" : 4000,
            "minLength" : 0
          },
          "originalAppointmentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The id of the original appointment that the new appointment was copied from\n    ",
            "example" : 789
          }
        },
        "required" : [ "appointmentType", "categoryCode", "endTime", "inCell", "prisonCode", "prisonerNumbers", "startDate", "startTime", "tierCode" ]
      },
      "WaitingListApplicationRequest" : {
        "type" : "object",
        "description" : "The request with the prisoner waiting list details",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (NOMIS ID)",
            "example" : "A1234AA",
            "maxLength" : 7,
            "minLength" : 0
          },
          "activityScheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity schedule (assumes 1-2-1 with activity)",
            "example" : 7654321
          },
          "applicationDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The past or present date on which the waiting list application was requested",
            "example" : "2023-06-23"
          },
          "requestedBy" : {
            "type" : "string",
            "description" : "The person who made the request",
            "example" : "Fred Bloggs",
            "maxLength" : 100,
            "minLength" : 0
          },
          "comments" : {
            "type" : "string",
            "description" : "Any particular comments related to the waiting list request",
            "example" : "The prisoner has specifically requested to attend this activity",
            "maxLength" : 500,
            "minLength" : 0
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the application. Only PENDING, APPROVED or DECLINED are allowed when creating.",
            "enum" : [ "PENDING", "APPROVED", "DECLINED", "ALLOCATED", "REMOVED" ],
            "example" : "PENDING"
          }
        },
        "required" : [ "activityScheduleId", "applicationDate", "prisonerNumber", "requestedBy", "status" ]
      },
      "UnsuspendPrisonerRequest" : {
        "type" : "object",
        "description" : "The request with the suspension details",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (NOMIS ID)",
            "example" : "A1234AA",
            "maxLength" : 7,
            "minLength" : 0
          },
          "allocationIds" : {
            "type" : "array",
            "description" : "The allocation or allocations affected by the suspensions request. They must all be for the same prisoner",
            "example" : [ 1, 2, 3, 4 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "suspendUntil" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will be suspended till from the activity",
            "example" : "2023-09-10"
          }
        },
        "required" : [ "allocationIds", "prisonerNumber", "suspendUntil" ]
      },
      "SuspendPrisonerRequest" : {
        "type" : "object",
        "description" : "The request with the suspension details",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number (NOMIS ID)",
            "example" : "A1234AA",
            "maxLength" : 7,
            "minLength" : 0
          },
          "allocationIds" : {
            "type" : "array",
            "description" : "The allocation or allocations affected by the suspensions request. They must all be for the same prisoner",
            "example" : [ 1, 2, 3, 4 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "suspendFrom" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will be suspended from the activity",
            "example" : "2023-09-10"
          },
          "suspensionCaseNote" : {
            "$ref" : "#/components/schemas/AddCaseNoteRequest",
            "description" : "Describes a case note to be added to the prisoner's profile as part of the suspension."
          },
          "status" : {
            "type" : "string",
            "description" : "The type of suspension. Only SUSPENDED or SUSPENDED_WITH_PAY are allowed when suspending",
            "enum" : [ "ACTIVE", "PENDING", "SUSPENDED", "AUTO_SUSPENDED", "ENDED", "SUSPENDED_WITH_PAY" ],
            "example" : "SUSPENDED_WITH_PAY"
          }
        },
        "required" : [ "allocationIds", "prisonerNumber", "status", "suspendFrom" ]
      },
      "ActivityCreateRequest" : {
        "type" : "object",
        "description" : "The create request with the new activity details",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this activity takes place",
            "example" : "PVI",
            "maxLength" : 3,
            "minLength" : 0
          },
          "attendanceRequired" : {
            "type" : "boolean",
            "description" : "Flag to indicate if attendance is required for this activity, e.g. gym induction might not be mandatory attendance",
            "example" : false
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is in cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "pieceWork" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity is piece work",
            "example" : false
          },
          "outsideWork" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity carried out outside of the prison",
            "example" : false
          },
          "paid" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity is a paid activity. It true then pay rates are required, if false then no pay rates should be provided",
            "example" : true
          },
          "payPerSession" : {
            "type" : "string",
            "description" : "Indicates whether the activity session is a (F)ull day or a (H)alf day (for payment purposes). ",
            "enum" : [ "H", "F" ],
            "example" : "H"
          },
          "summary" : {
            "type" : "string",
            "description" : "A brief summary description of this activity for use in forms and lists",
            "example" : "Maths level 1",
            "maxLength" : 50,
            "minLength" : 0
          },
          "description" : {
            "type" : "string",
            "description" : "A detailed description for this activity",
            "example" : "A basic maths course suitable for introduction to the subject",
            "maxLength" : 300,
            "minLength" : 0
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The category id for this activity, one of the high-level categories"
          },
          "tierCode" : {
            "type" : "string",
            "description" : "The tier code for this activity, as defined by the Future Prison Regime team",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ],
            "example" : "TIER_1"
          },
          "organiserCode" : {
            "type" : "string",
            "description" : "The organiser code for the organiser of this activity",
            "example" : "PRISON_STAFF"
          },
          "eligibilityRuleIds" : {
            "type" : "array",
            "description" : "A list of eligibility rules ids which apply to this activity.",
            "example" : [ 1, 2, 3 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "pay" : {
            "type" : "array",
            "description" : "The list of pay rates that can apply to this activity",
            "items" : {
              "$ref" : "#/components/schemas/ActivityPayCreateRequest"
            }
          },
          "riskLevel" : {
            "type" : "string",
            "description" : "The most recent risk assessment level for this activity",
            "example" : "high",
            "maxLength" : 10,
            "minLength" : 0
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The future date on which this activity will start. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-12-23"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this activity ends. From this date, there will be no more planned instances of the activity. If null, the activity has no end date and will be scheduled indefinitely.",
            "example" : "2022-12-23"
          },
          "minimumEducationLevel" : {
            "type" : "array",
            "description" : "The list of minimum education levels that apply to this activity",
            "items" : {
              "$ref" : "#/components/schemas/ActivityMinimumEducationLevelCreateRequest"
            }
          },
          "dpsLocationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The optional DPS location UUID for this schedule",
            "example" : "b7602cc8-e769-4cbb-8194-62d8e655992a"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The maximum number of prisoners allowed for a scheduled instance of this schedule",
            "example" : 10
          },
          "scheduleWeeks" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of weeks in the schedule",
            "example" : 1,
            "maximum" : 2,
            "minimum" : 1
          },
          "slots" : {
            "type" : "array",
            "description" : "The days and times an activity schedule can take place",
            "items" : {
              "$ref" : "#/components/schemas/Slot"
            }
          },
          "runsOnBankHoliday" : {
            "type" : "boolean",
            "description" : "Whether the schedule runs on bank holidays",
            "example" : true
          }
        },
        "required" : [ "attendanceRequired", "categoryId", "eligibilityRuleIds", "inCell", "minimumEducationLevel", "offWing", "onWing", "outsideWork", "paid", "pay", "pieceWork", "prisonCode", "riskLevel", "runsOnBankHoliday", "scheduleWeeks", "slots", "startDate", "summary", "tierCode" ]
      },
      "ActivityMinimumEducationLevelCreateRequest" : {
        "type" : "object",
        "description" : "Describes the minimum education levels to be created for an activity",
        "properties" : {
          "educationLevelCode" : {
            "type" : "string",
            "description" : "The Education level code",
            "example" : 1,
            "maxLength" : 10,
            "minLength" : 0
          },
          "educationLevelDescription" : {
            "type" : "string",
            "description" : "The Education level description",
            "example" : "Reading Measure 1.0",
            "maxLength" : 60,
            "minLength" : 0
          },
          "studyAreaCode" : {
            "type" : "string",
            "description" : "The study area code",
            "example" : "ENGLA",
            "maxLength" : 10,
            "minLength" : 0
          },
          "studyAreaDescription" : {
            "type" : "string",
            "description" : "The study area description",
            "example" : "English Language",
            "maxLength" : 60,
            "minLength" : 0
          }
        },
        "required" : [ "educationLevelCode", "educationLevelDescription", "studyAreaCode", "studyAreaDescription" ]
      },
      "ActivityPayCreateRequest" : {
        "type" : "object",
        "description" : "Describes the pay rates and bands to be created for an activity",
        "properties" : {
          "incentiveNomisCode" : {
            "type" : "string",
            "description" : "The NOMIS code for the incentive/earned privilege level",
            "example" : "BAS",
            "maxLength" : 3,
            "minLength" : 0
          },
          "incentiveLevel" : {
            "type" : "string",
            "description" : "The incentive/earned privilege level",
            "example" : "Basic",
            "maxLength" : 50,
            "minLength" : 0
          },
          "payBandId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the prison pay band used",
            "example" : 1
          },
          "rate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The earning rate for one half day session for someone of this incentive level and pay band (in pence)",
            "example" : 150
          },
          "pieceRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Where payment is related to produced amounts of a product, this indicates the payment rate (in pence) per pieceRateItems produced",
            "example" : 150
          },
          "pieceRateItems" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Where payment is related to the number of items produced in a batch of a product, this is the batch size that attract 1 x pieceRate",
            "example" : 10
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The effective start date for this pay rate",
            "example" : "2022-12-23"
          }
        },
        "required" : [ "incentiveLevel", "incentiveNomisCode", "payBandId" ]
      },
      "Activity" : {
        "type" : "object",
        "description" : "Describes a top-level activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity",
            "example" : 123456
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this activity takes place",
            "example" : "PVI"
          },
          "attendanceRequired" : {
            "type" : "boolean",
            "description" : "Flag to indicate if attendance is required for this activity, e.g. gym induction might not be mandatory attendance",
            "example" : false
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is in cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "pieceWork" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity is piece work",
            "example" : false
          },
          "outsideWork" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity carried out outside of the prison",
            "example" : false
          },
          "payPerSession" : {
            "type" : "string",
            "description" : "Indicates whether the activity session is a (F)ull day or a (H)alf day (for payment purposes). ",
            "enum" : [ "H", "F" ],
            "example" : "H"
          },
          "summary" : {
            "type" : "string",
            "description" : "A brief summary description of this activity for use in forms and lists",
            "example" : "Maths level 1"
          },
          "description" : {
            "type" : "string",
            "description" : "A detailed description for this activity",
            "example" : "A basic maths course suitable for introduction to the subject"
          },
          "category" : {
            "$ref" : "#/components/schemas/ActivityCategory",
            "description" : "The category for this activity, one of the high-level categories"
          },
          "tier" : {
            "$ref" : "#/components/schemas/EventTier",
            "description" : "The tier for this activity, as defined by the Future Prison Regime team"
          },
          "organiser" : {
            "$ref" : "#/components/schemas/EventOrganiser",
            "description" : "The organiser of this activity"
          },
          "eligibilityRules" : {
            "type" : "array",
            "description" : "A list of eligibility rules which apply to this activity. These can be positive (include) and negative (exclude)",
            "example" : "[FEMALE_ONLY,AGED_18-25]",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEligibility"
            }
          },
          "schedules" : {
            "type" : "array",
            "description" : "A list of schedules for this activity. These contain the time slots / recurrence settings for instances of this activity.",
            "items" : {
              "$ref" : "#/components/schemas/ActivitySchedule"
            }
          },
          "pay" : {
            "type" : "array",
            "description" : "The list of pay rates by incentive level and pay band that can apply to this activity",
            "items" : {
              "$ref" : "#/components/schemas/ActivityPay"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this activity will start. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-09-21"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this activity ends. From this date, there will be no more planned instances of the activity. If null, the activity has no end date and will be scheduled indefinitely.",
            "example" : "2022-12-21"
          },
          "riskLevel" : {
            "type" : "string",
            "description" : "The most recent risk assessment level for this activity",
            "example" : "high"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time when this activity was created",
            "example" : "2022-09-01T09:01:02"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The person who created this activity",
            "example" : "Adam Smith"
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time when this activity was updated",
            "example" : "2022-09-01T09:01:02"
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "The person who updated this activity",
            "example" : "Adam Smith"
          },
          "minimumEducationLevel" : {
            "type" : "array",
            "description" : "The list of minimum education levels that can apply to this activity",
            "items" : {
              "$ref" : "#/components/schemas/ActivityMinimumEducationLevel"
            }
          },
          "paid" : {
            "type" : "boolean",
            "description" : "Whether the activity is a paid activity",
            "example" : true
          }
        },
        "required" : [ "attendanceRequired", "category", "createdBy", "createdTime", "eligibilityRules", "id", "inCell", "minimumEducationLevel", "offWing", "onWing", "outsideWork", "paid", "pay", "payPerSession", "pieceWork", "prisonCode", "riskLevel", "schedules", "startDate", "summary" ]
      },
      "ActivityEligibility" : {
        "type" : "object",
        "description" : "Describes an eligibility rule as applied to an activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internal ID of the activity that these rules apply to",
            "example" : 123456
          },
          "eligibility" : {
            "$ref" : "#/components/schemas/EligibilityRule",
            "description" : "The eligiblity rule which applies"
          }
        },
        "required" : [ "eligibility", "id" ]
      },
      "ActivityPay" : {
        "type" : "object",
        "description" : "Describes the pay rates and bands which apply to an activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity pay",
            "example" : 123456
          },
          "incentiveNomisCode" : {
            "type" : "string",
            "description" : "The NOMIS code for the incentive/earned privilege level",
            "example" : "BAS"
          },
          "incentiveLevel" : {
            "type" : "string",
            "description" : "The incentive/earned privilege level",
            "example" : "Basic"
          },
          "prisonPayBand" : {
            "$ref" : "#/components/schemas/PrisonPayBand",
            "description" : "The pay band for this activity pay"
          },
          "rate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The earning rate for one half day session for someone of this incentive level and pay band (in pence)",
            "example" : 150
          },
          "pieceRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Where payment is related to produced amounts of a product, this indicates the payment rate (in pence) per pieceRateItems produced",
            "example" : 150
          },
          "pieceRateItems" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Where payment is related to the number of items produced in a batch of a product, this is the batch size that attract 1 x pieceRate",
            "example" : 10
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The effective start date for this pay rate",
            "example" : "2024-06-18"
          }
        },
        "required" : [ "id", "incentiveLevel", "incentiveNomisCode", "prisonPayBand" ]
      },
      "ActivitySchedule" : {
        "type" : "object",
        "description" : "\n  Describes the weekly schedule for an activity. There can be several of these defined for one activity.\n  An activity schedule describes when, during the week, an activity will be run and where.\n  e.g. Tuesday PM and Thursday AM - suitable for Houseblock 2 to attend.\n  e.g. Monday AM and Thursday PM - suitable for Houseblock 3 to attend.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity schedule",
            "example" : 123456
          },
          "instances" : {
            "type" : "array",
            "description" : "The planned instances associated with this activity schedule",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledInstance"
            }
          },
          "allocations" : {
            "type" : "array",
            "description" : "The list of allocated prisoners who are allocated to this schedule, at this time and location",
            "items" : {
              "$ref" : "#/components/schemas/Allocation"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description of this activity schedule",
            "example" : "Entry level Maths 1"
          },
          "suspensions" : {
            "type" : "array",
            "description" : "Indicates the dates between which the schedule has been suspended",
            "items" : {
              "$ref" : "#/components/schemas/Suspension"
            }
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/InternalLocation",
            "description" : "The NOMIS internal location for this schedule",
            "example" : 98877667
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The maximum number of prisoners allowed for a scheduled instance of this schedule",
            "example" : 10
          },
          "activity" : {
            "$ref" : "#/components/schemas/ActivityLite",
            "description" : "The activity"
          },
          "scheduleWeeks" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of weeks in the schedule",
            "example" : 1
          },
          "slots" : {
            "type" : "array",
            "description" : "The slots associated with this activity schedule",
            "items" : {
              "$ref" : "#/components/schemas/ActivityScheduleSlot"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this schedule will start. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-09-21"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this schedule will end. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-10-21"
          },
          "runsOnBankHoliday" : {
            "type" : "boolean",
            "description" : "Whether the schedule runs on bank holidays",
            "example" : true
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time when this activity schedule was updated",
            "example" : "2022-09-01T09:01:02"
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "The person who updated this activity schedule",
            "example" : "Adam Smith"
          },
          "usePrisonRegimeTime" : {
            "type" : "boolean",
            "description" : "a flag to indicate if this activity is scheduled according to prison standard regime times"
          }
        },
        "required" : [ "activity", "allocations", "capacity", "description", "id", "instances", "runsOnBankHoliday", "scheduleWeeks", "slots", "startDate", "suspensions", "usePrisonRegimeTime" ]
      },
      "EligibilityRule" : {
        "type" : "object",
        "description" : "Defines one eligibility rule",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this eligibility rule",
            "example" : 123456
          },
          "code" : {
            "type" : "string",
            "description" : "The code for this eligibility rule",
            "example" : "OVER_21"
          },
          "description" : {
            "type" : "string",
            "description" : "The description for this eligibility rule",
            "example" : "The prisoner must be over 21 to attend"
          }
        },
        "required" : [ "code", "description", "id" ]
      },
      "ScheduledInstance" : {
        "type" : "object",
        "description" : "Describes one instance of an activity schedule",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this scheduled instance",
            "example" : 123456
          },
          "date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The specific date for this scheduled instance",
            "example" : "2022-09-30"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time for this scheduled instance",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time for this scheduled instance",
            "example" : "10:00"
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "The timeslot",
            "enum" : [ "AM", "PM", "ED" ]
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "Flag to indicate if this scheduled instance has been cancelled since being scheduled",
            "example" : false
          },
          "cancelledTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date and time this scheduled instance was cancelled (or null if not cancelled)",
            "example" : "2022-09-29T11:20:00"
          },
          "cancelledBy" : {
            "type" : "string",
            "description" : "The person who cancelled this scheduled instance (or null if not cancelled)",
            "example" : "Adam Smith"
          },
          "attendances" : {
            "type" : "array",
            "description" : "The attendance records for this scheduled instance",
            "items" : {
              "$ref" : "#/components/schemas/Attendance"
            }
          }
        },
        "required" : [ "attendances", "cancelled", "date", "endTime", "id", "startTime", "timeSlot" ]
      },
      "Suspension" : {
        "type" : "object",
        "description" : "Describes the period of time an activity schedule has been suspended",
        "properties" : {
          "suspendedFrom" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date from which the activity schedule was suspended",
            "example" : "2022-09-02"
          },
          "suspendedUntil" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date until which the activity schedule was suspended. If null, the schedule is suspended indefinitely",
            "example" : "2022-09-02"
          }
        },
        "required" : [ "suspendedFrom" ]
      },
      "WaitingListApplicationUpdateRequest" : {
        "type" : "object",
        "description" : "The update request with the waiting list changes",
        "properties" : {
          "applicationDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "\n      The updated past or present date on which the waiting list application was requested.\n      \n      Note this cannot be after the date the waiting list application was first made.\n    ",
            "example" : "2023-06-23"
          },
          "requestedBy" : {
            "type" : "string",
            "description" : "The updated person who made the request",
            "example" : "Fred Bloggs",
            "maxLength" : 100,
            "minLength" : 0
          },
          "comments" : {
            "type" : "string",
            "description" : "The updated comments related to the waiting list request",
            "example" : "The prisoner has specifically requested to attend this activity",
            "maxLength" : 500,
            "minLength" : 0
          },
          "status" : {
            "type" : "string",
            "description" : "The updated status of the application. Only PENDING, APPROVED or DECLINED are allowed when updating.",
            "enum" : [ "PENDING", "APPROVED", "DECLINED", "ALLOCATED", "REMOVED" ],
            "example" : "PENDING"
          }
        }
      },
      "PrisonPayBandUpdateRequest" : {
        "type" : "object",
        "description" : "The prison pay band to update",
        "properties" : {
          "displaySequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The order in which the pay band should be presented within a list e.g. dropdown",
            "example" : 1
          },
          "alias" : {
            "type" : "string",
            "description" : "The alternative text to use in place of the description e.g. Low, Medium, High",
            "example" : "Low"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of pay band in this prison",
            "example" : "Pay band 1"
          }
        },
        "required" : [ "alias", "description" ]
      },
      "AppointmentUpdateRequest" : {
        "type" : "object",
        "description" : "The update request with the new appointment details and how to apply the update",
        "properties" : {
          "categoryCode" : {
            "type" : "string",
            "description" : "\n    The updated NOMIS reference code. Must exist and be active.\n    ",
            "example" : "GYMW"
          },
          "tierCode" : {
            "type" : "string",
            "description" : "The tier code for this appointment",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ],
            "example" : "TIER_1"
          },
          "organiserCode" : {
            "type" : "string",
            "description" : "The organiser code for this appointment",
            "enum" : [ "PRISON_STAFF", "PRISONER", "EXTERNAL_PROVIDER", "OTHER" ],
            "example" : "PRISON_STAFF"
          },
          "internalLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The updated NOMIS internal location id within the specified prison. This must be supplied if inCell is false.\n    The internal location id must exist, must be within the prison specified by the prisonCode property on the\n    appointment and be active. \n    ",
            "example" : 123
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment or appointments is in cell rather than an internal prison location.\n    Internal location id will be ignored if inCell is true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "\n    The updated date of the appointment. NOTE: this property specifies the start date to use along with the existing\n    schedule frequency to move all appointments that will take place after the appointment when used in conjunction\n    with the applyTo property\n    "
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The updated starting time",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The updated end time",
            "example" : "10:30"
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Updated extra information for the prisoner or prisoners attending the appointment or appointments.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison",
            "maxLength" : 4000,
            "minLength" : 0
          },
          "removePrisonerNumbers" : {
            "type" : "array",
            "description" : "The prisoner or prisoners to remove from the appointment or appointments",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          },
          "addPrisonerNumbers" : {
            "type" : "array",
            "description" : "The new prisoner or prisoners that will be attending the appointment or appointments",
            "example" : [ "A1234BC" ],
            "items" : {
              "type" : "string"
            }
          },
          "applyTo" : {
            "type" : "string",
            "description" : "\n    Specifies which appointment or appointments this update should apply to.\n    Defaults to THIS_APPOINTMENT meaning the update will be applied to the appointment specified by the\n    supplied id only.\n    ",
            "enum" : [ "THIS_APPOINTMENT", "THIS_AND_ALL_FUTURE_APPOINTMENTS", "ALL_FUTURE_APPOINTMENTS" ],
            "example" : "THIS_APPOINTMENT"
          },
          "isPropertyUpdate" : {
            "type" : "boolean"
          }
        },
        "required" : [ "applyTo", "isPropertyUpdate" ]
      },
      "AllocationUpdateRequest" : {
        "type" : "object",
        "description" : "The update request with the new allocation details",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will start the activity",
            "example" : "2022-09-10"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the prisoner will stop attending the activity",
            "example" : "2023-09-10"
          },
          "removeEndDate" : {
            "type" : "boolean",
            "description" : "A flag to indicate that the allocation end date is to be removed",
            "example" : true
          },
          "reasonCode" : {
            "type" : "string",
            "description" : "The reason code for the deallocation",
            "enum" : [ "OTHER", "PERSONAL", "PROBLEM", "REMOVED", "SECURITY", "UNACCEPTABLE_ATTENDANCE", "UNACCEPTABLE_BEHAVIOUR", "WITHDRAWN" ],
            "example" : "RELEASED"
          },
          "payBandId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Where a prison uses pay bands to differentiate earnings, this is the pay band given to this prisoner"
          },
          "exclusions" : {
            "type" : "array",
            "description" : "The days and times that the prisoner is excluded from this activity's schedule. All values must match a slot where the activity is scheduled to run, and due to sync to nomis, there can not not be exclusions defined on the same day and time slot over multiple weeks.",
            "items" : {
              "$ref" : "#/components/schemas/Slot"
            }
          },
          "scheduleInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The scheduled instance id required when allocation starts today"
          }
        }
      },
      "ActivityUpdateRequest" : {
        "type" : "object",
        "description" : "The update request with the new activity details",
        "properties" : {
          "categoryId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The category id for this activity, one of the high-level categories"
          },
          "tierCode" : {
            "type" : "string",
            "description" : "The tier code for this activity, as defined by the Future Prison Regime team",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ],
            "example" : "TIER_1"
          },
          "organiserCode" : {
            "type" : "string",
            "description" : "The organiser code for this activity",
            "example" : "PRISON_STAFF"
          },
          "summary" : {
            "type" : "string",
            "description" : "A brief summary description of this activity for use in forms and lists",
            "example" : "Maths level 1",
            "maxLength" : 50,
            "minLength" : 0
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this activity will start. From this date, any schedules will be created as real, planned instances",
            "example" : "2022-12-23"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which this activity ends. From this date, there will be no more planned instances of the activity. If null, the activity has no end date and will be scheduled indefinitely.",
            "example" : "2022-12-23"
          },
          "runsOnBankHoliday" : {
            "type" : "boolean",
            "description" : "Whether the schedule runs on bank holidays",
            "example" : true
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The maximum number of prisoners allowed for a scheduled instance of this schedule",
            "example" : 10
          },
          "riskLevel" : {
            "type" : "string",
            "description" : "The most recent risk assessment level for this activity",
            "example" : "high",
            "maxLength" : 10,
            "minLength" : 0
          },
          "dpsLocationId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "The optional DPS location UUID for this schedule",
            "example" : "b7602cc8-e769-4cbb-8194-62d8e655992a"
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is in cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "attendanceRequired" : {
            "type" : "boolean",
            "description" : "Flag to indicate if attendance is required for this activity, e.g. gym induction might not be mandatory attendance",
            "example" : false
          },
          "minimumEducationLevel" : {
            "type" : "array",
            "description" : "The list of minimum education levels that apply to this activity",
            "items" : {
              "$ref" : "#/components/schemas/ActivityMinimumEducationLevelCreateRequest"
            }
          },
          "pay" : {
            "type" : "array",
            "description" : "The list of pay rates that can apply to this activity. Must be null or empty if the activity is unpaid",
            "items" : {
              "$ref" : "#/components/schemas/ActivityPayCreateRequest"
            }
          },
          "scheduleWeeks" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of weeks in the schedule",
            "example" : 1,
            "maximum" : 2,
            "minimum" : 1
          },
          "slots" : {
            "type" : "array",
            "description" : "The days and times an activity schedule can take place",
            "items" : {
              "$ref" : "#/components/schemas/Slot"
            }
          },
          "removeEndDate" : {
            "type" : "boolean",
            "default" : "false",
            "description" : "A flag to indicate that the end date is to be removed",
            "example" : true
          },
          "paid" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the activity is a paid activity or not. If true then pay rates are required, if false then no pay rates should be provided. Cannot be updated if already allocated.",
            "example" : true
          }
        }
      },
      "AttendanceReconciliationResponse" : {
        "type" : "object",
        "description" : "A list of paid attendance counts for each booking in the prison on the date",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code",
            "example" : "BXI"
          },
          "date" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date to check",
            "example" : "2023-10-25"
          },
          "bookings" : {
            "type" : "array",
            "description" : "A list of bookings and the number of paid attendances for each",
            "example" : "{ [ \"bookingId\": 12345, \"count\": 2 ] }",
            "items" : {
              "$ref" : "#/components/schemas/BookingCount"
            }
          }
        },
        "required" : [ "bookings", "date", "prisonCode" ]
      },
      "BookingCount" : {
        "type" : "object",
        "description" : "The count for a booking ID",
        "properties" : {
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The booking ID",
            "example" : 12345
          },
          "count" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The count for the booking ID",
            "example" : 2
          }
        },
        "required" : [ "bookingId", "count" ]
      },
      "AllocationReconciliationResponse" : {
        "type" : "object",
        "description" : "A list of allocation counts for each booking in the prison",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code",
            "example" : "BXI"
          },
          "bookings" : {
            "type" : "array",
            "description" : "A list of bookings and the number of active allocations for each",
            "example" : "{ [ \"bookingId\": 12345, \"count\": 2 ] }",
            "items" : {
              "$ref" : "#/components/schemas/BookingCount"
            }
          }
        },
        "required" : [ "bookings", "prisonCode" ]
      },
      "AttendanceSync" : {
        "type" : "object",
        "description" : "\n  Represents the key data required to synchronise an attendance with Nomis \n  ",
        "properties" : {
          "attendanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The attendance primary key",
            "example" : 123456
          },
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The scheduled instance primary key",
            "example" : 123456
          },
          "activityScheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The activity schedule primary key",
            "example" : 123456
          },
          "sessionDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The scheduled instance date",
            "example" : "2023-03-30"
          },
          "sessionStartTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The scheduled instance start time",
            "example" : "10:00"
          },
          "sessionEndTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The scheduled instance end time",
            "example" : "11:00"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The offender's unique identifier",
            "example" : "A1234BC"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The offender booking primary key",
            "example" : 123456
          },
          "attendanceReasonCode" : {
            "type" : "string",
            "description" : "The reason for attending or not"
          },
          "comment" : {
            "type" : "string",
            "description" : "Free text to allow comments to be put against the attendance",
            "example" : "Prisoner was too unwell to attend the activity."
          },
          "status" : {
            "type" : "string",
            "description" : "WAITING, COMPLETED.",
            "example" : "WAITING"
          },
          "payAmount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The amount in pence to pay the prisoner for the activity",
            "example" : 100
          },
          "bonusAmount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The bonus amount in pence to pay the prisoner for the activity",
            "example" : 50
          },
          "issuePayment" : {
            "type" : "boolean",
            "description" : "Should payment be issued for SICK, REST or OTHER",
            "example" : true
          }
        },
        "required" : [ "activityScheduleId", "attendanceId", "bookingId", "prisonerNumber", "scheduledInstanceId", "sessionDate", "sessionEndTime", "sessionStartTime", "status" ]
      },
      "HmppsSubjectAccessRequestContent" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "object",
            "description" : "The content of the subject access request response"
          }
        },
        "required" : [ "content" ]
      },
      "ActivityPayLite" : {
        "type" : "object",
        "description" : "Describes a pay rate applied to an activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity pay",
            "example" : 123456
          },
          "incentiveNomisCode" : {
            "type" : "string",
            "description" : "The NOMIS code for the incentive/earned privilege level",
            "example" : "BAS"
          },
          "incentiveLevel" : {
            "type" : "string",
            "description" : "The incentive/earned privilege level",
            "example" : "Basic"
          },
          "prisonPayBandId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The pay band id for this activity pay",
            "example" : 123456
          },
          "rate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The earning rate for one half day session for someone of this incentive level and pay band (in pence)",
            "example" : 150
          },
          "pieceRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Where payment is related to produced amounts of a product, this indicates the payment rate (in pence) per pieceRateItems produced",
            "example" : 150
          },
          "pieceRateItems" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Where payment is related to the number of items produced in a batch of a product, this is the batch size that attract 1 x pieceRate",
            "example" : 10
          }
        },
        "required" : [ "id", "incentiveLevel", "incentiveNomisCode", "prisonPayBandId" ]
      },
      "AddressDto" : {
        "type" : "object",
        "properties" : {
          "primary" : {
            "type" : "boolean",
            "description" : "Primary Address",
            "example" : false
          },
          "noFixedAddress" : {
            "type" : "boolean",
            "description" : "No Fixed Address",
            "example" : false
          },
          "addressId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Address Id",
            "example" : 543524
          },
          "addressType" : {
            "type" : "string",
            "description" : "Address Type. Note: Reference domain is ADDR_TYPE",
            "example" : "BUS"
          },
          "flat" : {
            "type" : "string",
            "description" : "Flat",
            "example" : "3B"
          },
          "premise" : {
            "type" : "string",
            "description" : "Premise",
            "example" : "Liverpool Prison"
          },
          "street" : {
            "type" : "string",
            "description" : "Street",
            "example" : "Slinn Street"
          },
          "locality" : {
            "type" : "string",
            "description" : "Locality",
            "example" : "Brincliffe"
          },
          "town" : {
            "type" : "string",
            "description" : "Town/City. Note: Reference domain is CITY",
            "example" : "Liverpool"
          },
          "postalCode" : {
            "type" : "string",
            "description" : "Postal Code",
            "example" : "LI1 5TH"
          },
          "county" : {
            "type" : "string",
            "description" : "County. Note: Reference domain is COUNTY",
            "example" : "HEREFORD"
          },
          "country" : {
            "type" : "string",
            "description" : "Country. Note: Reference domain is COUNTRY",
            "example" : "ENG"
          },
          "comment" : {
            "type" : "string",
            "description" : "Comment",
            "example" : "This is a comment text"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date Added",
            "example" : "Thu May 12 00:00:00 UTC 2005"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date ended",
            "example" : "Fri Feb 12 00:00:00 UTC 2021"
          },
          "phones" : {
            "type" : "array",
            "description" : "The phone number associated with the address",
            "example" : null,
            "items" : {
              "$ref" : "#/components/schemas/Telephone"
            }
          },
          "addressUsages" : {
            "type" : "array",
            "description" : "The address usages/types",
            "example" : null,
            "items" : {
              "$ref" : "#/components/schemas/AddressUsageDto"
            }
          }
        },
        "required" : [ "noFixedAddress", "primary" ]
      },
      "AddressUsageDto" : {
        "type" : "object",
        "properties" : {
          "addressId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Address ID of the associated address",
            "example" : 23422313
          },
          "addressUsage" : {
            "type" : "string",
            "description" : "The address usages",
            "example" : "HDC"
          },
          "addressUsageDescription" : {
            "type" : "string",
            "description" : "The address usages description",
            "example" : "HDC Address"
          },
          "activeFlag" : {
            "type" : "boolean",
            "description" : "Active Flag",
            "example" : true
          }
        }
      },
      "AllocationPayRate" : {
        "type" : "object",
        "description" : "Allocation details with activity pay rate if applicable",
        "properties" : {
          "payRate" : {
            "$ref" : "#/components/schemas/ActivityPayLite"
          },
          "allocation" : {
            "$ref" : "#/components/schemas/Allocation"
          }
        },
        "required" : [ "allocation" ]
      },
      "AllocationSuitability" : {
        "type" : "object",
        "description" : "Cross references prisoners details with activity requirements",
        "properties" : {
          "workplaceRiskAssessment" : {
            "$ref" : "#/components/schemas/WRASuitability",
            "description" : "The prisoner's workplace risk assessment suitability"
          },
          "incentiveLevel" : {
            "$ref" : "#/components/schemas/IncentiveLevelSuitability",
            "description" : "The prisoner's incentive level suitability"
          },
          "education" : {
            "$ref" : "#/components/schemas/EducationSuitability",
            "description" : "The prisoner's education suitability"
          },
          "releaseDate" : {
            "$ref" : "#/components/schemas/ReleaseDateSuitability",
            "description" : "The prisoner's release date suitability"
          },
          "allocations" : {
            "type" : "array",
            "description" : "The prisoner's currently active allocations with pay rates",
            "items" : {
              "$ref" : "#/components/schemas/AllocationPayRate"
            }
          },
          "previousDeallocations" : {
            "type" : "array",
            "description" : "The prisoner's previous allocations to this activity where they have been deallocated by a member of staff, with an optional case note",
            "items" : {
              "$ref" : "#/components/schemas/DeallocationCaseNote"
            }
          }
        },
        "required" : [ "allocations", "previousDeallocations" ]
      },
      "DeallocationCaseNote" : {
        "type" : "object",
        "description" : "Ended allocation details with optional deallocation case note text",
        "properties" : {
          "allocation" : {
            "$ref" : "#/components/schemas/Allocation"
          },
          "caseNoteText" : {
            "type" : "string"
          }
        },
        "required" : [ "allocation" ]
      },
      "Education" : {
        "type" : "object",
        "properties" : {
          "bookingId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "studyArea" : {
            "type" : "string"
          },
          "educationLevel" : {
            "type" : "string"
          },
          "numberOfYears" : {
            "type" : "integer",
            "format" : "int32"
          },
          "graduationYear" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "school" : {
            "type" : "string"
          },
          "isSpecialEducation" : {
            "type" : "boolean"
          },
          "schedule" : {
            "type" : "string"
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddressDto"
            }
          }
        },
        "required" : [ "addresses", "bookingId", "comment", "educationLevel", "endDate", "graduationYear", "isSpecialEducation", "numberOfYears", "schedule", "school", "startDate", "studyArea" ]
      },
      "EducationSuitability" : {
        "type" : "object",
        "description" : "Prisoner workplace education suitability",
        "properties" : {
          "suitable" : {
            "type" : "boolean",
            "description" : "The prisoner's suitability",
            "example" : "True"
          },
          "education" : {
            "type" : "array",
            "description" : "The prisoner's education levels",
            "items" : {
              "$ref" : "#/components/schemas/Education"
            }
          }
        },
        "required" : [ "education", "suitable" ]
      },
      "IncentiveLevelSuitability" : {
        "type" : "object",
        "description" : "Prisoner's incentive level suitability",
        "properties" : {
          "suitable" : {
            "type" : "boolean",
            "description" : "The prisoner's suitability",
            "example" : "True"
          },
          "incentiveLevel" : {
            "type" : "string",
            "description" : "The prisoner's current incentive level",
            "example" : "standard"
          }
        },
        "required" : [ "suitable" ]
      },
      "ReleaseDateSuitability" : {
        "type" : "object",
        "description" : "Prisoner release date suitability",
        "properties" : {
          "suitable" : {
            "type" : "boolean",
            "description" : "The prisoner's suitability",
            "example" : "True"
          },
          "earliestReleaseDate" : {
            "$ref" : "#/components/schemas/EarliestReleaseDate",
            "description" : "The prisoner's earliest release date"
          }
        },
        "required" : [ "earliestReleaseDate", "suitable" ]
      },
      "Telephone" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string",
            "description" : "Telephone number",
            "example" : "0114 2345678"
          },
          "type" : {
            "type" : "string",
            "description" : "Telephone type",
            "example" : "TEL"
          },
          "phoneId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Phone Id",
            "example" : 2234232
          },
          "ext" : {
            "type" : "string",
            "description" : "Telephone extension number",
            "example" : 123
          }
        },
        "required" : [ "number", "type" ]
      },
      "WRASuitability" : {
        "type" : "object",
        "description" : "Prisoner workplace risk assessment suitability",
        "properties" : {
          "suitable" : {
            "type" : "boolean",
            "description" : "The prisoner's suitability",
            "example" : "True"
          },
          "riskLevel" : {
            "type" : "string",
            "description" : "The prisoner's WRA level",
            "example" : "medium"
          }
        },
        "required" : [ "riskLevel", "suitable" ]
      },
      "NonAssociationDetails" : {
        "type" : "object",
        "description" : "Prisoner non-association details",
        "properties" : {
          "allocated" : {
            "type" : "boolean",
            "description" : "Is allocated to this activity?",
            "example" : true
          },
          "reasonCode" : {
            "type" : "string",
            "description" : "The reason code",
            "example" : "GANG_RELATED"
          },
          "reasonDescription" : {
            "type" : "string",
            "description" : "The reason description",
            "example" : "Gang related"
          },
          "roleCode" : {
            "type" : "string",
            "description" : "The role code",
            "example" : "VICTIM"
          },
          "roleDescription" : {
            "type" : "string",
            "description" : "The role description",
            "example" : "VICTIM"
          },
          "restrictionType" : {
            "type" : "string",
            "description" : "The restriction type",
            "example" : "WING"
          },
          "restrictionTypeDescription" : {
            "type" : "string",
            "description" : "The restriction type description",
            "example" : "Cell, landing and wing"
          },
          "otherPrisonerDetails" : {
            "$ref" : "#/components/schemas/OtherPrisonerDetails"
          },
          "whenUpdated" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date and time the non-association was updated. In Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example" : "2021-07-05T10:35:17"
          },
          "comments" : {
            "type" : "string",
            "description" : "Additional free text comments related to the non-association.",
            "example" : "Violent acts"
          }
        },
        "required" : [ "allocated", "otherPrisonerDetails", "reasonCode", "reasonDescription", "restrictionType", "restrictionTypeDescription", "roleCode", "roleDescription", "whenUpdated" ]
      },
      "OtherPrisonerDetails" : {
        "type" : "object",
        "description" : "Non-association prisoner details",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoners number",
            "example" : "G0135GA"
          },
          "firstName" : {
            "type" : "string",
            "description" : "The prisoners first name",
            "example" : "Joseph"
          },
          "lastName" : {
            "type" : "string",
            "description" : "The prisoners last name",
            "example" : "Bloggs"
          },
          "cellLocation" : {
            "type" : "string",
            "description" : "Description of living unit (e.g. cell) the offender is assigned to.",
            "example" : "PVI-1-2-4"
          }
        },
        "required" : [ "cellLocation", "firstName", "lastName", "prisonerNumber" ]
      },
      "ActivityCandidate" : {
        "type" : "object",
        "description" : "Describes a candidate for allocation to an activity",
        "properties" : {
          "name" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "The candidate's name",
            "example" : "Joe Bloggs"
          },
          "firstName" : {
            "type" : "string",
            "description" : "The candidate's first name",
            "example" : "Joe"
          },
          "lastName" : {
            "type" : "string",
            "description" : "The candidate's last name",
            "example" : "Bloggs"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The candidate's prisoner number",
            "example" : "GF10101"
          },
          "cellLocation" : {
            "type" : "string",
            "description" : "The candidate's cell location",
            "example" : "MDI-1-1-101"
          },
          "otherAllocations" : {
            "type" : "array",
            "description" : "Any activities the candidate is currently allocated to (excluding ended)",
            "items" : {
              "$ref" : "#/components/schemas/Allocation"
            }
          },
          "earliestReleaseDate" : {
            "$ref" : "#/components/schemas/EarliestReleaseDate",
            "description" : "The candidate's earliest release date"
          },
          "nonAssociations" : {
            "type" : "boolean",
            "description" : "Does the prisoner have non-associations? Null implies that non-associations could not be retrieved"
          }
        },
        "required" : [ "earliestReleaseDate", "firstName", "lastName", "name", "otherAllocations", "prisonerNumber" ]
      },
      "PageActivityCandidate" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityCandidate"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ScheduledAttendee" : {
        "type" : "object",
        "description" : "Describes a prisoner scheduled to attend to an activity",
        "properties" : {
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internal ID of the scheduled instance",
            "example" : 1
          },
          "allocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internal ID of the allocation",
            "example" : 1
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The candidate's prisoner number",
            "example" : "GF10101"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The booking id of the prisoner",
            "example" : 10001
          },
          "suspended" : {
            "type" : "boolean",
            "description" : "Set to true if this prisoner is suspended from the scheduled event",
            "example" : false
          },
          "autoSuspended" : {
            "type" : "boolean",
            "description" : "Set to true if this prisoner is auto-suspended from the scheduled event",
            "example" : false
          }
        },
        "required" : [ "allocationId", "autoSuspended", "prisonerNumber", "scheduledInstanceId", "suspended" ]
      },
      "AttendanceSummaryDetails" : {
        "type" : "object",
        "description" : "Attendance summary details",
        "properties" : {
          "allocations" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of prisoners allocated to this scheduled instance",
            "example" : 5
          },
          "attendees" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendees for this scheduled instance",
            "example" : 5
          },
          "notRecorded" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendance records not recorded",
            "example" : 2
          },
          "attended" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendance recorded marked as attended",
            "example" : 2
          },
          "absences" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendance recorded marked as absence",
            "example" : 1
          },
          "paid" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendance recorded marked as paid",
            "example" : 2
          }
        },
        "required" : [ "allocations" ]
      },
      "ScheduledInstanceAttendanceSummary" : {
        "type" : "object",
        "description" : "An overview of attendance details for scheduled instances",
        "properties" : {
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the scheduled instance",
            "example" : 10
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the activity",
            "example" : 1
          },
          "activityScheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the activity schedule",
            "example" : 2
          },
          "summary" : {
            "type" : "string",
            "description" : "Summary of the activity",
            "example" : "Maths 1"
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Category id of the activity",
            "example" : 2
          },
          "sessionDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the scheduled instance",
            "example" : "2023-03-30"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time of the scheduled instance",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the scheduled instance",
            "example" : "12:00"
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "time slot of scheduled instance",
            "enum" : [ "AM", "PM", "ED" ]
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is in cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/InternalLocation",
            "description" : "The NOMIS internal location for this schedule"
          },
          "cancelled" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the scheduled instance has been cancelled",
            "example" : false
          },
          "attendanceSummary" : {
            "$ref" : "#/components/schemas/AttendanceSummaryDetails",
            "description" : "Attendance summary details for a scheduled instance"
          },
          "attendanceRequired" : {
            "type" : "boolean",
            "description" : "Flag to indicate if attendance is required",
            "example" : false
          }
        },
        "required" : [ "activityId", "activityScheduleId", "attendanceRequired", "attendanceSummary", "cancelled", "categoryId", "endTime", "inCell", "offWing", "onWing", "scheduledInstanceId", "sessionDate", "startTime", "summary", "timeSlot" ]
      },
      "RolloutPrisonPlan" : {
        "type" : "object",
        "description" : "Describes the rollout plan of a prison which may or may not be rolled out",
        "properties" : {
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code of the requested prison",
            "example" : "PVI"
          },
          "activitiesRolledOut" : {
            "type" : "boolean",
            "description" : "Flag to indicate if activities are enabled",
            "example" : true
          },
          "appointmentsRolledOut" : {
            "type" : "boolean",
            "description" : "Flag to indicate if appointments are enabled",
            "example" : true
          },
          "maxDaysToExpiry" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "max days to expire events based on prisoner movement, default is 21"
          },
          "prisonLive" : {
            "type" : "boolean",
            "description" : "Flag to indicate if this prison is presently rolled out and live to the prison",
            "example" : true
          }
        },
        "required" : [ "activitiesRolledOut", "appointmentsRolledOut", "maxDaysToExpiry", "prisonCode", "prisonLive" ]
      },
      "DlqMessage" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "messageId" : {
            "type" : "string"
          }
        },
        "required" : [ "body", "messageId" ]
      },
      "GetDlqResult" : {
        "type" : "object",
        "properties" : {
          "messagesFoundCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "messagesReturnedCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DlqMessage"
            }
          }
        },
        "required" : [ "messages", "messagesFoundCount", "messagesReturnedCount" ]
      },
      "ActivitySummary" : {
        "type" : "object",
        "description" : "Summarises an activity",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this activity",
            "example" : 123456
          },
          "activityName" : {
            "type" : "string",
            "description" : "The name of the activity",
            "example" : "Maths level 1"
          },
          "category" : {
            "$ref" : "#/components/schemas/ActivityCategory",
            "description" : "The category for this activity, one of the high-level categories"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The capacity of the activity"
          },
          "allocated" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of prisoners currently allocated to the activity"
          },
          "waitlisted" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of prisoners currently currently on the waitlist for the activity"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time when this activity was created",
            "example" : "2022-09-01T09:01:02"
          },
          "activityState" : {
            "type" : "string",
            "description" : "Whether the activity is live or archived",
            "enum" : [ "ARCHIVED", "LIVE" ],
            "example" : "LIVE"
          }
        },
        "required" : [ "activityState", "allocated", "capacity", "category", "createdTime", "id", "waitlisted" ]
      },
      "AppointmentCountSummary" : {
        "type" : "object",
        "description" : "\n  A count summary of appointments based on a category\n  ",
        "properties" : {
          "appointmentCategorySummary" : {
            "$ref" : "#/components/schemas/AppointmentCategorySummary",
            "description" : "The appointment category"
          },
          "count" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of appointments",
            "example" : 25
          }
        },
        "required" : [ "appointmentCategorySummary", "count" ]
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "locationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Location identifier.",
            "example" : null
          },
          "locationType" : {
            "type" : "string",
            "description" : "Location type.",
            "example" : null
          },
          "description" : {
            "type" : "string",
            "description" : "Location description.",
            "example" : null
          },
          "agencyId" : {
            "type" : "string",
            "description" : "Identifier of Agency this location is associated with.",
            "example" : null
          },
          "locationUsage" : {
            "type" : "string",
            "description" : "What events this room can be used for.",
            "example" : null
          },
          "parentLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Identifier of this location's parent location.",
            "example" : null
          },
          "currentOccupancy" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Current occupancy of location.",
            "example" : null
          },
          "locationPrefix" : {
            "type" : "string",
            "description" : "Location prefix. Defines search prefix that will constrain search to this location and its subordinate locations.",
            "example" : null
          },
          "operationalCapacity" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Operational capacity of the location.",
            "example" : null
          },
          "userDescription" : {
            "type" : "string",
            "description" : "User-friendly location description.",
            "example" : null
          },
          "internalLocationCode" : {
            "type" : "string",
            "example" : null
          }
        },
        "required" : [ "agencyId", "description", "locationId", "locationType" ]
      },
      "LocationPrefixDto" : {
        "type" : "object",
        "description" : "Location prefix response",
        "properties" : {
          "locationPrefix" : {
            "type" : "string",
            "description" : "Location prefix translated from group name",
            "example" : "MDI-1-"
          }
        },
        "required" : [ "locationPrefix" ]
      },
      "LocationGroup" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the group",
            "example" : null
          },
          "key" : {
            "type" : "string",
            "description" : "A key for the group",
            "example" : null
          },
          "children" : {
            "type" : "array",
            "description" : "The child groups of this group",
            "example" : null,
            "items" : {
              "$ref" : "#/components/schemas/LocationGroup"
            }
          }
        },
        "required" : [ "children", "key", "name" ]
      },
      "InternalLocationEventsSummary" : {
        "type" : "object",
        "description" : "\n  The summary of an internal location that has events scheduled to take place there. Supports movement lists.\n  Will contain additional summary information about the events taking place at the location as well as the total\n  number of prisoners due to arrive at the location.\n  The system of record for internal locations is NOMIS and they are managed in that application.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "\n    The id of the internal location. Mapped from AGENCY_INTERNAL_LOCATIONS.INTERNAL_LOCATION_ID in NOMIS.\n    ",
            "example" : 27723
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "\n    The prison code/agency id of the internal location. Mapped from AGENCY_LOCATIONS.AGY_LOC_ID in NOMIS.\n    ",
            "example" : "SKI"
          },
          "code" : {
            "type" : "string",
            "description" : "The code of the internal location. Mapped from AGENCY_INTERNAL_LOCATIONS.DESCRIPTION",
            "example" : "EDUC-ED1-ED1"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the internal location. Mapped from AGENCY_INTERNAL_LOCATIONS.USER_DESC",
            "example" : "Education 1"
          }
        },
        "required" : [ "code", "description", "id", "prisonCode" ]
      },
      "EventReview" : {
        "type" : "object",
        "description" : "Describes one event that has occurred to indicate a change of circumstance",
        "properties" : {
          "eventReviewId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally-generated ID for this event",
            "example" : 123456
          },
          "serviceIdentifier" : {
            "type" : "string",
            "description" : "Describes the service which generated this event",
            "example" : "prisoner-offender-search"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The internal name for the event",
            "example" : "prisoner-offender-events.prisoner.cell-move"
          },
          "eventTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time that this event occurred",
            "example" : "2022-10-01T23:11:01"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this event took place",
            "example" : "MDI"
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number which this event relates to",
            "example" : "G1234FF"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The booking ID related to this prisoner",
            "example" : 123456
          },
          "eventData" : {
            "type" : "string",
            "description" : "The description of the event that occurred",
            "example" : "The prisoner was moved to a different cell."
          },
          "acknowledgedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time that this event was acknowledged.",
            "example" : "2022-10-01T23:11:01"
          },
          "acknowledgedBy" : {
            "type" : "string",
            "description" : "The username of the person who acknowledged the event.",
            "example" : "U4588F"
          },
          "eventDescription" : {
            "type" : "string",
            "description" : "A simple description of the event acton",
            "enum" : [ "ACTIVITY_SUSPENDED", "ACTIVITY_ENDED", "RELEASED", "PERMANENT_RELEASE", "TEMPORARY_RELEASE" ],
            "example" : "ACTIVITY_SUSPENDED"
          }
        },
        "required" : [ "eventReviewId" ]
      },
      "EventReviewSearchResults" : {
        "type" : "object",
        "description" : "The result of an event review search",
        "properties" : {
          "content" : {
            "type" : "array",
            "description" : "The matching records",
            "items" : {
              "$ref" : "#/components/schemas/EventReview"
            }
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The current page number",
            "example" : 1
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The total number of elements",
            "example" : 20
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The total number of pages",
            "example" : 5
          }
        },
        "required" : [ "content", "pageNumber", "totalElements", "totalPages" ]
      },
      "AllAttendance" : {
        "type" : "object",
        "description" : "\n  Represents the key data required to report on attendance \n  ",
        "properties" : {
          "attendanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The attendance primary key",
            "example" : 123456
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The prison code where this activity takes place",
            "example" : "PVI"
          },
          "sessionDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the session for which attendance may have been marked or a planned absence recorded",
            "example" : "2023-03-30"
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "AM, PM, ED.",
            "example" : "AM"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The start time",
            "example" : "9:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time",
            "example" : "11:30"
          },
          "status" : {
            "type" : "string",
            "description" : "WAITING, COMPLETED.",
            "example" : "WAITING"
          },
          "attendanceReasonCode" : {
            "type" : "string",
            "description" : "The reason for attending or not"
          },
          "issuePayment" : {
            "type" : "boolean",
            "description" : "Should payment be issued for SICK, REST or OTHER",
            "example" : true
          },
          "prisonerNumber" : {
            "type" : "string",
            "description" : "The prisoner number for this attendance record",
            "example" : "A1234AA"
          },
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the particular session instance for this attendance record",
            "example" : 1
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the activity for this attendance record",
            "example" : 1
          },
          "activitySummary" : {
            "type" : "string",
            "description" : "The title of the activity for this attendance record",
            "example" : "Math Level 1"
          },
          "categoryName" : {
            "type" : "string",
            "description" : "The name of the activity category for this attendance record",
            "example" : "Education"
          },
          "recordedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time the attendance was updated",
            "example" : "2023-09-10T09:30:00"
          },
          "attendanceRequired" : {
            "type" : "boolean",
            "description" : "Is attendance required?",
            "example" : true
          },
          "eventTier" : {
            "type" : "string",
            "description" : "event tier",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ]
          },
          "incentiveLevelWarningIssued" : {
            "type" : "boolean",
            "description" : "Was an incentive level warning issued for REFUSED",
            "example" : true
          }
        },
        "required" : [ "activityId", "activitySummary", "attendanceId", "attendanceRequired", "categoryName", "endTime", "prisonCode", "prisonerNumber", "scheduledInstanceId", "sessionDate", "startTime", "status", "timeSlot" ]
      },
      "SuspendedPrisonerActivityAttendance" : {
        "type" : "object",
        "description" : "suspended prisoner activity attendance",
        "properties" : {
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "the activity start time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "the activity end time"
          },
          "internalLocation" : {
            "type" : "string",
            "description" : "internal location description"
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is in cell",
            "example" : false
          },
          "onWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is on wing",
            "example" : false
          },
          "offWing" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the activity is off wing and not in a listed location",
            "example" : false
          },
          "timeSlot" : {
            "type" : "string",
            "description" : "time slot"
          },
          "categoryName" : {
            "type" : "string",
            "description" : "category name"
          },
          "attendanceReasonCode" : {
            "type" : "string",
            "description" : "attendance reason code"
          },
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The id of the particular session instance for this attendance record",
            "example" : 1
          },
          "activitySummary" : {
            "type" : "string",
            "description" : "The title of the activity for this attendance record",
            "example" : "Math Level 1"
          }
        },
        "required" : [ "activitySummary", "attendanceReasonCode", "categoryName", "endTime", "inCell", "offWing", "onWing", "scheduledInstanceId", "startTime", "timeSlot" ]
      },
      "SuspendedPrisonerAttendance" : {
        "type" : "object",
        "description" : "suspended prisoner activity attendance",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "prisoner number"
          },
          "attendance" : {
            "type" : "array",
            "description" : "attendance",
            "items" : {
              "$ref" : "#/components/schemas/SuspendedPrisonerActivityAttendance"
            }
          }
        },
        "required" : [ "attendance", "prisonerNumber" ]
      },
      "AppointmentAttendeeByStatus" : {
        "type" : "object",
        "description" : "attendee and appointment details for a given status, ie not records",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string"
          },
          "bookingId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "appointmentId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "appointmentAttendeeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "appointmentName" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time"
          }
        },
        "required" : [ "appointmentAttendeeId", "appointmentId", "appointmentName", "bookingId", "endTime", "prisonerNumber", "startDate", "startTime" ]
      },
      "AppointmentAttendanceSummary" : {
        "type" : "object",
        "description" : "\n  Contains the summary information of a limited set the appointment properties along with counts of appointment attendance\n  records. Supports management level views of appointment attendance and statistics.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment",
            "example" : 123456
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "appointmentName" : {
            "type" : "string",
            "description" : "\n    The appointment's name combining the optional custom name with the category description. If custom name has been\n    specified, the name format will be \"Custom name (Category description)\" \n    "
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/AppointmentLocationSummary",
            "description" : "The summary of the internal location this appointment will take place. Will be null if in cell = true"
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "Flag to indicate if the location of the appointment is in cell",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date this appointment is taking place on"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of this appointment",
            "example" : "13:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of this appointment",
            "example" : "13:30"
          },
          "isCancelled" : {
            "type" : "boolean",
            "description" : "Indicates that this appointment has been cancelled",
            "example" : false
          },
          "attendeeCount" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendees for this appointment",
            "example" : 6
          },
          "attendedCount" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendees recorded as having attended this appointment",
            "example" : 2
          },
          "nonAttendedCount" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendees recorded as having not attended this appointment",
            "example" : 1
          },
          "notRecordedCount" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The number of attendees whose attendance has not yet been recorded",
            "example" : 3
          },
          "attendees" : {
            "type" : "array",
            "description" : "\n    The prisoner or prisoners attending this appointment. Appointments of type INDIVIDUAL will have one\n    prisoner attending each appointment. Appointments of type GROUP can have more than one prisoner\n    attending each appointment\n    ",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentAttendeeSearchResult"
            }
          },
          "eventTierType" : {
            "type" : "string",
            "description" : "optional event tier",
            "enum" : [ "TIER_1", "TIER_2", "FOUNDATION" ]
          }
        },
        "required" : [ "appointmentName", "attendedCount", "attendeeCount", "attendees", "id", "inCell", "isCancelled", "nonAttendedCount", "notRecordedCount", "prisonCode", "startDate", "startTime" ]
      },
      "AppointmentSetDetails" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment set\" or \"set of back-to-back appointments\".\n  Contains the full details of the initial property values common to all appointments in the set for display purposes.\n  The properties at this level cannot be changed via the API.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment set",
            "example" : 12345
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "appointmentName" : {
            "type" : "string",
            "description" : "\n    The appointment set's name combining the optional custom name with the category description. If custom name has been\n    specified, the name format will be \"Custom name (Category description)\" \n    "
          },
          "category" : {
            "$ref" : "#/components/schemas/AppointmentCategorySummary",
            "description" : "\n    The summary of the category used to create the set of appointment series\n    "
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment set. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/AppointmentLocationSummary",
            "description" : "\n    The summary of the internal location of the appointment series in the set. Will be null if in cell = true\n    "
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment series in the set is in cell rather than an internal prison location.\n    Internal location id should be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the first appointment in each appointment series in the set"
          },
          "appointments" : {
            "type" : "array",
            "description" : "The details of all the appointments in the the set",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentDetails"
            }
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment set was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that created this appointment set\n    "
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time one or more appointments in this set was last changed.\n    Will be null if no appointments in the set have been altered since they were created\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that last edited one or more appointments in this set.\n    Will be null if no appointments in the set have been altered since they were created\n    "
          }
        },
        "required" : [ "appointmentName", "appointments", "category", "createdBy", "createdTime", "id", "inCell", "prisonCode", "startDate" ]
      },
      "AppointmentSeriesDetails" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment series\" and only shown for repeat appointments.\n  The top level of the standard appointment hierarchy containing full details of the initial property values common to\n  all appointments in the series for display purposes.\n  Contains the summary collection of all the child appointments in the series plus the schedule definition if the\n  appointment series repeats.\n  The properties at this level cannot be changed via the API however the child appointment property values can be changed\n  independently to support rescheduling, cancelling and altered attendee lists per appointment.\n  N.B. there is no collection of attending prisoners at this top level as all attendees are per appointment. This is to\n  support attendee modification for each scheduled appointment and to prevent altering the past by editing attendees\n  in an appointment series where some appointments have past.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment series",
            "example" : 12345
          },
          "appointmentType" : {
            "type" : "string",
            "description" : "The appointment type (INDIVIDUAL or GROUP)",
            "enum" : [ "INDIVIDUAL", "GROUP" ],
            "example" : "INDIVIDUAL"
          },
          "prisonCode" : {
            "type" : "string",
            "description" : "The NOMIS AGENCY_LOCATIONS.AGY_LOC_ID value for mapping to NOMIS",
            "example" : "SKI"
          },
          "appointmentName" : {
            "type" : "string",
            "description" : "\n    The appointment series' name combining the optional custom name with the category description. If custom name has been\n    specified, the name format will be \"Custom name (Category description)\" \n    "
          },
          "category" : {
            "$ref" : "#/components/schemas/AppointmentCategorySummary",
            "description" : "\n    The summary of the appointment series' category\n    "
          },
          "tier" : {
            "$ref" : "#/components/schemas/EventTier",
            "description" : "The tier for this appointment, as defined by the Future Prison Regime team"
          },
          "organiser" : {
            "$ref" : "#/components/schemas/EventOrganiser",
            "description" : "The organiser of this appointment"
          },
          "customName" : {
            "type" : "string",
            "description" : "\n    Free text name further describing the appointment series. Used as part of the appointment name with the\n    format \"Custom name (Category description) if specified.\n    ",
            "example" : "Meeting with the governor"
          },
          "internalLocation" : {
            "$ref" : "#/components/schemas/AppointmentLocationSummary",
            "description" : "\n    The summary of the internal location this appointment series will take place. Will be null if in cell = true\n    "
          },
          "inCell" : {
            "type" : "boolean",
            "description" : "\n    Flag to indicate if the location of the appointment series is in cell rather than an internal prison location.\n    Internal location id should be null if in cell = true\n    ",
            "example" : false
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of the first appointment in the series"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of the appointment or appointments in the series",
            "example" : "09:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of the appointment or appointments in the series",
            "example" : "10:30"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/AppointmentSeriesSchedule",
            "description" : "\n    Describes the schedule of the appointment series i.e. how the appointments in the series repeat. The frequency of\n    those appointments and how many appointments there are in total in the series.\n    If null, the appointment series has only one appointment. Note that the presence of this property does not mean\n    there is more than one appointment as a number of appointments value of one is valid.\n    "
          },
          "extraInformation" : {
            "type" : "string",
            "description" : "\n    Extra information for the prisoner or prisoners attending the appointment or appointments in the series.\n    Shown only on the appointments details page and on printed movement slips. Wing staff will be notified there is\n    extra information via the unlock list.\n    ",
            "example" : "This appointment will help adjusting to life outside of prison"
          },
          "createdTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time this appointment series was created. Will not change"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that created this appointment series\n    "
          },
          "updatedTime" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "\n    The date and time one or more appointments in this series was last changed.\n    Will be null if no appointments in the series have been altered since they were created\n    "
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "\n    The username of the user that last edited one or more appointments in this series.\n    Will be null if no appointments in the series have been altered since they were created\n    "
          },
          "appointments" : {
            "type" : "array",
            "description" : "\n    Summary of the individual appointment or appointments in this series both expired and scheduled.\n    Non recurring appointment series will have a single appointment containing the same property values as the parent\n    appointment series. The same start date, time and end time. Recurring appointment series will have one or more\n    appointments. The first in the series will also contain the same property values as the parent appointment series\n    and subsequent appointments will have start dates following on from the original start date incremented as specified\n    by the series' schedule. Each appointment can be edited independently of the parent. All properties of an\n    appointment are separate to those of the parent appointment series.\n    The full series of appointments specified by the schedule will have been created in advance.\n    ",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentSummary"
            }
          }
        },
        "required" : [ "appointmentName", "appointmentType", "appointments", "category", "createdBy", "createdTime", "id", "inCell", "prisonCode", "startDate", "startTime" ]
      },
      "AppointmentSummary" : {
        "type" : "object",
        "description" : "\n  Described on the UI as an \"Appointment\" and represents the scheduled event on a specific date and time.\n  Contains the summary information of a limited set the appointment properties. N.B. does not contain \n  information on the prisoners attending this appointment to improve API performance.\n  All updates and cancellations happen at this appointment level with the parent appointment series or set being immutable.\n  ",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The internally generated identifier for this appointment",
            "example" : 123456
          },
          "sequenceNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The sequence number of this appointment within the appointment series",
            "example" : 3
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date this appointment is taking place on"
          },
          "startTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The starting time of this appointment",
            "example" : "13:00"
          },
          "endTime" : {
            "type" : "string",
            "format" : "partial-time",
            "description" : "The end time of this appointment",
            "example" : "13:30"
          },
          "isEdited" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been independently changed from the original state it was in when\n    it was created as part of an appointment series\n    ",
            "example" : false
          },
          "isCancelled" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been cancelled\n    ",
            "example" : false
          },
          "isDeleted" : {
            "type" : "boolean",
            "description" : "\n    Indicates that this appointment has been deleted and removed from scheduled events.\n    ",
            "example" : false
          }
        },
        "required" : [ "id", "isCancelled", "isDeleted", "isEdited", "sequenceNumber", "startDate", "startTime" ]
      }
    },
    "securitySchemes" : {
      "bearer-jwt" : {
        "type" : "http",
        "name" : "Authorization",
        "in" : "header",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}
