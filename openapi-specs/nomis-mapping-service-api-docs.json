{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "NOMIS Mapping Service",
    "description" : "<div>\n<h2>Manages mapping information between DPS services and NOMIS</h2>\n<p>APIs tagged by <b>NOMIS to DPS Mapping lookup</b> are designed to be used by other DPS services that need to transition data held in that service that was originally sourced from NOMIS by now needs to sourced from other DPS services.</p>\n<p>Each domain requires their own role to access these APIs for instance <b>NOMIS_DPS_MAPPING__LOCATIONS__R</b> for location mapping lookups</p>\n<p>All other APIs should be considered private to the NOMIS Migration and Synchronisation suite of services.</p>\n<div>",
    "contact" : {
      "name" : "HMPPS Digital Studio",
      "email" : "feedback@digital.justice.gov.uk"
    },
    "version" : "2025-04-17.6256.1b9e7fe"
  },
  "servers" : [ {
    "url" : "https://nomis-sync-prisoner-mapping.hmpps.service.justice.gov.uk",
    "description" : "Prod"
  }, {
    "url" : "https://nomis-sync-prisoner-mapping-preprod.hmpps.service.justice.gov.uk",
    "description" : "PreProd"
  }, {
    "url" : "https://nomis-sync-prisoner-mapping-dev.hmpps.service.justice.gov.uk",
    "description" : "Development"
  }, {
    "url" : "http://localhost:8080",
    "description" : "Local"
  } ],
  "security" : [ {
    "bearer-jwt" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "NOMIS / DPS Mapping lookup",
    "description" : "APIs designed to be used by DPS services that need to map NOMIS ids stored in a DPS service to a sibling DPS domain service"
  } ],
  "paths" : {
    "/mapping/punishments" : {
      "put" : {
        "tags" : [ "punishments-mapping-resource" ],
        "summary" : "Creates a new set of adjudication punishment mapping and deletes ones no longer required",
        "description" : "Creates a record of a DPS punishment id and NOMIS bookingId and sanction sequence. The ones that require deleting are removed NOMIS id. Requires NOMIS_ADJUDICATIONS",
        "operationId" : "updatePunishmentBatchMappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdjudicationPunishmentBatchUpdateMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entries created",
            "content" : { }
          },
          "409" : {
            "description" : "One of the punishment mappings already exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "punishments-mapping-resource" ],
        "summary" : "Creates a new set of adjudication punishment mapping",
        "description" : "Creates a record of a DPS punishment id and NOMIS bookingId and sanction sequence. Requires NOMIS_ADJUDICATIONS",
        "operationId" : "createPunishmentBatchMappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdjudicationPunishmentBatchMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entries created",
            "content" : { }
          },
          "409" : {
            "description" : "One of the punishment mappings already exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations/update-list/from/{oldOffenderNo}/to/{newOffenderNo}" : {
      "put" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "Updates mappings in list",
        "description" : "Updates mappings for a given list of non-association pairs. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "updateMappingsInList",
        "parameters" : [ {
          "name" : "oldOffenderNo",
          "in" : "path",
          "description" : "Old prisoner number to replace",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Old prisoner number to replace",
            "example" : "A3456KM"
          },
          "example" : "A3456KM"
        }, {
          "name" : "newOffenderNo",
          "in" : "path",
          "description" : "New prisoner number to use",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "New prisoner number to use",
            "example" : "A3457LZ"
          },
          "example" : "A3457LZ"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "List of other prisoner numbers whose NA mappings with oldOffenderNo should have oldOffenderNo updated to newOffenderNo.",
                "items" : {
                  "type" : "string",
                  "description" : "List of other prisoner numbers whose NA mappings with oldOffenderNo should have oldOffenderNo updated to newOffenderNo."
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mappings updated",
            "content" : { }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations/merge/from/{oldOffenderNo}/to/{newOffenderNo}" : {
      "put" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "Replaces all occurrences of the 'from' id with the 'to' id in the mapping table",
        "description" : "Used for update after a prisoner number merge. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "updateMappingsByNomisId",
        "parameters" : [ {
          "name" : "oldOffenderNo",
          "in" : "path",
          "description" : "Old prisoner number to replace",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Old prisoner number to replace",
            "example" : "A3456KM"
          },
          "example" : "A3456KM"
        }, {
          "name" : "newOffenderNo",
          "in" : "path",
          "description" : "New prisoner number to use",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "New prisoner number to use",
            "example" : "A3457LZ"
          },
          "example" : "A3457LZ"
        } ],
        "responses" : {
          "200" : {
            "description" : "Replacement made, or not present in table",
            "content" : { }
          },
          "400" : {
            "description" : "Replacement would result in an NA with both prisoner numbers the same - requires manual intervention",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-charges" : {
      "put" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Creates a new set of court charge mapping and deletes ones no longer required",
        "description" : "Creates a record of a DPS court charge id and NOMIS court charge id. The ones that require deleting are removed by NOMIS id. Requires NOMIS_COURT_SENTENCING",
        "operationId" : "courtChargeBatchUpdateMappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CourtChargeBatchUpdateMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entries created",
            "content" : { }
          },
          "409" : {
            "description" : "One of the court charge mappings already exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Creates a new single charge mapping",
        "description" : "Creates a mapping between nomis offender charge ID and DPS charge ID. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "createCourtChargeMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CourtChargeMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtChargeMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/profile-details/migration" : {
      "put" : {
        "tags" : [ "contact-person-profile-details-migration-resource" ],
        "summary" : "Creates or updates a contact person profile details migration mapping for a migration",
        "description" : "Creates updates a contact person profile details migration mapping for a migration between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createMappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPersonProfileDetailsMigrationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mappings created or updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactPersonProfileDetailsMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/merge/from/{oldOffenderNo}/to/{newOffenderNo}" : {
      "put" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Replaces all occurrences of the 'from' id with the 'to' id in the mapping table",
        "description" : "Used for update after a prisoner number merge. Requires role ROLE_NOMIS_CASENOTES",
        "operationId" : "updateMappingsByNomisId_1",
        "parameters" : [ {
          "name" : "oldOffenderNo",
          "in" : "path",
          "description" : "Old prisoner number to replace",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Old prisoner number to replace",
            "example" : "A3456KM"
          },
          "example" : "A3456KM"
        }, {
          "name" : "newOffenderNo",
          "in" : "path",
          "description" : "New prisoner number to use",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "New prisoner number to use",
            "example" : "A3457LZ"
          },
          "example" : "A3457LZ"
        } ],
        "responses" : {
          "200" : {
            "description" : "Replacement made, or not present in table",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/merge/booking-id/{bookingId}/to/{newOffenderNo}" : {
      "put" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "For all case notes with the given booking id in the mapping table, sets the offender no to the given 'to' id",
        "description" : "Used for update after a booking has been moved from one offender to another. Returns the affected case notes. Requires role ROLE_NOMIS_CASENOTES",
        "operationId" : "updateMappingsByBookingId",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "The booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The booking id",
            "example" : 1234567
          },
          "example" : 1234567
        }, {
          "name" : "newOffenderNo",
          "in" : "path",
          "description" : "New prisoner number to use",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "New prisoner number to use",
            "example" : "A3457LZ"
          },
          "example" : "A3457LZ"
        } ],
        "responses" : {
          "200" : {
            "description" : "Replacement made, or not present in table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseNoteMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/{offenderNo}/merge" : {
      "put" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Replaces a set of new alert mappings for a prisoner and removes mappings for the removed prisoner record",
        "description" : "Replaces the mappings between all the nomis alert ids and dps alert id. Any mappings on the removed prisoner record are deleted. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "replaceMappingsForPrisonerAfterMerge",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "Retained NOMIS offender no",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Retained NOMIS offender no",
            "example" : "A1234KT"
          },
          "example" : "A1234KT"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MergedPrisonerAlertMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mappings replaced",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/{offenderNo}/all" : {
      "get" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Gets all alert mappings for a prisoner",
        "description" : "Gets all the mapping between nomis alert ids and dps alert id related to specific prisoner created either via migration or synchronisation. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "getMappingsForPrisoner",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "NOMIS offender no",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS offender no",
            "example" : "A1234KT"
          },
          "example" : "A1234KT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mappings for prisoner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllPrisonerAlertMappingsDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Replaces a set of new alert mapping for a prisoner",
        "description" : "Replaces the mappings between all the nomis alert ids and dps alert id. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "replaceMappingsForPrisoner",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "NOMIS offender no",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS offender no",
            "example" : "A1234KT"
          },
          "example" : "A1234KT"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrisonerAlertMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mappings replaced",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Creates a set of new alert mapping for a prisoner",
        "description" : "Creates a mapping between all the nomis alert ids and dps alert id. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "createMappingsForPrisoner",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "NOMIS offender no",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS offender no",
            "example" : "A1234KT"
          },
          "example" : "A1234KT"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrisonerAlertMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/nomis-booking-id/{bookingId}/nomis-alert-sequence/{alertSequence}" : {
      "get" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role NOMIS_ALERTS",
        "operationId" : "getMappingByNomisId",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "alertSequence",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 2
          },
          "example" : 2
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "updates mapping",
        "description" : "Updates a mapping by NOMIS id setting a new NOMIS booking Id. Requires role NOMIS_ALERTS",
        "operationId" : "updateMappingBookingIdByNomisId",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "alertSequence",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 2
          },
          "example" : 2
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NomisMappingIdUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities" : {
      "get" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "Get all activities mappings",
        "description" : "Get all the mapping table rows. Should only be used in dev (in pre/prod this could return excessive data). Requires role NOMIS_ACTIVITIES",
        "operationId" : "getAllMappings",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "Updates an activity mapping",
        "description" : "Updates a mapping between Nomis and Activities, including both the COURSE_ACTIVITY and COURSE_SCHEDULE. Requires NOMIS_ACTIVITIES",
        "operationId" : "updateMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mapping entry updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMappingDto"
                }
              }
            }
          },
          "400" : {
            "description" : "The request is invalid, see response for details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "An activity schedule mapping to update could not be found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "Creates a new activity mapping",
        "description" : "Creates a mapping between nomis id and Activity service id. Requires NOMIS_ACTIVITIES",
        "operationId" : "createMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or activity schedule ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonId}/room-mappings" : {
      "get" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "get room mappings for a prison",
        "description" : "Retrieves  room mappings associated with a NOMIS prison id. Requires role NOMIS_VISITS",
        "operationId" : "getRoomMappings",
        "parameters" : [ {
          "name" : "prisonId",
          "in" : "path",
          "description" : "NOMIS prison Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Id",
            "example" : "MDI"
          },
          "example" : "MDI"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping list Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RoomMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "Creates a new room mapping",
        "description" : "Creates a new room mapping. Requires role NOMIS_VISITS",
        "operationId" : "createRoomMapping",
        "parameters" : [ {
          "name" : "prisonId",
          "in" : "path",
          "description" : "NOMIS prison Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Id",
            "example" : "MDI"
          },
          "example" : "MDI"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRoomMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Visit mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "mapping for this nomis room and prison already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visits" : {
      "post" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "Creates a new visit",
        "description" : "Creates a new visit and decrements the visit balance. Requires role NOMIS_VISITS",
        "operationId" : "createMapping_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VisitMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Visit mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or VSIP ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate visit has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "Deletes visit id mappings",
        "description" : "Deletes all rows from the the visit id table. Requires role NOMIS_VISITS",
        "operationId" : "deleteVisitIdMappings",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "Visit id mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visit-balance" : {
      "post" : {
        "tags" : [ "visit-balance-mapping-resource" ],
        "summary" : "Creates a prisoner visit balance mapping",
        "description" : "Creates a prisoner visit balance mapping. Requires ROLE_NOMIS_VISIT_BALANCE",
        "operationId" : "createMapping_2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VisitBalanceMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "visit-balance-mapping-resource" ],
        "summary" : "Deletes all prisoner visit order balance mappings",
        "description" : "Deletes all prisoner visit order balance mappings regardless of source.\n      This is expected to only ever been used in a non-production environment. Requires role ROLE_NOMIS_VISIT_BALANCE",
        "operationId" : "deleteAllMappings",
        "responses" : {
          "204" : {
            "description" : "All mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/sentencing/adjustments" : {
      "get" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "get all paged mappings",
        "description" : "Retrieve all mappings . Results are paged.",
        "operationId" : "getAllSentenceAdjustmentMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentencingAdjustmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "Creates a new sentence adjustment mapping",
        "description" : "Creates a mapping between nomis sentence adjustment ids and Sentencing service id. Requires ROLE_NOMIS_SENTENCING",
        "operationId" : "createMapping_3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SentencingAdjustmentMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Sentence adjustment mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or Sentencing ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate sentencing adjustment mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "Deletes sentence adjustment mappings",
        "description" : "Deletes all rows from the the sentence adjustment mapping table. Requires role NOMIS_SENTENCING",
        "operationId" : "deleteSentenceAdjustmentMappings",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "sentence adjustment mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations" : {
      "post" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "Creates a new Non-association mapping",
        "description" : "Creates a mapping between a Nomis non-association and non-association instance id. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "createMapping_4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NonAssociationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "409" : {
            "description" : "Indicates a duplicate non-association has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "Deletes non-association mappings.",
        "description" : "Deletes all rows from the non-associations mapping table. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "deleteNonAssociationMappings",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "Non association mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/locations" : {
      "post" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "Creates a new Location mapping",
        "description" : "Creates a mapping between a Nomis location id and a DPS location id. Requires role NOMIS_LOCATIONS",
        "operationId" : "createMapping_5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "409" : {
            "description" : "Indicates a duplicate location has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "Deletes location mappings.",
        "description" : "Deletes all rows from the locations mapping table. Requires role NOMIS_LOCATIONS",
        "operationId" : "deleteMappings",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "Location mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incidents" : {
      "post" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "Creates a new Incident Report mapping",
        "description" : "Creates a mapping between a Nomis incident report id and DPS Incident report id. Requires role NOMIS_INCIDENTS",
        "operationId" : "createMapping_6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IncidentMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate incident has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "Deletes incident mappings.",
        "description" : "Deletes all rows from the incidents mapping table. Requires role NOMIS_INCIDENTS",
        "operationId" : "deleteMappings_1",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "Incident mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incentives" : {
      "post" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "Creates a new incentive mapping",
        "description" : "Creates a mapping between nomis Incentive ids and Incentive service id. Requires ROLE_NOMIS_INCENTIVES",
        "operationId" : "createMapping_7",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IncentiveMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Incentive mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or Incentive ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate incentive has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "Deletes incentive mappings",
        "description" : "Deletes all rows from the the incentive mapping table. Requires role NOMIS_INCENTIVES",
        "operationId" : "deleteIncentiveMappings",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "Incentive mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/hearings" : {
      "post" : {
        "tags" : [ "hearings-mapping-resource" ],
        "summary" : "Creates a new hearing mapping",
        "description" : "Creates a record of a DPS hearing Id and a NOMIS hearing Id . Requires NOMIS_ADJUDICATIONS",
        "operationId" : "createMapping_8",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdjudicationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "409" : {
            "description" : "Hearing already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/reviews" : {
      "post" : {
        "tags" : [ "csip-review-mapping-resource" ],
        "summary" : "Creates a new CSIP Review mapping",
        "description" : "Creates a mapping between a Nomis CSIP review id and DPS CSIP review id. Requires role NOMIS_CSIP",
        "operationId" : "createReviewMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPChildMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPReviewMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/plans" : {
      "post" : {
        "tags" : [ "csip-plan-mapping-resource" ],
        "summary" : "Creates a new CSIP Plan mapping",
        "description" : "Creates a mapping between a Nomis CSIP plan id and DPS CSIP plan id. Requires role NOMIS_CSIP",
        "operationId" : "createPlanMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPChildMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPPlanMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/interviews" : {
      "post" : {
        "tags" : [ "csip-interview-mapping-resource" ],
        "summary" : "Creates a new CSIP Interview mapping",
        "description" : "Creates a mapping between a Nomis CSIP interview id and DPS CSIP interview id. Requires role NOMIS_CSIP",
        "operationId" : "createInterviewMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPChildMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPInterviewMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/factors" : {
      "post" : {
        "tags" : [ "csip-factor-mapping-resource" ],
        "summary" : "Creates a new CSIP Factor mapping",
        "description" : "Creates a mapping between a Nomis CSIP factor id and DPS CSIP factor id. Requires role NOMIS_CSIP",
        "operationId" : "createFactorMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPChildMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPFactorMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/children/all" : {
      "post" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "Adds new child mappings to a CSIP Report",
        "description" : "Adds child csip mappings. Requires role NOMIS_CSIP",
        "operationId" : "createChildMappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPFullMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry/entries created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip child has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/attendees" : {
      "post" : {
        "tags" : [ "csip-attendee-mapping-resource" ],
        "summary" : "Creates a new CSIP Attendee mapping",
        "description" : "Creates a mapping between a Nomis CSIP attendee id and DPS CSIP attendee id. Requires role NOMIS_CSIP",
        "operationId" : "createAttendeeMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPChildMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPAttendeeMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/all" : {
      "post" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "Creates a new CSIP Report mapping along with any associated children",
        "description" : "Creates a mapping between a Nomis CSIP report id and DPS CSIP report id and all its children. Requires role NOMIS_CSIP",
        "operationId" : "createMappingWithChildren",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPFullMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "Deletes CSIP mappings.",
        "description" : "Deletes all rows from the csip mapping table. Requires role NOMIS_CSIP",
        "operationId" : "deleteAllMappings_1",
        "parameters" : [ {
          "name" : "onlyMigrated",
          "in" : "query",
          "description" : "if true delete mapping entries created by the migration process only (synchronisation records are unaffected)",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "responses" : {
          "204" : {
            "description" : "CSIP mappings deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip" : {
      "post" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "Creates a new CSIP Report mapping",
        "description" : "Creates a mapping between a Nomis CSIP report id and DPS CSIP report id. Requires role NOMIS_CSIP",
        "operationId" : "createMapping_9",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CSIPReportMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate csip has been rejected. If Error code = 409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/sentences" : {
      "post" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Creates a new sentence hierarchical mapping",
        "description" : "Creates a mapping between nomis sentence ID (booking id and sentence seq) and DPS Sentence ID. Also maps child charge entities. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "createSentenceMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SentenceMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/prisoner/{offenderNo}/court-cases" : {
      "post" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Creates new court case hierarchical mappings for an offender during migration.",
        "description" : "Creates mappings between nomis Court Case ID and DPS Court Case ID for an offender. Only used by migration. Also maps child entities: Court appearances and charges. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "createMigrationMapping",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CourtCaseMigrationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-cases" : {
      "post" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Creates a new court case hierarchical mapping",
        "description" : "Creates a mapping between nomis Court Case ID and DPS Court Case ID. Also maps child entities: Court appearances and charges. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "createMapping_10",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CourtCaseAllMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-appearances" : {
      "post" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Creates a new court appearance mapping",
        "description" : "Creates a mapping between nomis Court appearance ID and DPS Court appearance ID. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "createCourtAppearanceMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CourtAppearanceMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/web" : {
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates web mappings for synchronisation",
        "description" : "Creates mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createWebMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganisationsMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/phone" : {
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates phone mappings for synchronisation",
        "description" : "Creates mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPhoneMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganisationsMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/organisation" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get paged corporate mappings by migration id",
        "description" : "Retrieve all corporate mappings. Results are paged. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getAllCorporateMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Corporate mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates corporate mappings for synchronisation",
        "description" : "Creates mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createOrganisationMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganisationsMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/migrate" : {
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates a tree of corporate mappings typically for a migration",
        "description" : "Creates a tree of corporate mappings typically for a migration between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createMappings_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CorporateMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/email" : {
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates email mappings for synchronisation",
        "description" : "Creates mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createEmailMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganisationsMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/address-phone" : {
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates address phone mappings for synchronisation",
        "description" : "Creates mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createAddressPhoneMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganisationsMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/address" : {
      "post" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Creates address mappings for synchronisation",
        "description" : "Creates mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createAddressMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganisationsMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/migrate" : {
      "post" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Creates a tree of core person mappings typically for a migration",
        "description" : "Creates a tree of core person mappings typically for a migration between NOMIS ids and cpr ids. Requires ROLE_NOMIS_CORE_PERSON",
        "operationId" : "createMappings_2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CorePersonMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/replace/prisoner/{offenderNo}" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Replaces a list of contact related mappings.",
        "description" : "Creates a list of contact and contact restrictions mappings and removes the previous supplied set. Used typically for a prisoner merge in NOMIS. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "replacePrisonerMappings",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPersonPrisonerMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mappings replaced",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/replace/person/{personId}" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Replaces a list of person related mappings.",
        "description" : "Creates a list of person mappings and removes the previous supplied set. Used typically for a person repair in NOMIS. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "replacePersonMappings",
        "parameters" : [ {
          "name" : "personId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPersonMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mappings replaced",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/phone" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person phone mappings for synchronisation",
        "description" : "Creates person phone mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonPhoneMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonPhoneMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person-restriction" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person restriction mappings for synchronisation",
        "description" : "Creates person restriction mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_PERSONS",
        "operationId" : "createPersonRestrictionMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonRestrictionMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get paged person mappings by migration id",
        "description" : "Retrieve all person mappings. Results are paged. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getAllPersonMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Person mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person mappings for synchronisation",
        "description" : "Creates person mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/migrate" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates a tree of contact person mappings typically for a migration",
        "description" : "Creates a tree of contact person mappings typically for a migration between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createMappings_3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPersonMappingsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/identifier" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person identifier mappings for synchronisation",
        "description" : "Creates person identifier mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonIdentifierMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonIdentifierMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/employment" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person employment mappings for synchronisation",
        "description" : "Creates person employment mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonEmploymentMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonEmploymentMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/email" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person email mappings for synchronisation",
        "description" : "Creates person email mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonEmailMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonEmailMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/contact-restriction" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person contact restriction mappings for synchronisation",
        "description" : "Creates person contact restriction mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonContactRestrictionMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonContactRestrictionMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/contact" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person contact mappings for synchronisation",
        "description" : "Creates person contact mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonContactMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonContactMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/address" : {
      "post" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Creates person address mappings for synchronisation",
        "description" : "Creates person address mappings for synchronisation between NOMIS ids and dps ids. Requires ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "createPersonAddressMapping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonAddressMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/nomis-casenote-id" : {
      "post" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "get mappings by Nomis id",
        "description" : "Retrieves multiple mappings by NOMIS case note id. Requires role NOMIS_CASENOTES",
        "operationId" : "getMappingsByNomisId",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "description" : "NOMIS case note ids",
                "items" : {
                  "type" : "integer",
                  "format" : "int64",
                  "description" : "NOMIS case note ids"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseNoteMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/batch" : {
      "post" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Creates a batch of new casenote mappings",
        "description" : "Creates a mapping between a batch of nomis casenote ids and dps casenote id. Requires ROLE_NOMIS_CASENOTES",
        "operationId" : "createMappings_4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CaseNoteMappingDto"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes" : {
      "post" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Creates a new casenote mapping",
        "description" : "Creates a mapping between nomis casenote id and dps casenote id. Requires ROLE_NOMIS_CASENOTES",
        "operationId" : "createMapping_11",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CaseNoteMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/appointments" : {
      "get" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "Get all appointment mappings",
        "description" : "Get all the mapping table rows. Should only be used in dev (in pre/prod this could return excessive data). Requires role NOMIS_APPOINTMENTS",
        "operationId" : "getAllMappings_1",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppointmentMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "Creates a new appointment mapping",
        "description" : "Creates a mapping between nomis id and Appointment instance id. Requires NOMIS_APPOINTMENTS",
        "operationId" : "createMapping_12",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or appointment instance ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate incentive has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/allocations/migration" : {
      "post" : {
        "tags" : [ "allocation-migration-resource" ],
        "summary" : "Creates a new allocation migration mapping",
        "description" : "Creates a mapping between nomis allocation id and Actvities allocation id. Requires NOMIS_ACTIVITIES",
        "operationId" : "createMapping_13",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllocationMigrationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or activity schedule ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/batch" : {
      "post" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Creates a batch of new alert mappings",
        "description" : "Creates a mapping between a batch of nomis alert ids and dps alert id. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "createMappings_5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AlertMappingDto"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mappings created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts" : {
      "get" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Get all paged mappings",
        "description" : "Retrieve all mappings. Results are paged.",
        "operationId" : "getMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAlertMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Creates a new alert mapping",
        "description" : "Creates a mapping between nomis alert ids and dps alert id. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "createMapping_14",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AlertMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping created",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate mapping has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Deletes all alert mappings",
        "description" : "Deletes all alert mappings regardless of source. This is expected to only ever been used in a non-production environment. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "deleteAllMappings_2",
        "responses" : {
          "204" : {
            "description" : "Mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications/delete-mappings" : {
      "post" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "Delete all mappings related to a specific adjudication",
        "description" : "Delete mapping entries created for a specific adjudication and associated hearings and punishments",
        "operationId" : "deleteMappingsForAdjudication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdjudicationDeleteMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Adjudication mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications/all" : {
      "post" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "Creates a new adjudication mapping along with associated hearings and punishments",
        "description" : "Creates a record of a adjudication number, hearing and punishment. Requires NOMIS_ADJUDICATIONS",
        "operationId" : "createAllMappings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdjudicationAllMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "409" : {
            "description" : "Adjudication with charge sequence already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications" : {
      "get" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "Get all adjudication mappings",
        "description" : "Get all the mapping table rows. Should only be used in dev (in pre/prod this could return excessive data). Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getAllMappings_2",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdjudicationMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "Creates a new adjudication mapping",
        "description" : "Creates a record of a adjudication number. Requires NOMIS_ADJUDICATIONS",
        "operationId" : "createMapping_15",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdjudicationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "409" : {
            "description" : "Adjudication with charge sequence already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/migration" : {
      "post" : {
        "tags" : [ "activity-migration-resource" ],
        "summary" : "Creates a new activity migration mapping",
        "description" : "Creates a mapping between nomis id and up to 2 Activity service ids. Requires NOMIS_ACTIVITIES",
        "operationId" : "createMapping_16",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityMigrationMappingDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mapping entry created",
            "content" : { }
          },
          "400" : {
            "description" : "Nomis or activity schedule ids already exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sentences/nomis" : {
      "post" : {
        "tags" : [ "NOMIS / DPS Mapping lookup" ],
        "summary" : "Retrieves list of the DPS sentence ids from the supplied NOMIS sentence ids",
        "description" : "Requires role <b>NOMIS_DPS_MAPPING__SENTENCE__R</b>",
        "operationId" : "getSentenceMappingByNomisIs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/NomisSentenceId"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of NOMIS to DPS Mappings Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NomisDpsSentenceMapping"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request is invalid, see response for details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden to this endpoint. Requires role NOMIS_DPS_MAPPING__SENTENCE__R",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/locations/nomis" : {
      "post" : {
        "tags" : [ "NOMIS / DPS Mapping lookup" ],
        "summary" : "Retrieves all the DPS location ids from the supplied NOMIS internal location ids",
        "description" : "Requires role <b>NOMIS_DPS_MAPPING__LOCATIONS__R</b>",
        "operationId" : "getAllLocationMappingsByNomisIds",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "NOMIS to DPS Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NomisDpsLocationMapping"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request is invalid, see response for details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden to this endpoint. Requires role NOMIS_DPS_MAPPING__LOCATIONS__R",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/locations/dps" : {
      "post" : {
        "tags" : [ "NOMIS / DPS Mapping lookup" ],
        "summary" : "Retrieves all the NOMIS location ids from the supplied DPS location ids",
        "description" : "Requires role <b>NOMIS_DPS_MAPPING__LOCATIONS__R</b>",
        "operationId" : "getAllLocationMappingsByDpsIds",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "DPS to NOMIS Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NomisDpsLocationMapping"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request is invalid, see response for details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden to this endpoint. Requires role NOMIS_DPS_MAPPING__LOCATIONS__R",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonId}/room/nomis-room-id/{nomisRoomDescription}" : {
      "get" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "get room mapping",
        "description" : "Retrieves a room mapping by NOMIS prison id and NOMIS room id. Requires role NOMIS_VISITS",
        "operationId" : "getRoomMapping",
        "parameters" : [ {
          "name" : "prisonId",
          "in" : "path",
          "description" : "NOMIS prison Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Id",
            "example" : "MDI"
          },
          "example" : "MDI"
        }, {
          "name" : "nomisRoomDescription",
          "in" : "path",
          "description" : "NOMIS room description",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS room description",
            "example" : "HEI_LW01"
          },
          "example" : "HEI_LW01"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NOMIS room description does not exist in the mapping table for the given prison",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visits/vsipId/{vsipId}" : {
      "get" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by VSIP id. Requires role NOMIS_VISITS",
        "operationId" : "getVisitMappingGivenVsipId",
        "parameters" : [ {
          "name" : "vsipId",
          "in" : "path",
          "description" : "VSIP Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "VSIP Id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VisitMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "VSIP id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visits/nomisId/{nomisId}" : {
      "get" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role NOMIS_VISITS",
        "operationId" : "getVisitMappingGivenNomisId",
        "parameters" : [ {
          "name" : "nomisId",
          "in" : "path",
          "description" : "NOMIS Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VisitMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NOMIS id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visits/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedVisitMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VisitMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "Delete mapping entries for the given migration id",
        "description" : "Delete mapping entries created during a single migration for visits only",
        "operationId" : "deleteVisitIdMappingsByMigrationId",
        "parameters" : [ {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "204" : {
            "description" : "Visit id mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visits/migrated/latest" : {
      "get" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_VISITS",
        "operationId" : "getLatestMigratedVisitMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VisitMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visit-balance/nomis-id/{nomisVisitBalanceId}" : {
      "get" : {
        "tags" : [ "visit-balance-mapping-resource" ],
        "summary" : "Get prisoner visit balance mapping by Nomis visit balance id",
        "description" : "Retrieves the prisoner visit balance mapping by Nomis visit balance id. Requires role ROLE_NOMIS_VISIT_BALANCE",
        "operationId" : "getMappingByNomisId_1",
        "parameters" : [ {
          "name" : "nomisVisitBalanceId",
          "in" : "path",
          "description" : "NOMIS visit balance id.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS visit balance id.",
            "example" : 1
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Visit order balance mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VisitBalanceMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visit-balance/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "visit-balance-mapping-resource" ],
        "summary" : "Get paged Prisoner visit order balance mappings by migration id",
        "description" : "Retrieve all Prisoner visit order balance mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged. Requires role ROLE_NOMIS_VISIT_BALANCE",
        "operationId" : "getMappingByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Visit order balance mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageVisitBalanceMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/visit-balance/dps-id/{dpsId}" : {
      "get" : {
        "tags" : [ "visit-balance-mapping-resource" ],
        "summary" : "Get visit balance mapping by DPS id",
        "description" : "Retrieves the visit balance mapping by DPS id. Requires role ROLE_NOMIS_VISIT_BALANCE",
        "operationId" : "getMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsId",
          "in" : "path",
          "description" : "DPS id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS id",
            "example" : "A1234BC"
          },
          "example" : "A1234BC"
        } ],
        "responses" : {
          "200" : {
            "description" : "Visit balance mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VisitBalanceMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "visit-balance-mapping-resource" ],
        "summary" : "Deletes Prisoner visit balance mapping",
        "description" : "Deletes Prisoner visit balance mapping by DPS id. Requires role NOMIS_VISIT_BALANCE",
        "operationId" : "deleteMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsId",
          "in" : "path",
          "description" : "DPS id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS id",
            "example" : "A1234BC"
          },
          "example" : "A1234BC"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/sentencing/adjustments/nomis-adjustment-category/{nomisAdjustmentCategory}/nomis-adjustment-id/{nomisAdjustmentId}" : {
      "get" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role ROLE_NOMIS_SENTENCING",
        "operationId" : "getSentenceAdjustmentMappingGivenNomisId",
        "parameters" : [ {
          "name" : "nomisAdjustmentId",
          "in" : "path",
          "description" : "NOMIS Adjustment Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Adjustment Id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "nomisAdjustmentCategory",
          "in" : "path",
          "description" : "NOMIS Adjustment Type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS Adjustment Type",
            "enum" : [ "SENTENCE", "KEY-DATE" ],
            "example" : "SENTENCE"
          },
          "example" : "SENTENCE"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentencingAdjustmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NOMIS sentence adjustment id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Indicates a duplicate adjustment has been rejected. If Error code = 1409 the body will return a DuplicateErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMappingErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/sentencing/adjustments/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedSentenceAdjustmentMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentencingAdjustmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/sentencing/adjustments/migrated/latest" : {
      "get" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_SENTENCING",
        "operationId" : "getLatestMigratedSentenceAdjustmentMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentencingAdjustmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/sentencing/adjustments/adjustment-id/{adjustmentId}" : {
      "get" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by Sentencing adjustment id (from the sentencing domain). Requires role ROLE_NOMIS_SENTENCING",
        "operationId" : "getSentencingAdjustmentMapping",
        "parameters" : [ {
          "name" : "adjustmentId",
          "in" : "path",
          "description" : "Sentence Adjustment Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Sentence Adjustment Id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentencingAdjustmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "sentence adjustment id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "sentencing-mapping-resource" ],
        "summary" : "Deletes a specific Sentence Adjustment mapping by sentence adjustment Id",
        "description" : "Deletes the Sentence Adjustment mapping. Requires role NOMIS_SENTENCING",
        "operationId" : "deleteSentenceAdjustmentMapping",
        "parameters" : [ {
          "name" : "adjustmentId",
          "in" : "path",
          "description" : "Sentence Adjustment Id (from sentencing domain)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Sentence Adjustment Id (from sentencing domain)",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Sentence Adjustment mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/punishments/{dpsPunishmentId}" : {
      "get" : {
        "tags" : [ "punishments-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS punishment id. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getMappingGivenDpsId",
        "parameters" : [ {
          "name" : "dpsPunishmentId",
          "in" : "path",
          "description" : "DPS Punishment Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Punishment Id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationPunishmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "punishments-mapping-resource" ],
        "summary" : "Delete mapping",
        "description" : "Deletes a mapping by DPS punishment id. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "deleteMappingByDpsId_1",
        "parameters" : [ {
          "name" : "dpsPunishmentId",
          "in" : "path",
          "description" : "DPS Punishment Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Punishment Id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Record deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access denied to this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/punishments/nomis-booking-id/{nomisBookingId}/nomis-sanction-sequence/{nomisSanctionSequence}" : {
      "get" : {
        "tags" : [ "punishments-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS booking id and sanction sequence. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getMappingGivenNomisId",
        "parameters" : [ {
          "name" : "nomisBookingId",
          "in" : "path",
          "description" : "NOMIS Booking Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Booking Id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "nomisSanctionSequence",
          "in" : "path",
          "description" : "NOMIS sanction sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sanction sequence",
            "example" : 12
          },
          "example" : 12
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationPunishmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations/non-association-id/{nonAssociationId}" : {
      "get" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by Non-Association Id. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "getNonAssociationMappingGivenNonAssociationId",
        "parameters" : [ {
          "name" : "nonAssociationId",
          "in" : "path",
          "description" : "Non-association id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Non-association id",
            "example" : 2
          },
          "example" : 2
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonAssociationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Non association id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "Deletes a specific non-association mapping by nonAssociationId",
        "description" : "Deletes the non-association from the mapping table. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "deleteNonAssociationMapping",
        "parameters" : [ {
          "name" : "nonAssociationId",
          "in" : "path",
          "description" : "Non-association Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Non-association Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Non-association mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getNonAssociationMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonAssociationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations/migrated/latest" : {
      "get" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "getLatestMigratedNonAssociationMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonAssociationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/non-associations/first-offender-no/{firstOffenderNo}/second-offender-no/{secondOffenderNo}/type-sequence/{typeSequence}" : {
      "get" : {
        "tags" : [ "non-associations-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by firstOffenderNo, secondOffenderNo and Nomis type sequence. Requires role NOMIS_NON_ASSOCIATIONS",
        "operationId" : "getNonAssociationMappingGivenNomisId",
        "parameters" : [ {
          "name" : "firstOffenderNo",
          "in" : "path",
          "description" : "First offender number",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "First offender number",
            "example" : "A1234BC"
          },
          "example" : "A1234BC"
        }, {
          "name" : "secondOffenderNo",
          "in" : "path",
          "description" : "Second offender number",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Second offender number",
            "example" : "D5678EF"
          },
          "example" : "D5678EF"
        }, {
          "name" : "typeSequence",
          "in" : "path",
          "description" : "Nomis type sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Nomis type sequence",
            "example" : 2
          },
          "example" : 2
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NonAssociationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Non association id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/locations/nomis/{nomisLocationId}" : {
      "get" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by Nomis location id. Requires role NOMIS_LOCATIONS",
        "operationId" : "getMappingGivenNomisId_1",
        "parameters" : [ {
          "name" : "nomisLocationId",
          "in" : "path",
          "description" : "Nomis location id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis location id",
            "example" : 12345678
          },
          "example" : 12345678
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Location id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/locations/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/locations/migrated/latest" : {
      "get" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_LOCATIONS",
        "operationId" : "getLatestMigratedMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/locations/dps/{dpsLocationId}" : {
      "get" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS Location Id. Requires role NOMIS_LOCATIONS",
        "operationId" : "getMappingGivenDpsId_1",
        "parameters" : [ {
          "name" : "dpsLocationId",
          "in" : "path",
          "description" : "DPS Location id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Location id",
            "example" : "22345678"
          },
          "example" : 22345678
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Location id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incidents/nomis-incident-id/{nomisIncidentId}" : {
      "get" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by nomisIncidentId. Requires role NOMIS_INCIDENTS",
        "operationId" : "getMappingByNomisId_2",
        "parameters" : [ {
          "name" : "nomisIncidentId",
          "in" : "path",
          "description" : "Nomis Incident Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis Incident Id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncidentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Nomis incident id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incidents/nomis-incident-id" : {
      "get" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "get a list of mappings for Nomis Incident id",
        "description" : "Retrieves matching mappings for a list of NOMIS Incident ids. Requires role NOMIS_INCIDENTS",
        "operationId" : "getMappingsByNomisId_1",
        "parameters" : [ {
          "name" : "nomisIncidentId",
          "in" : "query",
          "description" : "Nomis Incident Id",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "example" : 345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncidentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incidents/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncidentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incidents/migrated/latest" : {
      "get" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_INCIDENTS",
        "operationId" : "getMappingForLatestMigrated",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncidentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incidents/dps-incident-id/{dpsIncidentId}" : {
      "get" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS Incident Id. Requires role NOMIS_INCIDENTS",
        "operationId" : "getMappingByDPSId",
        "parameters" : [ {
          "name" : "dpsIncidentId",
          "in" : "path",
          "description" : "DPS Incident id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Incident id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncidentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "DPS Incident id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "incident-mapping-resource" ],
        "summary" : "Deletes a specific incident mapping by DPS incident id",
        "description" : "Deletes the incident from the mapping table. Requires role NOMIS_INCIDENTS",
        "operationId" : "deleteMapping",
        "parameters" : [ {
          "name" : "dpsIncidentId",
          "in" : "path",
          "description" : "DPS Incident Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Incident Id",
            "example" : "4321"
          },
          "example" : 4321
        } ],
        "responses" : {
          "204" : {
            "description" : "Incident mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incentives/nomis-booking-id/{bookingId}/nomis-incentive-sequence/{incentiveSequence}" : {
      "get" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role ROLE_NOMIS_INCENTIVES",
        "operationId" : "getIncentiveMappingGivenNomisId",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "NOMIS booking ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking ID",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "incentiveSequence",
          "in" : "path",
          "description" : "NOMIS incentive sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS incentive sequence",
            "example" : 2
          },
          "example" : 2
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncentiveMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NOMIS incentive id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incentives/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedVisitMappingsByMigrationId_1",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncentiveMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incentives/migrated/latest" : {
      "get" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role READ_MAPPING, UPDATE_MAPPING or ADMIN_MAPPING",
        "operationId" : "getLatestMigratedIncentiveMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncentiveMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/incentives/incentive-id/{incentiveId}" : {
      "get" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by Incentive id. Requires role ROLE_NOMIS_INCENTIVES",
        "operationId" : "getIncentiveMappingGivenIncentiveId",
        "parameters" : [ {
          "name" : "incentiveId",
          "in" : "path",
          "description" : "Incentive Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Incentive Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IncentiveMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Incentive id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "incentive-mapping-resource" ],
        "summary" : "Deletes a specific incentive mappings by incentiveId",
        "description" : "Deletes the incentive mapping table. Requires role NOMIS_INCENTIVES",
        "operationId" : "deleteIncentiveMapping",
        "parameters" : [ {
          "name" : "incentiveId",
          "in" : "path",
          "description" : "Incentive Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Incentive Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Incentive mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/hearings/nomis/{id}" : {
      "get" : {
        "tags" : [ "hearings-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS hearing Id. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getMappingGivenNomisId_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "NOMIS hearing id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS hearing id",
            "example" : 123
          },
          "example" : 123
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/hearings/dps/{id}" : {
      "get" : {
        "tags" : [ "hearings-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS hearing Id. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getMappingGivenDpsId_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "DPS hearing Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS hearing Id",
            "example" : "AB345"
          },
          "example" : "AB345"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "hearings-mapping-resource" ],
        "summary" : "Deletes a specific mapping by DPS hearing id",
        "description" : "Deletes the mapping table row. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "deleteMapping_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "DPS Hearing id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Hearing id",
            "example" : "AB345"
          },
          "example" : "AB345"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/reviews/nomis-csip-review-id/{nomisCSIPReviewId}" : {
      "get" : {
        "tags" : [ "csip-review-mapping-resource" ],
        "summary" : "get CSIP Review mapping",
        "description" : "Retrieves a CSIP Review mapping by NOMIS id. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByNomisId_3",
        "parameters" : [ {
          "name" : "nomisCSIPReviewId",
          "in" : "path",
          "description" : "NOMIS CSIP Review id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Review id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/reviews/dps-csip-review-id/{dpsCSIPReviewId}" : {
      "get" : {
        "tags" : [ "csip-review-mapping-resource" ],
        "summary" : "get CSIP Review mapping",
        "description" : "Retrieves a csip review mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "getCSIPReviewMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPReviewId",
          "in" : "path",
          "description" : "DPS CSIP review id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP review id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "csip-review-mapping-resource" ],
        "summary" : "Deletes CSIP Review mapping",
        "description" : "Deletes a CSIP Review mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "deleteCSIPReviewMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPReviewId",
          "in" : "path",
          "description" : "DPS CSIP Review id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Review id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/plans/nomis-csip-plan-id/{nomisCSIPPlanId}" : {
      "get" : {
        "tags" : [ "csip-plan-mapping-resource" ],
        "summary" : "get CSIP Plan mapping",
        "description" : "Retrieves a CSIP Plan mapping by NOMIS id. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByNomisId_4",
        "parameters" : [ {
          "name" : "nomisCSIPPlanId",
          "in" : "path",
          "description" : "NOMIS CSIP Plan id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Plan id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/plans/dps-csip-plan-id/{dpsCSIPPlanId}" : {
      "get" : {
        "tags" : [ "csip-plan-mapping-resource" ],
        "summary" : "get CSIP Plan mapping",
        "description" : "Retrieves a csip plan mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "getCSIPPlanMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPPlanId",
          "in" : "path",
          "description" : "DPS CSIP plan id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP plan id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "csip-plan-mapping-resource" ],
        "summary" : "Deletes CSIP Plan mapping",
        "description" : "Deletes a CSIP Plan mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "deleteCSIPPlanMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPPlanId",
          "in" : "path",
          "description" : "DPS CSIP Plan id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Plan id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/nomis-csip-id/{nomisCSIPId}" : {
      "get" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by nomisCSIPId. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByNomisId_5",
        "parameters" : [ {
          "name" : "nomisCSIPId",
          "in" : "path",
          "description" : "Nomis CSIP Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis CSIP Id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPReportMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Nomis csip id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/nomis-csip-id" : {
      "get" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "get a list of mappings for Nomis CSIP Report ids",
        "description" : "Retrieves matching mappings for a list of NOMIS CSIP report ids. Requires role NOMIS_CSIP",
        "operationId" : "getMappingsByNomisId_2",
        "parameters" : [ {
          "name" : "nomisCSIPId",
          "in" : "query",
          "description" : "Nomis CSIP Id",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "example" : 345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPReportMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMappingsByMigrationId_1",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPFullMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/migrated/latest" : {
      "get" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_CSIP",
        "operationId" : "getLatestMigratedCSIPMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPFullMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/interviews/nomis-csip-interview-id/{nomisCSIPInterviewId}" : {
      "get" : {
        "tags" : [ "csip-interview-mapping-resource" ],
        "summary" : "get CSIP Interview mapping",
        "description" : "Retrieves a CSIP Interview mapping by NOMIS id. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByNomisId_6",
        "parameters" : [ {
          "name" : "nomisCSIPInterviewId",
          "in" : "path",
          "description" : "NOMIS CSIP Interview id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Interview id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/interviews/dps-csip-interview-id/{dpsCSIPInterviewId}" : {
      "get" : {
        "tags" : [ "csip-interview-mapping-resource" ],
        "summary" : "get CSIP Interview mapping",
        "description" : "Retrieves a csip interview mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "getCSIPInterviewMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPInterviewId",
          "in" : "path",
          "description" : "DPS CSIP interview id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP interview id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "csip-interview-mapping-resource" ],
        "summary" : "Deletes CSIP Interview mapping",
        "description" : "Deletes a CSIP Interview mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "deleteCSIPInterviewMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPInterviewId",
          "in" : "path",
          "description" : "DPS CSIP Interview id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Interview id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/factors/nomis-csip-factor-id/{nomisCSIPFactorId}" : {
      "get" : {
        "tags" : [ "csip-factor-mapping-resource" ],
        "summary" : "get CSIP Factor mapping",
        "description" : "Retrieves a CSIP Factor mapping by NOMIS id. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByNomisId_7",
        "parameters" : [ {
          "name" : "nomisCSIPFactorId",
          "in" : "path",
          "description" : "NOMIS CSIP Factor id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Factor id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/factors/dps-csip-factor-id/{dpsCSIPFactorId}" : {
      "get" : {
        "tags" : [ "csip-factor-mapping-resource" ],
        "summary" : "get CSIP Factor mapping",
        "description" : "Retrieves a csip factor mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "getCSIPFactorMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPFactorId",
          "in" : "path",
          "description" : "DPS CSIP factor id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP factor id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "csip-factor-mapping-resource" ],
        "summary" : "Deletes CSIP Factor mapping",
        "description" : "Deletes a CSIP Factor mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "deleteCSIPFactorMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPFactorId",
          "in" : "path",
          "description" : "DPS CSIP Factor id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Factor id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/dps-csip-id/{csipId}/all" : {
      "get" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "Get full mapping",
        "description" : "Retrieves a mapping by DPS CSIP Report Id and all associated child mappings. Requires role NOMIS_CSIP",
        "operationId" : "getAllMappingsByDPSId",
        "parameters" : [ {
          "name" : "csipId",
          "in" : "path",
          "description" : "DPS CSIP Report Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Report Id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPFullMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "DPS CSIP Report id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/dps-csip-id/{csipId}" : {
      "get" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS CSIP Id. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByDPSId_1",
        "parameters" : [ {
          "name" : "csipId",
          "in" : "path",
          "description" : "DPS CSIP Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPReportMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "CSIP id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/attendees/nomis-csip-attendee-id/{nomisCSIPAttendeeId}" : {
      "get" : {
        "tags" : [ "csip-attendee-mapping-resource" ],
        "summary" : "get CSIP Attendee mapping",
        "description" : "Retrieves a CSIP Attendee mapping by NOMIS id. Requires role NOMIS_CSIP",
        "operationId" : "getMappingByNomisId_8",
        "parameters" : [ {
          "name" : "nomisCSIPAttendeeId",
          "in" : "path",
          "description" : "NOMIS CSIP Attendee id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Attendee id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/attendees/dps-csip-attendee-id/{dpsCSIPAttendeeId}" : {
      "get" : {
        "tags" : [ "csip-attendee-mapping-resource" ],
        "summary" : "get CSIP Attendee mapping",
        "description" : "Retrieves a csip attendee mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "getCSIPAttendeeMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPAttendeeId",
          "in" : "path",
          "description" : "DPS CSIP attendee id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP attendee id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSIPChildMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "csip-attendee-mapping-resource" ],
        "summary" : "Deletes CSIP Attendee mapping",
        "description" : "Deletes a CSIP Attendee mapping by DPS id. Requires role NOMIS_CSIP",
        "operationId" : "deleteCSIPAttendeeMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCSIPAttendeeId",
          "in" : "path",
          "description" : "DPS CSIP Attendee id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Attendee id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/sentences/nomis-booking-id/{bookingId}/nomis-sentence-sequence/{sentenceSequence}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get sentence mapping",
        "description" : "Retrieves a mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getSentenceMappingByNomisId",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123432
          },
          "example" : 123432
        }, {
          "name" : "sentenceSequence",
          "in" : "path",
          "description" : "NOMIS sentence sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sentence sequence",
            "example" : 1
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes a sentence mapping",
        "description" : "Deletes a sentence mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteSentenceMappingByNomisId",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123432
          },
          "example" : 123432
        }, {
          "name" : "sentenceSequence",
          "in" : "path",
          "description" : "NOMIS sentence sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sentence sequence",
            "example" : 1
          },
          "example" : 1
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/sentences/dps-sentence-id/{sentenceId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get sentence mapping",
        "description" : "Retrieves a mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getSentenceMappingByDpsId",
        "parameters" : [ {
          "name" : "sentenceId",
          "in" : "path",
          "description" : "DPS sentence id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS sentence id",
            "example" : "D123"
          },
          "example" : "D123"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SentenceMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/prisoner/{offenderNo}/migration-summary" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Get court sentencing migration summary for offender",
        "description" : "Retrieves the migration summary for and offender using the Nomis Prison Number (Offender number). The presence of this record indicated that the offender's court sentencing data has been migrated. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "getCourtSentencingMigrationData",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "NOMIS prison Number aka offender no.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Number aka offender no.",
            "example" : "A1234BC"
          },
          "example" : "A1234BC"
        } ],
        "responses" : {
          "200" : {
            "description" : "Offender migration summary returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtSentencingMigrationSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No record exists for the offender",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "delete court sentencing migration summary for offender",
        "description" : "Deletes the migration summary for and offender using the Nomis Prison Number (Offender number). The presence of this record indicated that the offender's court sentencing data has been migrated. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "deleteCourtSentencingMigrationData",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "NOMIS prison Number aka offender no.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Number aka offender no.",
            "example" : "A1234BC"
          },
          "example" : "A1234BC"
        } ],
        "responses" : {
          "204" : {
            "description" : "Offender migration summary deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/prisoner/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Get paged offender migration summary by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMappingsByMigrationId_2",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCourtSentencingMigrationSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-charges/nomis-court-charge-id/{courtChargeId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get court charge mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getCourtChargeMappingByNomisId",
        "parameters" : [ {
          "name" : "courtChargeId",
          "in" : "path",
          "description" : "NOMIS court charge id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court charge id",
            "example" : 123
          },
          "example" : 123
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtChargeMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-charges/dps-court-charge-id/{courtChargeId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get court charge mapping",
        "description" : "Retrieves a mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getCourtChargeMappingByDpsId",
        "parameters" : [ {
          "name" : "courtChargeId",
          "in" : "path",
          "description" : "DPS court charge id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS court charge id",
            "example" : "D123"
          },
          "example" : "D123"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtChargeMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-cases/nomis-court-case-id/{courtCaseId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get court case mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getMappingByNomisId_9",
        "parameters" : [ {
          "name" : "courtCaseId",
          "in" : "path",
          "description" : "NOMIS court case id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court case id",
            "example" : 123
          },
          "example" : 123
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCaseMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-cases/dps-court-case-id/{courtCaseId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get court case mapping",
        "description" : "Retrieves a mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getMappingByDpsId_1",
        "parameters" : [ {
          "name" : "courtCaseId",
          "in" : "path",
          "description" : "DPS court case id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS court case id",
            "example" : "D123"
          },
          "example" : "D123"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtCaseMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-appearances/nomis-court-appearance-id/{courtAppearanceId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get court appearance mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getCourtAppearanceMappingByNomisId",
        "parameters" : [ {
          "name" : "courtAppearanceId",
          "in" : "path",
          "description" : "NOMIS court appearance id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court appearance id",
            "example" : 123
          },
          "example" : 123
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-appearances/dps-court-appearance-id/{courtAppearanceId}" : {
      "get" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "get court appearance mapping",
        "description" : "Retrieves a mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "getCourtAppearanceMappingByDpsId",
        "parameters" : [ {
          "name" : "courtAppearanceId",
          "in" : "path",
          "description" : "DPS court appearance id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS court appearance id",
            "example" : "D123"
          },
          "example" : "D123"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CourtAppearanceAllMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/web/nomis-internet-address-id/{nomisWebId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get web mapping by nomis web Id",
        "description" : "Retrieves the web mapping by NOMIS Web Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getWebMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisWebId",
          "in" : "path",
          "description" : "NOMIS web id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS web id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Web mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Delete web mapping by nomis web Id",
        "description" : "Deletes the web mapping by NOMIS Web Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteWebMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisWebId",
          "in" : "path",
          "description" : "NOMIS web id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS web id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete Web mapping data or does not exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/web/dps-web-address-id/{dpsWebId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get web mapping by dps web address Id",
        "description" : "Retrieves the  mapping by DPS Web Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getWebMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsWebId",
          "in" : "path",
          "description" : "DPS  web id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS  web id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : " mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/phone/nomis-phone-id/{nomisPhoneId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get phone mapping by nomis phone Id",
        "description" : "Retrieves the phone mapping by NOMIS Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPhoneMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Phone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Delete phone mapping by nomis phone Id",
        "description" : "Deletes the phone mapping by NOMIS Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePhoneMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete Phone mapping data or does not exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/phone/dps-phone-id/{dpsPhoneId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get phone mapping by dps  phone Id",
        "description" : "Retrieves the  mapping by DPS Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPhoneMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsPhoneId",
          "in" : "path",
          "description" : "DPS  phone id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS  phone id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : " mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/organisation/nomis-corporate-id/{nomisCorporateId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get corporate mapping by nomis corporate Id",
        "description" : "Retrieves the corporate mapping by NOMIS Corporate Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getCorporateMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisCorporateId",
          "in" : "path",
          "description" : "NOMIS corporate id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS corporate id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Corporate mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Deletes corporate mapping by nomis corporate Id",
        "description" : "Deletes the corporate mapping by NOMIS Corporate Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteCorporateMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisCorporateId",
          "in" : "path",
          "description" : "NOMIS corporate id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS corporate id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Deletes Corporate mapping data or it doesn't exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/organisation/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get paged corporate mappings by migration id",
        "description" : "Retrieve all corporate mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getCorporateMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Corporate mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageOrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/organisation/dps-organisation-id/{dpsOrganisationId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get corporate mapping by dps organisation Id",
        "description" : "Retrieves the corporate mapping by DPS organisation Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getCorporateMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsOrganisationId",
          "in" : "path",
          "description" : "DPS organisation id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS organisation id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Corporate mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/email/nomis-internet-address-id/{nomisEmailId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get email mapping by nomis email Id",
        "description" : "Retrieves the email mapping by NOMIS Email Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getEmailMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisEmailId",
          "in" : "path",
          "description" : "NOMIS email id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS email id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Email mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Delete email mapping by nomis email Id",
        "description" : "Deletes the email mapping by NOMIS Email Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteEmailMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisEmailId",
          "in" : "path",
          "description" : "NOMIS email id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS email id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Deletes Email mapping data or it doesn't exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/email/dps-email-id/{dpsEmailId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get email mapping by dps  email Id",
        "description" : "Retrieves the  mapping by DPS Email Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getEmailMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsEmailId",
          "in" : "path",
          "description" : "DPS  email id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS  email id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : " mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/address/nomis-address-id/{nomisAddressId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get address mapping by nomis address Id",
        "description" : "Retrieves the address mapping by NOMIS Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getAddressMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisAddressId",
          "in" : "path",
          "description" : "NOMIS address id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS address id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Deletes address mapping by nomis address Id",
        "description" : "Deletes the address mapping by NOMIS Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteAddressMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisAddressId",
          "in" : "path",
          "description" : "NOMIS address id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS address id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Address mapping data deleted or doesn't exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/address/dps-address-id/{dpsAddressId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get address mapping by dps address Id",
        "description" : "Retrieves the address mapping by DPS Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getAddressMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsAddressId",
          "in" : "path",
          "description" : "DPS address id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS address id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/address-phone/nomis-phone-id/{nomisPhoneId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get address phone mapping by nomis phone Id",
        "description" : "Retrieves the addressPhone mapping by NOMIS phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getAddressPhoneMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "AddressPhone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Deletes address phone mapping by nomis phone Id",
        "description" : "Deletes the address phone mapping by NOMIS phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteAddressPhoneMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Deletes AddressPhone mapping data or it doesn't exist",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate/address-phone/dps-address-phone-id/{dpsAddressPhoneId}" : {
      "get" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Get address phone mapping by dps address phone Id",
        "description" : "Retrieves the address mapping by DPS Address Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getAddressPhoneMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsAddressPhoneId",
          "in" : "path",
          "description" : "DPS address phone id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS address phone id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationsMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/phone/nomis-phone-id/{nomisPhoneId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get a core person phone mapping by nomis phone Id",
        "description" : "Retrieves the coreperson phone mapping by NOMIS Phone Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getPhoneMappingByNomisId_1",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Core Person phone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonPhoneMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/phone/cpr-phone-id/{cprPhoneId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get core person phone mapping by cpr phone Id",
        "description" : "Retrieves the core person phone mapping by CPR Phone Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getPhoneMappingByCprId",
        "parameters" : [ {
          "name" : "cprPhoneId",
          "in" : "path",
          "description" : "CPR phone id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "CPR phone id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Core Person phone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonPhoneMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/person/nomis-prison-number/{nomisPrisonNumber}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get person mapping by nomis prison number",
        "description" : "Retrieves the core person mapping by Nomis Prison Number (Offender number). Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getPersonMappingByNomisPrisonNumber",
        "parameters" : [ {
          "name" : "nomisPrisonNumber",
          "in" : "path",
          "description" : "NOMIS prison Number aka offender no.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Number aka offender no.",
            "example" : "A1234BC"
          },
          "example" : "A1234BC"
        } ],
        "responses" : {
          "200" : {
            "description" : "Core Person mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/person/cpr-id/{cprId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get core person mapping by cpr core person Id",
        "description" : "Retrieves the person mapping by CPR Core Person Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getPersonMappingByCprId",
        "parameters" : [ {
          "name" : "cprId",
          "in" : "path",
          "description" : "CPR core person id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "CPR core person id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get paged core person mappings by migration id",
        "description" : "Retrieve all core person mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getPersonMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Core Person mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageCorePersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/email/nomis-email-address-id/{nomisEmailAddressId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get a core person email mapping by nomis email address Id",
        "description" : "Retrieves the core person email mapping by NOMIS Email/Internet Address Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getCorePersonEmailMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisEmailAddressId",
          "in" : "path",
          "description" : "NOMIS email address id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS email address id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person email mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonEmailAddressMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/email/cpr-email-address-id/{cprEmailAddressId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get a core person email mapping by cpr email address Id",
        "description" : "Retrieves the core person email mapping by CPR Email Address Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getCorePersonEmailMappingByDpsId",
        "parameters" : [ {
          "name" : "cprEmailAddressId",
          "in" : "path",
          "description" : "CPR email address id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "CPR email address id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Email mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonEmailAddressMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/address/nomis-address-id/{nomisAddressId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get a core person address mapping by nomis address Id",
        "description" : "Retrieves the core person address mapping by NOMIS Address Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getAddressMappingByNomisId_1",
        "parameters" : [ {
          "name" : "nomisAddressId",
          "in" : "path",
          "description" : "NOMIS address id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS address id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Core Person address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonAddressMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person/address/cpr-address-id/{cprAddressId}" : {
      "get" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Get person address mapping by cpr core person address Id",
        "description" : "Retrieves the person address mapping by CPR Core Person Address Id. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "getAddressMappingByCprId",
        "parameters" : [ {
          "name" : "cprAddressId",
          "in" : "path",
          "description" : "CPR address id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "CPR address id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorePersonAddressMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/profile-details/migration/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "contact-person-profile-details-migration-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all contact person profile details migration mappings for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageContactPersonProfileDetailsMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/phone/nomis-phone-id/{nomisPhoneId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person phone mapping by nomis phone Id",
        "description" : "Retrieves the person phone mapping by NOMIS Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonPhoneMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person phone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonPhoneMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person phone mapping by nomis phone Id",
        "description" : "Delete the person phone mapping by NOMIS Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonPhoneMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPhoneId",
          "in" : "path",
          "description" : "NOMIS phone id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS phone id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person phone mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/phone/dps-contact-phone-id/{dpsContactPhoneId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person phone mapping by dps contact phone Id",
        "description" : "Retrieves the person phone mapping by DPS Contact Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonPhoneMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactPhoneId",
          "in" : "path",
          "description" : "DPS contact phone id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact phone id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Phone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonPhoneMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/phone/dps-contact-address-phone-id/{dpsContactAddressPhoneId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person mapping by dps contact address phone Id",
        "description" : "Retrieves the person phone mapping by DPS Contact Address Phone Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonAddressPhoneMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactAddressPhoneId",
          "in" : "path",
          "description" : "DPS contact phone id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact phone id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Phone mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonPhoneMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person/nomis-person-id/{nomisPersonId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person mapping by nomis person Id",
        "description" : "Retrieves the person a mapping by NOMIS Person Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPersonId",
          "in" : "path",
          "description" : "NOMIS person id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS person id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Deletes person mapping by nomis person Id",
        "description" : "Deletes the person a mapping by NOMIS Person Id, NB any child mappings e.g. peron address mappings remain untouched and should be removed separately. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPersonId",
          "in" : "path",
          "description" : "NOMIS person id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS person id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person mapping data deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get paged person mappings by migration id",
        "description" : "Retrieve all person mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonMappingsByMigrationId_1",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Person mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person/dps-contact-id/{dpsContactId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person mapping by dps contact Id",
        "description" : "Retrieves the person mapping by DPS Contact Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactId",
          "in" : "path",
          "description" : "DPS contact id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person mapping by dps contact Id",
        "description" : "Delete the person mapping by DPS Contact Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactId",
          "in" : "path",
          "description" : "DPS contact id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person mapping data",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person-restriction/nomis-person-restriction-id/{nomisPersonRestrictionId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person restriction mapping by nomis person restriction Id",
        "description" : "Retrieves the person restriction mapping by NOMIS Person Restriction Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonRestrictionMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPersonRestrictionId",
          "in" : "path",
          "description" : "NOMIS contact restriction id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS contact restriction id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Restriction mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonRestrictionMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person restriction mapping by nomis person restriction Id",
        "description" : "Delete the person restriction mapping by NOMIS Person Restriction Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonRestrictionMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisPersonRestrictionId",
          "in" : "path",
          "description" : "NOMIS contact restriction id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS contact restriction id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person Restriction mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/person-restriction/dps-contact-restriction-id/{dpsContactRestrictionId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person contact restriction mapping by dps contact restriction Id",
        "description" : "Retrieves the person contact restriction mapping by DPS contact restriction Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonRestrictionMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactRestrictionId",
          "in" : "path",
          "description" : "DPS contact restriction id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact restriction id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Restriction mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonRestrictionMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/identifier/nomis-person-id/{nomisPersonId}/nomis-sequence-number/{nomisSequenceNumber}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person identifier mapping by nomis person id and sequence",
        "description" : "Retrieves the person identifier mapping by NOMIS person id and NOMIS sequence number. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonIdentifierMappingByNomisIds",
        "parameters" : [ {
          "name" : "nomisPersonId",
          "in" : "path",
          "description" : "NOMIS person id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS person id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "nomisSequenceNumber",
          "in" : "path",
          "description" : "NOMIS identifier sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS identifier sequence",
            "example" : 4
          },
          "example" : 4
        } ],
        "responses" : {
          "200" : {
            "description" : "Person identifier mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonIdentifierMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person identifier mapping by nomis person id and sequence",
        "description" : "Delete the person identifier mapping by NOMIS person id and NOMIS sequence number. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonIdentifierMappingByNomisIds",
        "parameters" : [ {
          "name" : "nomisPersonId",
          "in" : "path",
          "description" : "NOMIS person id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS person id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "nomisSequenceNumber",
          "in" : "path",
          "description" : "NOMIS identifier sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS identifier sequence",
            "example" : 4
          },
          "example" : 4
        } ],
        "responses" : {
          "204" : {
            "description" : "Person identifier mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/identifier/dps-contact-identifier-id/{dpsContactIdentifierId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get contact identifier mapping by dps contact identifier Id",
        "description" : "Retrieves the person identifier mapping by DPS Contact Identifier Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonIdentifierMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactIdentifierId",
          "in" : "path",
          "description" : "DPS contact identifier id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact identifier id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Identifier mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonIdentifierMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/employment/nomis-person-id/{nomisPersonId}/nomis-sequence-number/{nomisSequenceNumber}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person employment mapping by nomis person id and sequence",
        "description" : "Retrieves the person employment mapping by NOMIS person id and NOMIS sequence number. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonEmploymentMappingByNomisIds",
        "parameters" : [ {
          "name" : "nomisPersonId",
          "in" : "path",
          "description" : "NOMIS person id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS person id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "nomisSequenceNumber",
          "in" : "path",
          "description" : "NOMIS employment sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS employment sequence",
            "example" : 4
          },
          "example" : 4
        } ],
        "responses" : {
          "200" : {
            "description" : "Person employment mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonEmploymentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person employment mapping by nomis person id and sequence",
        "description" : "Delete the person employment mapping by NOMIS person id and NOMIS sequence number. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonEmploymentMappingByNomisIds",
        "parameters" : [ {
          "name" : "nomisPersonId",
          "in" : "path",
          "description" : "NOMIS person id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS person id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "nomisSequenceNumber",
          "in" : "path",
          "description" : "NOMIS employment sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS employment sequence",
            "example" : 4
          },
          "example" : 4
        } ],
        "responses" : {
          "204" : {
            "description" : "Person employment mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/employment/dps-contact-employment-id/{dpsContactEmploymentId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get contact employment mapping by dps contact employment Id",
        "description" : "Retrieves the person employment mapping by DPS Contact Employment Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonEmploymentMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactEmploymentId",
          "in" : "path",
          "description" : "DPS contact employment id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact employment id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Employment mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonEmploymentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/email/nomis-internet-address-id/{nomisInternetAddressId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person email mapping by nomis internet address Id",
        "description" : "Retrieves the person email mapping by NOMIS Email/Internet Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonEmailMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisInternetAddressId",
          "in" : "path",
          "description" : "NOMIS email id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS email id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person email mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonEmailMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person email mapping by nomis internet address Id",
        "description" : "Delete the person email mapping by NOMIS Email/Internet Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonEmailMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisInternetAddressId",
          "in" : "path",
          "description" : "NOMIS email id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS email id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person email mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/email/dps-contact-email-id/{dpsContactEmailId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get contact email mapping by dps contact email Id",
        "description" : "Retrieves the person email mapping by DPS Contact Email Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonEmailMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactEmailId",
          "in" : "path",
          "description" : "DPS contact email id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact email id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Email mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonEmailMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/contact/nomis-contact-id/{nomisContactId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person contact mapping by nomis contact Id",
        "description" : "Retrieves the person contact mapping by NOMIS Contact Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonContactMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisContactId",
          "in" : "path",
          "description" : "NOMIS contact id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS contact id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Contact mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonContactMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person contact mapping by nomis contact Id",
        "description" : "Deletes the person contact mapping by NOMIS Contact Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonContactMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisContactId",
          "in" : "path",
          "description" : "NOMIS contact id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS contact id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person Contact mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/contact/dps-prisoner-contact-id/{dpsPrisonerContactId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person contact mapping by dps prisoner contact Id",
        "description" : "Retrieves the person contact mapping by DPS Prisoner Contact Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonContactMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsPrisonerContactId",
          "in" : "path",
          "description" : "DPS prisoner contact id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS prisoner contact id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Contact mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonContactMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/contact-restriction/nomis-contact-restriction-id/{nomisContactRestrictionId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person contact restriction mapping by nomis contact Id",
        "description" : "Retrieves the person contact restriction mapping by NOMIS ContactRestriction Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonContactRestrictionMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisContactRestrictionId",
          "in" : "path",
          "description" : "NOMIS contact restriction id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS contact restriction id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person contactRestriction mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonContactRestrictionMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person contact restriction mapping by nomis contact Id",
        "description" : "Delete the person contact restriction mapping by NOMIS ContactRestriction Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonContactRestrictionMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisContactRestrictionId",
          "in" : "path",
          "description" : "NOMIS contact restriction id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS contact restriction id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person contact restriction mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/contact-restriction/dps-prisoner-contact-restriction-id/{dpsPrisonerContactRestrictionId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person contact restriction mapping by dps prisoner contact restriction Id",
        "description" : "Retrieves the person contact restriction mapping by DPS prisoner contact restriction Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonContactRestrictionMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsPrisonerContactRestrictionId",
          "in" : "path",
          "description" : "DPS prisoner contact restriction id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS prisoner contact restriction id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Contact Restriction mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonContactRestrictionMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/address/nomis-address-id/{nomisAddressId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person address mapping by nomis contact Id",
        "description" : "Retrieves the person address mapping by NOMIS Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonAddressMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisAddressId",
          "in" : "path",
          "description" : "NOMIS address id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS address id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonAddressMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Delete person address mapping by nomis contact Id",
        "description" : "Delete the person address mapping by NOMIS Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deletePersonAddressMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisAddressId",
          "in" : "path",
          "description" : "NOMIS address id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS address id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Person address mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person/address/dps-contact-address-id/{dpsContactAddressId}" : {
      "get" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Get person address mapping by dps contact address Id",
        "description" : "Retrieves the person address mapping by DPS Contact Address Id. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "getPersonAddressMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsContactAddressId",
          "in" : "path",
          "description" : "DPS contact address id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS contact address id",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Person Address mapping data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonAddressMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/{offenderNo}/all" : {
      "get" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Gets all case note mappings for a prisoner",
        "description" : "Gets all the mapping between nomis case note ids and dps case note id related to specific prisoner created either via migration or synchronisation. Requires ROLE_NOMIS_ALERTS",
        "operationId" : "getMappingsForPrisoner_1",
        "parameters" : [ {
          "name" : "offenderNo",
          "in" : "path",
          "description" : "NOMIS offender no",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS offender no",
            "example" : "A1234KT"
          },
          "example" : "A1234KT"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mappings for prisoner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllPrisonerCaseNoteMappingsDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/nomis-casenote-id/{caseNoteId}" : {
      "get" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS id. Requires role NOMIS_CASENOTES",
        "operationId" : "getMappingByNomisId_10",
        "parameters" : [ {
          "name" : "caseNoteId",
          "in" : "path",
          "description" : "NOMIS case note id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS case note id",
            "example" : 23456789
          },
          "example" : 23456789
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseNoteMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/migration-id/{migrationId}/count-by-prisoner" : {
      "get" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Get count of mappings by migration id grouped by prisoner",
        "operationId" : "getMappingsByMigrationIdGroupByPrisoner",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/migrated/latest" : {
      "get" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_CASENOTES",
        "operationId" : "getLatestMigratedCaseNoteMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseNoteMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/dps-casenote-id/{dpsCaseNoteId}/all" : {
      "get" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "get multiple mappings",
        "description" : "Retrieves mappings by DPS id. In case of past merges, there could be > 1 nomis id per dps id. Requires role NOMIS_CASENOTES",
        "operationId" : "getMappingsByDpsId",
        "parameters" : [ {
          "name" : "dpsCaseNoteId",
          "in" : "path",
          "description" : "DPS casenote id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS casenote id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseNoteMappingDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/appointments/nomis-event-id/{eventId}" : {
      "get" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by nomis event id. Requires role NOMIS_APPOINTMENTS",
        "operationId" : "getMappingGivenEventId",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "Nomis event Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis event Id",
            "example" : 700800900
          },
          "example" : 700800900
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/appointments/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedAppointmentMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "Delete appointment mapping entries for the supplied migration id",
        "description" : "To be used when re-running migrations. Note this will not touch any appointments, just the mappings.",
        "operationId" : "deleteAppointmentMigrationMappingsByMigrationId",
        "parameters" : [ {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2023-06-24T12:00:00"
          },
          "example" : "2023-06-24T12:00:00"
        } ],
        "responses" : {
          "204" : {
            "description" : "Appointments migration mapping id mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges - requires role NOMIS_APPOINTMENTS",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/appointments/migrated/latest" : {
      "get" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_APPOINTMENTS",
        "operationId" : "getLatestMigratedAppointmentMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/appointments/appointment-instance-id/{appointmentInstanceId}" : {
      "get" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by appointment instance id. Requires role NOMIS_APPOINTMENTS",
        "operationId" : "getMappingGivenId",
        "parameters" : [ {
          "name" : "appointmentInstanceId",
          "in" : "path",
          "description" : "Appointment instance Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Appointment instance Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/allocations/migration/nomis-allocation-id/{nomisAllocationId}" : {
      "get" : {
        "tags" : [ "allocation-migration-resource" ],
        "summary" : "get mapping for an allocation migration",
        "description" : "Retrieves an allocation migration mapping by the nomis id. Requires role NOMIS_ACTIVITIES",
        "operationId" : "getMapping",
        "parameters" : [ {
          "name" : "nomisAllocationId",
          "in" : "path",
          "description" : "Nomis allocation Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis allocation Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/allocations/migration/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "allocation-migration-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all allocation migration mappings for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedAllocationMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/allocations/migrated/latest" : {
      "get" : {
        "tags" : [ "allocation-migration-resource" ],
        "summary" : "get the latest mapping for an allocation migration",
        "description" : "Requires role NOMIS_ACTIVITIES",
        "operationId" : "getLatestMigratedMapping_1",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/migration-id/{migrationId}/grouped-by-prisoner" : {
      "get" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Get paged mappings by migration id grouped by prisoner",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run) grouped by prisoner. Results are paged.",
        "operationId" : "getMappingsByMigrationIdGroupByPrisoner_1",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagePrisonerAlertMappingsSummaryDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMappingsByMigrationId_3",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageAlertMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/alerts/dps-alert-id/{dpsAlertId}" : {
      "get" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS id. Requires role NOMIS_ALERTS",
        "operationId" : "getMappingByDpsId_2",
        "parameters" : [ {
          "name" : "dpsAlertId",
          "in" : "path",
          "description" : "DPS alert id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS alert id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "alerts-mapping-resource" ],
        "summary" : "Deletes mapping",
        "description" : "Deletes a mapping by DPS id. Requires role NOMIS_ALERTS",
        "operationId" : "deleteMappingByDpsId_2",
        "parameters" : [ {
          "name" : "dpsAlertId",
          "in" : "path",
          "description" : "DPS alert id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS alert id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all mappings of type 'MIGRATED' for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedAdjudicationMappingsByMigrationId",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications/migrated/latest" : {
      "get" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getLatestMigratedAdjudicationMapping",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications/charge-number/{chargeNumber}" : {
      "get" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by DPS charge number. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getMappingGivenNomisId_3",
        "parameters" : [ {
          "name" : "chargeNumber",
          "in" : "path",
          "description" : "DPS Charge number",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Charge number",
            "example" : "12345/1"
          },
          "example" : "12345/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "Deletes a specific mapping by DPS charge number",
        "description" : "Deletes the mapping table row. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "deleteMapping_2",
        "parameters" : [ {
          "name" : "chargeNumber",
          "in" : "path",
          "description" : "Adjudication number",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Adjudication number",
            "example" : "12345"
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/adjudications/adjudication-number/{adjudicationNumber}/charge-sequence/{chargeSequence}" : {
      "get" : {
        "tags" : [ "adjudications-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by NOMIS adjudication number and charge sequence. Requires role NOMIS_ADJUDICATIONS",
        "operationId" : "getMappingGivenDpsId_3",
        "parameters" : [ {
          "name" : "adjudicationNumber",
          "in" : "path",
          "description" : "Adjudication number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Adjudication number",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "chargeSequence",
          "in" : "path",
          "description" : "Charge sequence for offence in this adjudication",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Charge sequence for offence in this adjudication",
            "example" : 1
          },
          "example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdjudicationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/schedules/scheduled-instance-id/{scheduledInstanceId}" : {
      "get" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "get scheduled instance mapping",
        "description" : "Retrieves a mapping by scheduled instance id. Requires role NOMIS_ACTIVITIES",
        "operationId" : "getScheduleInstanceMapping",
        "parameters" : [ {
          "name" : "scheduledInstanceId",
          "in" : "path",
          "description" : "Scheduled instance Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled instance Id",
            "example" : 67890
          },
          "example" : 67890
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/migration/nomis-course-activity-id/{courseActivityId}" : {
      "get" : {
        "tags" : [ "activity-migration-resource" ],
        "summary" : "get mapping for an activity migration",
        "description" : "Retrieves an activity migration mapping by course activity id. Requires role NOMIS_ACTIVITIES",
        "operationId" : "getMapping_1",
        "parameters" : [ {
          "name" : "courseActivityId",
          "in" : "path",
          "description" : "Course activity Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Course activity Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/migration/migration-id/{migrationId}" : {
      "get" : {
        "tags" : [ "activity-migration-resource" ],
        "summary" : "get paged mappings by migration id",
        "description" : "Retrieve all activity migration mappings for the given migration id (identifies a single migration run). Results are paged.",
        "operationId" : "getMigratedActivityMappings",
        "parameters" : [ {
          "name" : "pageRequest",
          "in" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/Pageable"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "description" : "Migration Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2020-03-24T12:00:00"
          },
          "example" : "2020-03-24T12:00:00"
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping page returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/migration/migrated/latest" : {
      "get" : {
        "tags" : [ "activity-migration-resource" ],
        "summary" : "get the latest mapping for a migration",
        "description" : "Requires role NOMIS_ACTIVITIES",
        "operationId" : "getLatestMigratedMapping_2",
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMigrationMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "No mappings found at all for any migration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/activity-schedule-id/{activityScheduleId}/scheduled-instance-id/{scheduledInstanceId}" : {
      "get" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "get scheduled instance mapping",
        "description" : "Retrieves a mapping by activity schedule id and scheduled instance id. Requires role NOMIS_ACTIVITIES",
        "operationId" : "getScheduleMapping",
        "parameters" : [ {
          "name" : "activityScheduleId",
          "in" : "path",
          "description" : "Activity schedule Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity schedule Id",
            "example" : 12345
          },
          "example" : 12345
        }, {
          "name" : "scheduledInstanceId",
          "in" : "path",
          "description" : "Scheduled instance Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled instance Id",
            "example" : 67890
          },
          "example" : 67890
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/activity-schedule-id/{activityScheduleId}" : {
      "get" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "get mapping",
        "description" : "Retrieves a mapping by activity schedule id. Requires role NOMIS_ACTIVITIES",
        "operationId" : "getMappingGivenId_1",
        "parameters" : [ {
          "name" : "activityScheduleId",
          "in" : "path",
          "description" : "Activity schedule Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity schedule Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityMappingDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sentences/nomis/booking-id/{nomisBookingId}/sentence-sequence/{nomisSentenceSequence}" : {
      "get" : {
        "tags" : [ "NOMIS / DPS Mapping lookup" ],
        "summary" : "Retrieves the DPS Sentence id from the NOMIS booking and sentence sequence",
        "description" : "Requires role <b>NOMIS_DPS_MAPPING__SENTENCE__R</b>",
        "operationId" : "getSentenceMappingByNomisId_1",
        "parameters" : [ {
          "name" : "nomisBookingId",
          "in" : "path",
          "description" : "NOMIS booking id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123456
          },
          "example" : 123456
        }, {
          "name" : "nomisSentenceSequence",
          "in" : "path",
          "description" : "NOMIS sentence sequence",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sentence sequence",
            "example" : 4
          },
          "example" : 4
        } ],
        "responses" : {
          "200" : {
            "description" : "NOMIS to DPS Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NomisDpsSentenceMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden to this endpoint. Requires role NOMIS_DPS_MAPPING__SENTENCE__R",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Sentence id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/locations/nomis/{nomisLocationId}" : {
      "get" : {
        "tags" : [ "NOMIS / DPS Mapping lookup" ],
        "summary" : "Retrieves the DPS location id from the NOMIS internal location id",
        "description" : "Requires role <b>NOMIS_DPS_MAPPING__LOCATIONS__R</b>",
        "operationId" : "getLocationMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisLocationId",
          "in" : "path",
          "description" : "NOMIS internal location id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS internal location id",
            "example" : 2318905
          },
          "example" : 2318905
        } ],
        "responses" : {
          "200" : {
            "description" : "NOMIS to DPS Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NomisDpsLocationMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden to this endpoint. Requires role NOMIS_DPS_MAPPING__LOCATIONS__R",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Location id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/locations/dps/{dpsLocationId}" : {
      "get" : {
        "tags" : [ "NOMIS / DPS Mapping lookup" ],
        "summary" : "Retrieves the NOMIS location id from the DPS location id",
        "description" : "Requires role <b>NOMIS_DPS_MAPPING__LOCATIONS__R</b>",
        "operationId" : "getLocationMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsLocationId",
          "in" : "path",
          "description" : "DPS location UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS location UUID",
            "example" : "12345678-1234-5678-abcd-1234567890ab"
          },
          "example" : "12345678-1234-5678-abcd-1234567890ab"
        } ],
        "responses" : {
          "200" : {
            "description" : "DPS to NOMIS Mapping Information Returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NomisDpsLocationMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden to this endpoint. Requires role NOMIS_DPS_MAPPING__LOCATIONS__R",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Location id does not exist in mapping table",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prison/{prisonId}/room-mappings/nomis-room-id/{nomisRoomDescription}" : {
      "delete" : {
        "tags" : [ "visit-mapping-resource" ],
        "summary" : "Deletes a room mapping",
        "description" : "Removes room mapping given the prison and nomis room description. Requires role NOMIS_VISITS",
        "operationId" : "deleteRoomMapping",
        "parameters" : [ {
          "name" : "prisonId",
          "in" : "path",
          "description" : "NOMIS prison Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS prison Id",
            "example" : "MDI"
          },
          "example" : "MDI"
        }, {
          "name" : "nomisRoomDescription",
          "in" : "path",
          "description" : "NOMIS room description",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "NOMIS room description",
            "example" : "MDI"
          },
          "example" : "MDI"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VisitMappingDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Visit room mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/schedules/max-nomis-schedule-id/{maxCourseScheduleId}" : {
      "delete" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "Delete all mappings with a nomis schedule id greater than the given value",
        "description" : "Used to delete mappings records in preprod that have been copied from prod but don't have any NOMIS data.",
        "operationId" : "deleteCourseSchedulesAfterId",
        "parameters" : [ {
          "name" : "maxCourseScheduleId",
          "in" : "path",
          "description" : "Max NOMIS course schedule ID to retain",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Max NOMIS course schedule ID to retain",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "content" : { }
          }
        }
      }
    },
    "/mapping/locations/nomis/{locationId}" : {
      "delete" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "Deletes a specific location mapping by Nomis location id",
        "description" : "Deletes the location from the mapping table. Requires role NOMIS_LOCATIONS",
        "operationId" : "deleteMappingGivenNomisId",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "Nomis Location Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis Location Id",
            "example" : 12345678
          },
          "example" : 12345678
        } ],
        "responses" : {
          "204" : {
            "description" : "Location mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/locations/dps/{locationId}" : {
      "delete" : {
        "tags" : [ "location-mapping-resource" ],
        "summary" : "Deletes a specific location mapping by DPS location id",
        "description" : "Deletes the location from the mapping table. Requires role NOMIS_LOCATIONS",
        "operationId" : "deleteMappingGivenDpsId",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "DPS Location Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS Location Id",
            "example" : "1234abcd-5678-1234-5678-0123456789ab"
          },
          "example" : "1234abcd-5678-1234-5678-0123456789ab"
        } ],
        "responses" : {
          "204" : {
            "description" : "Location mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/csip/dps-csip-id/{dpsCSIPId}/all" : {
      "delete" : {
        "tags" : [ "csip-mapping-resource" ],
        "summary" : "Deletes a specific CSIP report mapping by DPS CSIP id and its associated children",
        "description" : "Deletes a mapping by DPS id and any children. Requires role NOMIS_CSIP",
        "operationId" : "deleteMapping_3",
        "parameters" : [ {
          "name" : "dpsCSIPId",
          "in" : "path",
          "description" : "DPS CSIP Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS CSIP Id",
            "example" : "4321"
          },
          "example" : 4321
        } ],
        "responses" : {
          "204" : {
            "description" : "CSIP mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/sentences/dps-sentence-id/{dpsSentenceId}" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes a sentence mapping",
        "description" : "Deletes a sentence mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteSentenceMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsSentenceId",
          "in" : "path",
          "description" : "DPS sentence id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS sentence id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-charges/nomis-court-charge-id/{nomisCourtChargeId}" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes court charge mapping",
        "description" : "Deletes a court charge mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteCourtChargeMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisCourtChargeId",
          "in" : "path",
          "description" : "NOMIS court charge id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court charge id",
            "example" : 33
          },
          "example" : 33
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-cases/nomis-court-case-id/{nomisCourtCaseId}" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes court case mapping",
        "description" : "Deletes a court case mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisCourtCaseId",
          "in" : "path",
          "description" : "NOMIS court case id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court case id",
            "example" : 33
          },
          "example" : 33
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-cases/dps-court-case-id/{dpsCourtCaseId}" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes court case mapping",
        "description" : "Deletes a court case mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteMappingByDpsId_3",
        "parameters" : [ {
          "name" : "dpsCourtCaseId",
          "in" : "path",
          "description" : "DPS court case id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS court case id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-appearances/nomis-court-appearance-id/{nomisCourtAppearanceId}" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes court appearance mapping",
        "description" : "Deletes a court appearance mapping by NOMIS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteCourtAppearanceMappingByNomisId",
        "parameters" : [ {
          "name" : "nomisCourtAppearanceId",
          "in" : "path",
          "description" : "NOMIS court appearance id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court appearance id",
            "example" : 33
          },
          "example" : 33
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/court-appearances/dps-court-appearance-id/{dpsCourtAppearanceId}" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "Deletes court appearances mapping",
        "description" : "Deletes a court appearances mapping by DPS id. Requires role NOMIS_COURT_SENTENCING",
        "operationId" : "deleteCourtAppearanceMappingByDpsId",
        "parameters" : [ {
          "name" : "dpsCourtAppearanceId",
          "in" : "path",
          "description" : "DPS court appearances id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS court appearances id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/court-sentencing/all" : {
      "delete" : {
        "tags" : [ "court-sentencing-mapping-resource" ],
        "summary" : "delete all mappings",
        "description" : "Deletes all mappings, typically used before repeating a migration. Requires ROLE_NOMIS_COURT_SENTENCING",
        "operationId" : "deleteAllMappings_3",
        "responses" : {
          "204" : {
            "description" : "All mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access this endpoint is forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/corporate" : {
      "delete" : {
        "tags" : [ "corporate-mapping-resource" ],
        "summary" : "Deletes all corporate mappings",
        "description" : "Deletes all corporate mappings regardless of source. This includes corporate, phone, address, address phone, email, web. This is expected to only ever been used in a non-production environment. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteAllMappings_4",
        "responses" : {
          "204" : {
            "description" : "All mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/core-person" : {
      "delete" : {
        "tags" : [ "core-person-mapping-resource" ],
        "summary" : "Deletes all core person mappings",
        "description" : "Deletes all core person mappings regardless of source. This includes person and address. This is expected to only ever been used in a non-production environment. Requires role ROLE_NOMIS_CORE_PERSON",
        "operationId" : "deleteAllMappings_5",
        "responses" : {
          "204" : {
            "description" : "All mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/contact-person" : {
      "delete" : {
        "tags" : [ "contact-person-mapping-resource" ],
        "summary" : "Deletes all contact person mappings",
        "description" : "Deletes all contact person mappings regardless of source. This includes person, phone, address, email, employment, identifiers, restrictions, contacts and contact restrictions. This is expected to only ever been used in a non-production environment. Requires role ROLE_NOMIS_CONTACTPERSONS",
        "operationId" : "deleteAllMappings_6",
        "responses" : {
          "204" : {
            "description" : "All mappings deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Access forbidden for this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/nomis-casenote-id/{nomisCaseNoteId}" : {
      "delete" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Deletes mapping",
        "description" : "Deletes a mapping by Nomis id. Requires role NOMIS_CASENOTES",
        "operationId" : "deleteMappingByNomisId_1",
        "parameters" : [ {
          "name" : "nomisCaseNoteId",
          "in" : "path",
          "description" : "Nomis casenote id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis casenote id",
            "example" : 3344556677
          },
          "example" : 3344556677
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/casenotes/dps-casenote-id/{dpsCaseNoteId}" : {
      "delete" : {
        "tags" : [ "case-notes-mapping-resource" ],
        "summary" : "Deletes mapping",
        "description" : "Deletes mapping by DPS id (there could be more than one nomis id if a merge has taken place). Requires role NOMIS_CASENOTES",
        "operationId" : "deleteMappingsByDpsId",
        "parameters" : [ {
          "name" : "dpsCaseNoteId",
          "in" : "path",
          "description" : "DPS casenote id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "DPS casenote id",
            "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
          },
          "example" : "edcd118c-41ba-42ea-b5c4-404b453ad58b"
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping Deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/appointments/appointment-instance-id/{id}" : {
      "delete" : {
        "tags" : [ "appointment-mapping-resource" ],
        "summary" : "Deletes a specific mapping by appointment instance id",
        "description" : "Deletes the mapping table row. Requires role NOMIS_APPOINTMENTS",
        "operationId" : "deleteMapping_4",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Appointment instance Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Appointment instance Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mapping/activities/activity-schedule-id/{id}" : {
      "delete" : {
        "tags" : [ "activity-mapping-resource" ],
        "summary" : "Deletes a specific mapping by activity schedule id",
        "description" : "Deletes the mapping table row. Requires role NOMIS_ACTIVITIES",
        "operationId" : "deleteMapping_5",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Activity schedule Id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity schedule Id",
            "example" : 12345
          },
          "example" : 12345
        } ],
        "responses" : {
          "204" : {
            "description" : "Mapping deleted",
            "content" : { }
          },
          "401" : {
            "description" : "Unauthorized to access this endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdjudicationPunishmentBatchUpdateMappingDto" : {
        "type" : "object",
        "description" : "Batch of Adjudication punishment (aka award) mappings to create and delete",
        "properties" : {
          "punishmentsToCreate" : {
            "type" : "array",
            "description" : "Adjudication punishment mapping",
            "items" : {
              "$ref" : "#/components/schemas/AdjudicationPunishmentMappingDto"
            }
          },
          "punishmentsToDelete" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdjudicationPunishmentNomisIdDto"
            }
          }
        },
        "required" : [ "punishmentsToCreate", "punishmentsToDelete" ]
      },
      "AdjudicationPunishmentMappingDto" : {
        "type" : "object",
        "description" : "Adjudication punishment (aka award) mapping",
        "properties" : {
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123456
          },
          "nomisSanctionSequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sanction sequence",
            "example" : 4
          },
          "dpsPunishmentId" : {
            "type" : "string",
            "description" : "DPS punishment id",
            "example" : 123456
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "ADJUDICATION_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "ADJUDICATION_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsPunishmentId", "nomisBookingId", "nomisSanctionSequence" ]
      },
      "AdjudicationPunishmentNomisIdDto" : {
        "type" : "object",
        "description" : "ID of mapping identified by the NOMIS id for an adjudication punishment (aka award) mapping",
        "properties" : {
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123456
          },
          "nomisSanctionSequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sanction sequence",
            "example" : 4
          }
        },
        "required" : [ "nomisBookingId", "nomisSanctionSequence" ]
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorCode" : {
            "type" : "string"
          },
          "userMessage" : {
            "type" : "string"
          },
          "developerMessage" : {
            "type" : "string"
          },
          "moreInfo" : {
            "type" : "string"
          }
        },
        "required" : [ "status" ]
      },
      "CourtChargeBatchUpdateMappingDto" : {
        "type" : "object",
        "description" : "Batch of Court Charge mappings to create and delete",
        "properties" : {
          "courtChargesToCreate" : {
            "type" : "array",
            "description" : "Court Charge mappings to create",
            "items" : {
              "$ref" : "#/components/schemas/CourtChargeMappingDto"
            }
          },
          "courtChargesToDelete" : {
            "type" : "array",
            "description" : "Court Charge mappings to delete",
            "items" : {
              "$ref" : "#/components/schemas/CourtChargeNomisIdDto"
            }
          }
        },
        "required" : [ "courtChargesToCreate", "courtChargesToDelete" ]
      },
      "CourtChargeMappingDto" : {
        "type" : "object",
        "description" : "Offender Charge mapping",
        "properties" : {
          "nomisCourtChargeId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS offender charge id",
            "example" : 123456
          },
          "dpsCourtChargeId" : {
            "type" : "string",
            "description" : "DPS offender charge id",
            "example" : 123456
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "DPS_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsCourtChargeId", "nomisCourtChargeId" ]
      },
      "CourtChargeNomisIdDto" : {
        "type" : "object",
        "description" : "ID of mapping identified by the NOMIS id for a Court Charge mapping",
        "properties" : {
          "nomisCourtChargeId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court charge id",
            "example" : 123456
          }
        },
        "required" : [ "nomisCourtChargeId" ]
      },
      "ContactPersonProfileDetailsMigrationMappingDto" : {
        "type" : "object",
        "description" : "Mappings for a Contact Person Profile Details Migration",
        "properties" : {
          "prisonerNumber" : {
            "type" : "string",
            "description" : "NOMIS prisoner number",
            "example" : "G1234AA"
          },
          "migrationId" : {
            "type" : "string",
            "description" : "Migration Id",
            "example" : "2022-03-23T12:00:00"
          },
          "domesticStatusDpsIds" : {
            "type" : "string",
            "description" : "Domestic status DPS ids created",
            "example" : "1,2,3"
          },
          "numberOfChildrenDpsIds" : {
            "type" : "string",
            "description" : "Number of children DPS ids created",
            "example" : "4,5,6"
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "domesticStatusDpsIds", "migrationId", "numberOfChildrenDpsIds", "prisonerNumber" ]
      },
      "CaseNoteMappingDto" : {
        "type" : "object",
        "description" : "Case note mapping",
        "properties" : {
          "dpsCaseNoteId" : {
            "type" : "string",
            "description" : "Case note id in DPS"
          },
          "nomisCaseNoteId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Case note id in Nomis"
          },
          "offenderNo" : {
            "type" : "string",
            "description" : "Prisoner number in Nomis"
          },
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Nomis booking id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsCaseNoteId", "mappingType", "nomisBookingId", "nomisCaseNoteId", "offenderNo" ]
      },
      "AlertMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to Alert mapping IDs",
        "properties" : {
          "dpsAlertId" : {
            "type" : "string",
            "description" : "DPS alert id"
          },
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id"
          },
          "nomisAlertSequence" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS alert sequence"
          }
        },
        "required" : [ "dpsAlertId", "nomisAlertSequence", "nomisBookingId" ]
      },
      "MergedPrisonerAlertMappingsDto" : {
        "type" : "object",
        "properties" : {
          "removedOffenderNo" : {
            "type" : "string",
            "description" : "Prisoner whose mappings need removing"
          },
          "prisonerMapping" : {
            "$ref" : "#/components/schemas/PrisonerAlertMappingsDto",
            "description" : "Mappings for a prisoner after the merge"
          }
        },
        "required" : [ "prisonerMapping", "removedOffenderNo" ]
      },
      "PrisonerAlertMappingsDto" : {
        "type" : "object",
        "description" : "Mappings for a prisoner created during migration",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "mappings" : {
            "type" : "array",
            "description" : "Mapping IDs",
            "items" : {
              "$ref" : "#/components/schemas/AlertMappingIdDto"
            }
          }
        },
        "required" : [ "mappingType", "mappings" ]
      },
      "AlertMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Alert mapping",
        "properties" : {
          "dpsAlertId" : {
            "type" : "string",
            "description" : "DPS alert id"
          },
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id"
          },
          "nomisAlertSequence" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS alert sequence"
          },
          "offenderNo" : {
            "type" : "string",
            "description" : "Prisoner number"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsAlertId", "mappingType", "nomisAlertSequence", "nomisBookingId", "offenderNo" ]
      },
      "NomisMappingIdUpdate" : {
        "type" : "object",
        "description" : "Update mapping NOMIS Ids",
        "properties" : {
          "bookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id"
          }
        },
        "required" : [ "bookingId" ]
      },
      "ActivityMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Activity schedule mapping",
        "properties" : {
          "activityScheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity schedule id"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity id"
          },
          "nomisCourseActivityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS course activity id"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "NOMIS_CREATED", "ACTIVITY_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "scheduledInstanceMappings" : {
            "type" : "array",
            "description" : "Scheduled instance to course schedule mappings",
            "items" : {
              "$ref" : "#/components/schemas/ActivityScheduleMappingDto"
            }
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "activityScheduleId", "mappingType", "nomisCourseActivityId", "scheduledInstanceMappings" ]
      },
      "ActivityScheduleMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Activity schedule mapping",
        "properties" : {
          "scheduledInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity scheduled instance id"
          },
          "nomisCourseScheduleId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS course schedule id"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "ACTIVITY_CREATED", "ACTIVITY_UPDATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "mappingType", "nomisCourseScheduleId", "scheduledInstanceId" ]
      },
      "CreateRoomMappingDto" : {
        "type" : "object",
        "description" : "Create room mapping request",
        "properties" : {
          "vsipId" : {
            "type" : "string",
            "description" : "VSIP room id"
          },
          "nomisRoomDescription" : {
            "type" : "string",
            "description" : "nomis room description (unique within prison)"
          },
          "isOpen" : {
            "type" : "boolean",
            "description" : "open or closed indicator, default is false"
          }
        },
        "required" : [ "isOpen", "nomisRoomDescription", "vsipId" ]
      },
      "VisitMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to VSIP Visit Id mapping",
        "properties" : {
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "nomis visit id"
          },
          "vsipId" : {
            "type" : "string",
            "description" : "VSIP visit id",
            "maxLength" : 40,
            "minLength" : 0
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "ONLINE" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "mappingType", "nomisId", "vsipId" ]
      },
      "DuplicateErrorContentObject" : {
        "type" : "object",
        "properties" : {
          "duplicate" : {
            "type" : "object"
          },
          "existing" : {
            "type" : "object"
          }
        },
        "required" : [ "duplicate", "existing" ]
      },
      "DuplicateMappingErrorResponse" : {
        "type" : "object",
        "properties" : {
          "moreInfo" : {
            "$ref" : "#/components/schemas/DuplicateErrorContentObject"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "100 CONTINUE", "101 SWITCHING_PROTOCOLS", "102 PROCESSING", "103 EARLY_HINTS", "103 CHECKPOINT", "200 OK", "201 CREATED", "202 ACCEPTED", "203 NON_AUTHORITATIVE_INFORMATION", "204 NO_CONTENT", "205 RESET_CONTENT", "206 PARTIAL_CONTENT", "207 MULTI_STATUS", "208 ALREADY_REPORTED", "226 IM_USED", "300 MULTIPLE_CHOICES", "301 MOVED_PERMANENTLY", "302 FOUND", "302 MOVED_TEMPORARILY", "303 SEE_OTHER", "304 NOT_MODIFIED", "305 USE_PROXY", "307 TEMPORARY_REDIRECT", "308 PERMANENT_REDIRECT", "400 BAD_REQUEST", "401 UNAUTHORIZED", "402 PAYMENT_REQUIRED", "403 FORBIDDEN", "404 NOT_FOUND", "405 METHOD_NOT_ALLOWED", "406 NOT_ACCEPTABLE", "407 PROXY_AUTHENTICATION_REQUIRED", "408 REQUEST_TIMEOUT", "409 CONFLICT", "410 GONE", "411 LENGTH_REQUIRED", "412 PRECONDITION_FAILED", "413 PAYLOAD_TOO_LARGE", "413 REQUEST_ENTITY_TOO_LARGE", "414 URI_TOO_LONG", "414 REQUEST_URI_TOO_LONG", "415 UNSUPPORTED_MEDIA_TYPE", "416 REQUESTED_RANGE_NOT_SATISFIABLE", "417 EXPECTATION_FAILED", "418 I_AM_A_TEAPOT", "419 INSUFFICIENT_SPACE_ON_RESOURCE", "420 METHOD_FAILURE", "421 DESTINATION_LOCKED", "422 UNPROCESSABLE_ENTITY", "423 LOCKED", "424 FAILED_DEPENDENCY", "425 TOO_EARLY", "426 UPGRADE_REQUIRED", "428 PRECONDITION_REQUIRED", "429 TOO_MANY_REQUESTS", "431 REQUEST_HEADER_FIELDS_TOO_LARGE", "451 UNAVAILABLE_FOR_LEGAL_REASONS", "500 INTERNAL_SERVER_ERROR", "501 NOT_IMPLEMENTED", "502 BAD_GATEWAY", "503 SERVICE_UNAVAILABLE", "504 GATEWAY_TIMEOUT", "505 HTTP_VERSION_NOT_SUPPORTED", "506 VARIANT_ALSO_NEGOTIATES", "507 INSUFFICIENT_STORAGE", "508 LOOP_DETECTED", "509 BANDWIDTH_LIMIT_EXCEEDED", "510 NOT_EXTENDED", "511 NETWORK_AUTHENTICATION_REQUIRED" ]
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userMessage" : {
            "type" : "string"
          },
          "developerMessage" : {
            "type" : "string"
          }
        },
        "required" : [ "errorCode", "moreInfo", "status", "userMessage" ]
      },
      "VisitBalanceMappingDto" : {
        "type" : "object",
        "description" : "Prisoner Visit Order Balance mapping",
        "properties" : {
          "nomisVisitBalanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Visit Balance (offender booking) ID"
          },
          "dpsId" : {
            "type" : "string",
            "description" : "DPS representation of the offender"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisVisitBalanceId" ]
      },
      "SentencingAdjustmentMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Sentencing mapping",
        "properties" : {
          "nomisAdjustmentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Adjustment id"
          },
          "nomisAdjustmentCategory" : {
            "type" : "string",
            "description" : "NOMIS Adjustment category",
            "enum" : [ "SENTENCE", "KEY-DATE" ]
          },
          "adjustmentId" : {
            "type" : "string",
            "description" : "Adjustment id from sentencing service"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "SENTENCING_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "adjustmentId", "mappingType", "nomisAdjustmentCategory", "nomisAdjustmentId" ]
      },
      "AdjudicationPunishmentBatchMappingDto" : {
        "type" : "object",
        "description" : "Batch of Adjudication punishment (aka award) mappings",
        "properties" : {
          "punishments" : {
            "type" : "array",
            "description" : "Adjudication punishment mapping",
            "items" : {
              "$ref" : "#/components/schemas/AdjudicationPunishmentMappingDto"
            }
          }
        },
        "required" : [ "punishments" ]
      },
      "NonAssociationMappingDto" : {
        "type" : "object",
        "description" : "Non-association mapping",
        "properties" : {
          "nonAssociationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Non-Association id"
          },
          "firstOffenderNo" : {
            "type" : "string",
            "description" : "First NOMIS Offender No",
            "example" : "A1234BC"
          },
          "secondOffenderNo" : {
            "type" : "string",
            "description" : "Second NOMIS Offender No",
            "example" : "D5678EF"
          },
          "nomisTypeSequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS type sequence"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "NON_ASSOCIATION_CREATED" ],
            "maxLength" : 30,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "firstOffenderNo", "mappingType", "nomisTypeSequence", "nonAssociationId", "secondOffenderNo" ]
      },
      "LocationMappingDto" : {
        "type" : "object",
        "description" : "Location mapping",
        "properties" : {
          "dpsLocationId" : {
            "type" : "string",
            "description" : "Location id in DPS"
          },
          "nomisLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Location id in Nomis"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "LOCATION_CREATED" ],
            "maxLength" : 30,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsLocationId", "mappingType", "nomisLocationId" ]
      },
      "IncidentMappingDto" : {
        "type" : "object",
        "description" : "Incident mapping",
        "properties" : {
          "nomisIncidentId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Incident id"
          },
          "dpsIncidentId" : {
            "type" : "string",
            "description" : "DPS Incident id from incident reporting service"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsIncidentId", "mappingType", "nomisIncidentId" ]
      },
      "IncentiveMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Incentive mapping",
        "properties" : {
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id"
          },
          "nomisIncentiveSequence" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS incentive sequence"
          },
          "incentiveId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Incentive id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "INCENTIVE_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "incentiveId", "mappingType", "nomisBookingId", "nomisIncentiveSequence" ]
      },
      "AdjudicationMappingDto" : {
        "type" : "object",
        "description" : "Adjudication mapping (same value for NOMIS and DPS)",
        "properties" : {
          "adjudicationNumber" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS Adjudication number",
            "example" : 123456
          },
          "chargeSequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS Charges sequence",
            "example" : 1
          },
          "chargeNumber" : {
            "type" : "string",
            "description" : "DPS Charges number",
            "example" : "123456/1"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "ADJUDICATION_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "ADJUDICATION_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "adjudicationNumber", "chargeNumber", "chargeSequence" ]
      },
      "CSIPChildMappingDto" : {
        "type" : "object",
        "description" : "CSIP Child mapping",
        "properties" : {
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP child id"
          },
          "dpsId" : {
            "type" : "string",
            "description" : "DPS CSIP child id"
          },
          "dpsCSIPReportId" : {
            "type" : "string",
            "description" : "DPS CSIP Report id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsCSIPReportId", "dpsId", "mappingType", "nomisId" ]
      },
      "CSIPReviewMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCSIPReviewId" : {
            "type" : "string"
          },
          "dpsCSIPReportId" : {
            "type" : "string"
          },
          "nomisCSIPReviewId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCSIPReportId", "dpsCSIPReviewId", "id", "isNew", "mappingType", "new", "nomisCSIPReviewId" ]
      },
      "CSIPPlanMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCSIPPlanId" : {
            "type" : "string"
          },
          "dpsCSIPReportId" : {
            "type" : "string"
          },
          "nomisCSIPPlanId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCSIPPlanId", "dpsCSIPReportId", "id", "isNew", "mappingType", "new", "nomisCSIPPlanId" ]
      },
      "CSIPInterviewMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCSIPInterviewId" : {
            "type" : "string"
          },
          "dpsCSIPReportId" : {
            "type" : "string"
          },
          "nomisCSIPInterviewId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCSIPInterviewId", "dpsCSIPReportId", "id", "isNew", "mappingType", "new", "nomisCSIPInterviewId" ]
      },
      "CSIPFactorMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCSIPFactorId" : {
            "type" : "string"
          },
          "dpsCSIPReportId" : {
            "type" : "string"
          },
          "nomisCSIPFactorId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCSIPFactorId", "dpsCSIPReportId", "id", "isNew", "mappingType", "new", "nomisCSIPFactorId" ]
      },
      "CSIPFullMappingDto" : {
        "type" : "object",
        "description" : "Full CSIP mapping",
        "properties" : {
          "nomisCSIPReportId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Report id"
          },
          "dpsCSIPReportId" : {
            "type" : "string",
            "description" : "DPS CSIP Report id from DPS CSIP service"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "attendeeMappings" : {
            "type" : "array",
            "description" : "CSIP Attendee Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CSIPChildMappingDto"
            }
          },
          "factorMappings" : {
            "type" : "array",
            "description" : "CSIP Factor Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CSIPChildMappingDto"
            }
          },
          "interviewMappings" : {
            "type" : "array",
            "description" : "CSIP Interview Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CSIPChildMappingDto"
            }
          },
          "planMappings" : {
            "type" : "array",
            "description" : "CSIP Plan Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CSIPChildMappingDto"
            }
          },
          "reviewMappings" : {
            "type" : "array",
            "description" : "CSIP Review Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CSIPChildMappingDto"
            }
          }
        },
        "required" : [ "attendeeMappings", "dpsCSIPReportId", "factorMappings", "interviewMappings", "mappingType", "nomisCSIPReportId", "planMappings", "reviewMappings" ]
      },
      "CSIPAttendeeMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCSIPAttendeeId" : {
            "type" : "string"
          },
          "dpsCSIPReportId" : {
            "type" : "string"
          },
          "nomisCSIPAttendeeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCSIPAttendeeId", "dpsCSIPReportId", "id", "isNew", "mappingType", "new", "nomisCSIPAttendeeId" ]
      },
      "CSIPReportMappingDto" : {
        "type" : "object",
        "description" : "CSIP mapping",
        "properties" : {
          "nomisCSIPReportId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS CSIP Report id"
          },
          "dpsCSIPReportId" : {
            "type" : "string",
            "description" : "CSIP Report id from DPS CSIP service"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsCSIPReportId", "mappingType", "nomisCSIPReportId" ]
      },
      "CSIPMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCSIPId" : {
            "type" : "string"
          },
          "nomisCSIPId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "NOMIS_CREATED", "DPS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCSIPId", "id", "isNew", "mappingType", "new", "nomisCSIPId" ]
      },
      "SentenceMappingDto" : {
        "type" : "object",
        "description" : "Sentence mapping",
        "properties" : {
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123456
          },
          "nomisSentenceSequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sentence sequence",
            "example" : 4
          },
          "dpsSentenceId" : {
            "type" : "string",
            "description" : "DPS sentence id",
            "example" : 123456
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "DPS_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsSentenceId", "nomisBookingId", "nomisSentenceSequence" ]
      },
      "SentenceMapping" : {
        "type" : "object",
        "properties" : {
          "dpsSentenceId" : {
            "type" : "string"
          },
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "nomisSentenceSequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsSentenceId", "id", "isNew", "mappingType", "new", "nomisBookingId", "nomisSentenceSequence" ]
      },
      "CourtAppearanceMappingDto" : {
        "type" : "object",
        "description" : "Court appearance mapping",
        "properties" : {
          "nomisCourtAppearanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court appearance id",
            "example" : 123456
          },
          "dpsCourtAppearanceId" : {
            "type" : "string",
            "description" : "DPS court appearance id",
            "example" : 123456
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "DPS_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsCourtAppearanceId", "nomisCourtAppearanceId" ]
      },
      "CourtCaseMappingDto" : {
        "type" : "object",
        "description" : "Court case mapping",
        "properties" : {
          "nomisCourtCaseId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court case id",
            "example" : 123456
          },
          "dpsCourtCaseId" : {
            "type" : "string",
            "description" : "DPS court case id",
            "example" : 123456
          },
          "offenderNo" : {
            "type" : "string",
            "description" : "NOMIS offender no/nomisId",
            "example" : "AA12345"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "DPS_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsCourtCaseId", "nomisCourtCaseId" ]
      },
      "CourtCaseMigrationMappingDto" : {
        "type" : "object",
        "description" : "Court cases mapping including child entity mapping",
        "properties" : {
          "courtCases" : {
            "type" : "array",
            "description" : "Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CourtCaseMappingDto"
            }
          },
          "courtAppearances" : {
            "type" : "array",
            "description" : "Court Appearance mappings",
            "items" : {
              "$ref" : "#/components/schemas/CourtAppearanceMappingDto"
            }
          },
          "courtCharges" : {
            "type" : "array",
            "description" : "Court Charge mappings",
            "items" : {
              "$ref" : "#/components/schemas/CourtChargeMappingDto"
            }
          },
          "sentences" : {
            "type" : "array",
            "description" : "Sentence mappings",
            "items" : {
              "$ref" : "#/components/schemas/SentenceMappingDto"
            }
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "courtAppearances", "courtCases", "courtCharges", "mappingType", "sentences" ]
      },
      "CourtChargeMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCourtChargeId" : {
            "type" : "string"
          },
          "nomisCourtChargeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCourtChargeId", "id", "isNew", "mappingType", "new", "nomisCourtChargeId" ]
      },
      "CourtCaseAllMappingDto" : {
        "type" : "object",
        "description" : "Court case mapping including child entity mapping",
        "properties" : {
          "nomisCourtCaseId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court case id",
            "example" : 123456
          },
          "dpsCourtCaseId" : {
            "type" : "string",
            "description" : "DPS court case id",
            "example" : 123456
          },
          "courtAppearances" : {
            "type" : "array",
            "description" : "Court Appearance mappings",
            "items" : {
              "$ref" : "#/components/schemas/CourtAppearanceMappingDto"
            }
          },
          "courtCharges" : {
            "type" : "array",
            "description" : "Court Charge mappings",
            "items" : {
              "$ref" : "#/components/schemas/CourtChargeMappingDto"
            }
          },
          "sentences" : {
            "type" : "array",
            "description" : "Sentence mappings",
            "items" : {
              "$ref" : "#/components/schemas/SentenceMappingDto"
            }
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "DPS_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "courtAppearances", "courtCharges", "dpsCourtCaseId", "nomisCourtCaseId", "sentences" ]
      },
      "CourtAppearanceMapping" : {
        "type" : "object",
        "properties" : {
          "dpsCourtAppearanceId" : {
            "type" : "string"
          },
          "nomisCourtAppearanceId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "new" : {
            "type" : "boolean"
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "id" : {
            "type" : "string"
          },
          "isNew" : {
            "type" : "boolean"
          }
        },
        "required" : [ "dpsCourtAppearanceId", "id", "isNew", "mappingType", "new", "nomisCourtAppearanceId" ]
      },
      "OrganisationsMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "CorporateMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to DPS simple mapping IDs",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          }
        },
        "required" : [ "dpsId", "nomisId" ]
      },
      "CorporateMappingsDto" : {
        "type" : "object",
        "description" : "Mappings for a Corporate and there associated child entities",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "corporateMapping" : {
            "$ref" : "#/components/schemas/CorporateMappingIdDto",
            "description" : "Corporate mapping"
          },
          "corporateAddressMapping" : {
            "type" : "array",
            "description" : "Corporate address mapping",
            "items" : {
              "$ref" : "#/components/schemas/CorporateMappingIdDto"
            }
          },
          "corporateAddressPhoneMapping" : {
            "type" : "array",
            "description" : "Corporate address phone mapping",
            "items" : {
              "$ref" : "#/components/schemas/CorporateMappingIdDto"
            }
          },
          "corporatePhoneMapping" : {
            "type" : "array",
            "description" : "Corporate phone mapping",
            "items" : {
              "$ref" : "#/components/schemas/CorporateMappingIdDto"
            }
          },
          "corporateEmailMapping" : {
            "type" : "array",
            "description" : "Corporate email mapping",
            "items" : {
              "$ref" : "#/components/schemas/CorporateMappingIdDto"
            }
          },
          "corporateWebMapping" : {
            "type" : "array",
            "description" : "Corporate web mapping",
            "items" : {
              "$ref" : "#/components/schemas/CorporateMappingIdDto"
            }
          }
        },
        "required" : [ "corporateAddressMapping", "corporateAddressPhoneMapping", "corporateEmailMapping", "corporateMapping", "corporatePhoneMapping", "corporateWebMapping", "mappingType" ]
      },
      "CorePersonMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to CPR core person mapping IDs",
        "properties" : {
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "nomisPrisonNumber" : {
            "type" : "string",
            "description" : "NOMIS Prison number aka Offender number"
          }
        },
        "required" : [ "cprId", "nomisPrisonNumber" ]
      },
      "CorePersonMappingsDto" : {
        "type" : "object",
        "description" : "Mappings for a Core Person and its associated child entities",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "CPR_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "personMapping" : {
            "$ref" : "#/components/schemas/CorePersonMappingIdDto",
            "description" : "Core Person mapping"
          },
          "addressMappings" : {
            "type" : "array",
            "description" : "Core Person address mappings",
            "items" : {
              "$ref" : "#/components/schemas/CorePersonSimpleMappingIdDto"
            }
          },
          "phoneMappings" : {
            "type" : "array",
            "description" : "Core Person phone mappings",
            "items" : {
              "$ref" : "#/components/schemas/CorePersonPhoneMappingIdDto"
            }
          },
          "emailMappings" : {
            "type" : "array",
            "description" : "Core Person email mappings",
            "items" : {
              "$ref" : "#/components/schemas/CorePersonSimpleMappingIdDto"
            }
          }
        },
        "required" : [ "addressMappings", "emailMappings", "mappingType", "personMapping", "phoneMappings" ]
      },
      "CorePersonPhoneMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to CPR phone mapping IDs",
        "properties" : {
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "cprPhoneType" : {
            "type" : "string",
            "description" : "CPR phone type",
            "enum" : [ "ADDRESS", "CORE_PERSON" ]
          }
        },
        "required" : [ "cprId", "cprPhoneType", "nomisId" ]
      },
      "CorePersonSimpleMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to CPR simple mapping IDs",
        "properties" : {
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          }
        },
        "required" : [ "cprId", "nomisId" ]
      },
      "ContactPersonPrisonerMappingsDto" : {
        "type" : "object",
        "description" : "New and old mappings related to a prisoner",
        "properties" : {
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "personContactMapping" : {
            "type" : "array",
            "description" : "Person contact mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          },
          "personContactRestrictionMapping" : {
            "type" : "array",
            "description" : "Person contact restriction mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          },
          "personContactMappingsToRemoveByDpsId" : {
            "type" : "array",
            "description" : "Person contact mappings to remove",
            "items" : {
              "type" : "string"
            }
          },
          "personContactRestrictionMappingsToRemoveByDpsId" : {
            "type" : "array",
            "description" : "Person contact restriction mappings to remove",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "mappingType", "personContactMapping", "personContactMappingsToRemoveByDpsId", "personContactRestrictionMapping", "personContactRestrictionMappingsToRemoveByDpsId" ]
      },
      "ContactPersonSimpleMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to DPS simple mapping IDs",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          }
        },
        "required" : [ "dpsId", "nomisId" ]
      },
      "ContactPersonMappingsDto" : {
        "type" : "object",
        "description" : "Mappings for a Person and there associated child entities",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)"
          },
          "mappingType" : {
            "type" : "string",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "personMapping" : {
            "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto",
            "description" : "Person mapping"
          },
          "personAddressMapping" : {
            "type" : "array",
            "description" : "Person address mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          },
          "personPhoneMapping" : {
            "type" : "array",
            "description" : "Person phone mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonPhoneMappingIdDto"
            }
          },
          "personEmailMapping" : {
            "type" : "array",
            "description" : "Person email mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          },
          "personEmploymentMapping" : {
            "type" : "array",
            "description" : "Person employment mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSequenceMappingIdDto"
            }
          },
          "personIdentifierMapping" : {
            "type" : "array",
            "description" : "Person identifier mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSequenceMappingIdDto"
            }
          },
          "personRestrictionMapping" : {
            "type" : "array",
            "description" : "Person restriction mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          },
          "personContactMapping" : {
            "type" : "array",
            "description" : "Person contact mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          },
          "personContactRestrictionMapping" : {
            "type" : "array",
            "description" : "Person contact restriction mapping",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonSimpleMappingIdDto"
            }
          }
        },
        "required" : [ "mappingType", "personAddressMapping", "personContactMapping", "personContactRestrictionMapping", "personEmailMapping", "personEmploymentMapping", "personIdentifierMapping", "personMapping", "personPhoneMapping", "personRestrictionMapping" ]
      },
      "ContactPersonPhoneMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to DPS simple mapping IDs",
        "properties" : {
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "dpsPhoneType" : {
            "type" : "string",
            "description" : "DPS phone type",
            "enum" : [ "ADDRESS", "PERSON" ]
          }
        },
        "required" : [ "dpsId", "dpsPhoneType", "nomisId" ]
      },
      "ContactPersonSequenceMappingIdDto" : {
        "type" : "object",
        "description" : "NOMIS to DPS simple mapping IDs",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisPersonId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "nomisSequenceNumber" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS sequence"
          }
        },
        "required" : [ "dpsId", "nomisPersonId", "nomisSequenceNumber" ]
      },
      "PersonPhoneMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "dpsPhoneType" : {
            "type" : "string",
            "description" : "DPS phone type",
            "enum" : [ "ADDRESS", "PERSON" ]
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "dpsPhoneType", "mappingType", "nomisId" ]
      },
      "PersonRestrictionMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "PersonMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "PersonIdentifierMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisPersonId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "nomisSequenceNumber" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS sequence"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisPersonId", "nomisSequenceNumber" ]
      },
      "PersonEmploymentMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisPersonId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "nomisSequenceNumber" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS sequence"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisPersonId", "nomisSequenceNumber" ]
      },
      "PersonEmailMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "PersonContactRestrictionMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "PersonContactMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "PersonAddressMappingDto" : {
        "type" : "object",
        "properties" : {
          "dpsId" : {
            "type" : "string",
            "description" : "DPS id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsId", "mappingType", "nomisId" ]
      },
      "AppointmentMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Appointment mapping",
        "properties" : {
          "appointmentInstanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Appointment instance id"
          },
          "nomisEventId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS course activity id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "APPOINTMENT_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "APPOINTMENT_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "appointmentInstanceId", "nomisEventId" ]
      },
      "AllocationMigrationMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Activities allocation mapping",
        "properties" : {
          "nomisAllocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS allocation id"
          },
          "activityAllocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity allocation id"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "activityAllocationId", "activityId", "label", "nomisAllocationId" ]
      },
      "AdjudicationDeleteMappingDto" : {
        "type" : "object",
        "description" : "All DPS ids related to mappings that need deleting",
        "properties" : {
          "dpsChargeNumber" : {
            "type" : "string",
            "description" : "DPS Charge number",
            "example" : "123456/1"
          },
          "dpsHearingIds" : {
            "type" : "array",
            "description" : "List of DPS hearing Ids",
            "items" : {
              "type" : "string"
            }
          },
          "dpsPunishmentIds" : {
            "type" : "array",
            "description" : "List of DPS punishment Ids",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "dpsChargeNumber", "dpsHearingIds", "dpsPunishmentIds" ]
      },
      "AdjudicationAllMappingDto" : {
        "type" : "object",
        "description" : "Adjudication mapping for all entities in an adjudication",
        "properties" : {
          "adjudicationId" : {
            "$ref" : "#/components/schemas/AdjudicationMappingDto",
            "description" : "Adjudication ID mapping"
          },
          "hearings" : {
            "type" : "array",
            "description" : "Adjudication hearing mapping",
            "items" : {
              "$ref" : "#/components/schemas/AdjudicationHearingMappingDto"
            }
          },
          "punishments" : {
            "type" : "array",
            "description" : "Adjudication punishment mapping",
            "items" : {
              "$ref" : "#/components/schemas/AdjudicationPunishmentMappingDto"
            }
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "MIGRATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "ADJUDICATION_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          }
        },
        "required" : [ "adjudicationId", "hearings", "label", "punishments" ]
      },
      "AdjudicationHearingMappingDto" : {
        "type" : "object",
        "description" : "Adjudication hearing mapping",
        "properties" : {
          "nomisHearingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS hearing id",
            "example" : 123456
          },
          "dpsHearingId" : {
            "type" : "string",
            "description" : "DPS hearing id",
            "example" : 123456
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "ADJUDICATION_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "ADJUDICATION_CREATED" ],
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "dpsHearingId", "nomisHearingId" ]
      },
      "ActivityMigrationMappingDto" : {
        "type" : "object",
        "description" : "NOMIS to Activity schedule mapping",
        "properties" : {
          "nomisCourseActivityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS course activity id"
          },
          "activityId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Activity id"
          },
          "activityId2" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "2nd Activity id"
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "activityId", "label", "nomisCourseActivityId" ]
      },
      "NomisSentenceId" : {
        "type" : "object",
        "description" : "NOMIS Sentence ID",
        "properties" : {
          "nomisBookingId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS booking id",
            "example" : 123456
          },
          "nomisSentenceSequence" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "NOMIS sentence sequence",
            "example" : 4
          }
        },
        "required" : [ "nomisBookingId", "nomisSentenceSequence" ]
      },
      "NomisDpsSentenceMapping" : {
        "type" : "object",
        "description" : "NOMIS DPS Sentence mapping",
        "properties" : {
          "nomisSentenceId" : {
            "$ref" : "#/components/schemas/NomisSentenceId",
            "description" : "NOMIS senetence key"
          },
          "dpsSentenceId" : {
            "type" : "string",
            "description" : "DPS sentence id",
            "example" : "f4499772-2e43-4951-861d-04ad86df43fc\""
          }
        },
        "required" : [ "dpsSentenceId", "nomisSentenceId" ]
      },
      "NomisDpsLocationMapping" : {
        "type" : "object",
        "description" : "NOMIS DPS Location mapping",
        "properties" : {
          "dpsLocationId" : {
            "type" : "string",
            "description" : "Location id in DPS Locations Service",
            "example" : "f4499772-2e43-4951-861d-04ad86df43fc"
          },
          "nomisLocationId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Internal Location id in NOMIS",
            "example" : 2318905
          }
        },
        "required" : [ "dpsLocationId", "nomisLocationId" ]
      },
      "RoomMappingDto" : {
        "type" : "object",
        "description" : "Room mapping request",
        "properties" : {
          "vsipId" : {
            "type" : "string",
            "description" : "VSIP room id"
          },
          "nomisRoomDescription" : {
            "type" : "string",
            "description" : "nomis room description (unique within prison)"
          },
          "prisonId" : {
            "type" : "string",
            "description" : "prison id"
          },
          "isOpen" : {
            "type" : "boolean",
            "description" : "open or closed indicator"
          }
        },
        "required" : [ "isOpen", "nomisRoomDescription", "prisonId", "vsipId" ]
      },
      "Pageable" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PageVisitBalanceMappingDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisitBalanceMappingDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PageableObject" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "unpaged" : {
            "type" : "boolean"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SortObject" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        }
      },
      "CourtSentencingMigrationSummary" : {
        "type" : "object",
        "description" : "Record of Offender Court case migration",
        "properties" : {
          "offenderNo" : {
            "type" : "string",
            "description" : "The prisoner number for the set of mappings"
          },
          "mappingsCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Count of the number of court case mappings migrated"
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          },
          "migrationId" : {
            "type" : "string",
            "description" : "the migration the offender was migrated in"
          }
        },
        "required" : [ "mappingsCount", "offenderNo" ]
      },
      "PageCourtSentencingMigrationSummary" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CourtSentencingMigrationSummary"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "CourtAppearanceAllMappingDto" : {
        "type" : "object",
        "description" : "Court appearance mapping",
        "properties" : {
          "nomisCourtAppearanceId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS court appearance id",
            "example" : 123456
          },
          "dpsCourtAppearanceId" : {
            "type" : "string",
            "description" : "DPS court appearance id",
            "example" : 123456
          },
          "courtCharges" : {
            "type" : "array",
            "description" : "Court Charge mappings",
            "items" : {
              "$ref" : "#/components/schemas/CourtChargeMappingDto"
            }
          },
          "label" : {
            "type" : "string",
            "description" : "Label (a timestamp for migrated ids)",
            "maxLength" : 20,
            "minLength" : 0
          },
          "mappingType" : {
            "type" : "string",
            "default" : "DPS_CREATED",
            "description" : "Mapping type",
            "enum" : [ "MIGRATED", "DPS_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date-time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "courtCharges", "dpsCourtAppearanceId", "nomisCourtAppearanceId" ]
      },
      "PageOrganisationsMappingDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganisationsMappingDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "CorePersonPhoneMappingDto" : {
        "type" : "object",
        "properties" : {
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "cprPhoneType" : {
            "type" : "string",
            "description" : "CPR phone type",
            "enum" : [ "ADDRESS", "CORE_PERSON" ]
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "CPR_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "cprId", "cprPhoneType", "mappingType", "nomisId" ]
      },
      "CorePersonMappingDto" : {
        "type" : "object",
        "properties" : {
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "nomisPrisonNumber" : {
            "type" : "string",
            "description" : "NOMIS Prison number aka Offender number"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "CPR_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "cprId", "mappingType", "nomisPrisonNumber" ]
      },
      "PageCorePersonMappingDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorePersonMappingDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "CorePersonEmailAddressMappingDto" : {
        "type" : "object",
        "properties" : {
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "CPR_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "cprId", "mappingType", "nomisId" ]
      },
      "CorePersonAddressMappingDto" : {
        "type" : "object",
        "properties" : {
          "cprId" : {
            "type" : "string",
            "description" : "CPR id"
          },
          "nomisId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "NOMIS id"
          },
          "label" : {
            "type" : "string"
          },
          "mappingType" : {
            "type" : "string",
            "enum" : [ "MIGRATED", "CPR_CREATED", "NOMIS_CREATED" ]
          },
          "whenCreated" : {
            "type" : "string",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "cprId", "mappingType", "nomisId" ]
      },
      "PageContactPersonProfileDetailsMigrationMappingDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPersonProfileDetailsMigrationMappingDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PagePersonMappingDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonMappingDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "AllPrisonerCaseNoteMappingsDto" : {
        "type" : "object",
        "description" : "All mappings for a prisoner created either via migration or synchronisation",
        "properties" : {
          "mappings" : {
            "type" : "array",
            "description" : "Mappings",
            "items" : {
              "$ref" : "#/components/schemas/CaseNoteMappingDto"
            }
          }
        },
        "required" : [ "mappings" ]
      },
      "AllPrisonerAlertMappingsDto" : {
        "type" : "object",
        "description" : "All mappings for a prisoner created either via migration or synchronisation",
        "properties" : {
          "mappings" : {
            "type" : "array",
            "description" : "Mappings",
            "items" : {
              "$ref" : "#/components/schemas/AlertMappingDto"
            }
          }
        },
        "required" : [ "mappings" ]
      },
      "PagePrisonerAlertMappingsSummaryDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrisonerAlertMappingsSummaryDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PrisonerAlertMappingsSummaryDto" : {
        "type" : "object",
        "description" : "Summary of mappings for a prisoner created during migration",
        "properties" : {
          "offenderNo" : {
            "type" : "string",
            "description" : "The prisoner number for the set of mappings"
          },
          "mappingsCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Count of the number mappings migrated (does not include subsequent alerts synchronised"
          },
          "whenCreated" : {
            "type" : "string",
            "description" : "Date time the mapping was created",
            "example" : "2021-07-05T10:35:17",
            "pattern" : "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          }
        },
        "required" : [ "mappingsCount", "offenderNo" ]
      },
      "PageAlertMappingDto" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMappingDto"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearer-jwt" : {
        "type" : "http",
        "name" : "Authorization",
        "in" : "header",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}