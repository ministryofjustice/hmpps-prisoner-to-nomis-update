{
  "openapi": "3.0.1",
  "info": {
    "title": "HMPPS Manage Adjudications API",
    "description": "API for managing adjudications for prisoners",
    "contact": {
      "name": "Adjudications Support Team",
      "url": "https://github.com/ministryofjustice/hmpps-manage-adjudications-api",
      "email": "feedback@digital.justice.gov.uk"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit-0"
    },
    "version": "2023-09-01.7902.e116910"
  },
  "servers": [
    {
      "url": "/",
      "description": "Current url"
    }
  ],
  "security": [
    {
      "bearer-jwt": []
    }
  ],
  "tags": [
    {
      "name": "01. Adjudication Summary"
    },
    {
      "name": "10. Draft Adjudication Management",
      "description": "Draft Adjudications Management"
    },
    {
      "name": "11. Draft Adjudication Workflow",
      "description": "Draft Adjudications Workflow"
    },
    {
      "name": "12. Draft Damages",
      "description": "Draft Adjudications - Damages"
    },
    {
      "name": "13. Draft Evidence",
      "description": "Draft Adjudications - Evidence"
    },
    {
      "name": "14. Draft Witnesses",
      "description": "Draft Adjudications - Witnesses"
    },
    {
      "name": "15. Draft Offence",
      "description": "Draft Adjudications - Offence"
    },
    {
      "name": "20. Adjudication Management",
      "description": "Adjudication Management"
    },
    {
      "name": "21. Adjudication Workflow",
      "description": "Adjudication Workflow"
    },
    {
      "name": "22. Damages",
      "description": "Damages - Adjudications"
    },
    {
      "name": "23. Evidence",
      "description": "Evidence - Adjudications"
    },
    {
      "name": "24. Hearings",
      "description": "Hearings -  Adjudications"
    },
    {
      "name": "25. Witnesses",
      "description": "Witnesses - Adjudications"
    },
    {
      "name": "30. Punishments",
      "description": "Punishments - Adjudications"
    },
    {
      "name": "31. Outcomes",
      "description": "Outcomes - Adjudications"
    },
    {
      "name": "40. Reports",
      "description": "Reports - Adjudications"
    },
    {
      "name": "50. Schedule Tasks",
      "description": "Scheduled Tasks"
    }
  ],
  "paths": {
    "/reported-adjudications/{chargeNumber}/witnesses/edit": {
      "put": {
        "tags": [
          "25. Witnesses"
        ],
        "summary": "Updates the witnesses for the reported adjudication.",
        "description": "0 or more witnesses to be supplied, only updates records owned by current user",
        "operationId": "updateWitnesses",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WitnessesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/status": {
      "put": {
        "tags": [
          "20. Adjudication Management"
        ],
        "summary": "Set the status for the reported adjudication.",
        "operationId": "setStatus",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportedAdjudicationStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/punishments/v2": {
      "put": {
        "tags": [
          "30. Punishments"
        ],
        "summary": "updates a set of punishments",
        "operationId": "updateV2",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PunishmentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "30. Punishments"
        ],
        "operationId": "createV2",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PunishmentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/punishments/comment": {
      "put": {
        "tags": [
          "30. Punishments"
        ],
        "summary": "update punishment comment",
        "operationId": "updatePunishmentComment",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PunishmentCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Punishment comment updated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "30. Punishments"
        ],
        "summary": "create punishment comment",
        "operationId": "createPunishmentComment",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PunishmentCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Punishment comment created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/outcome": {
      "put": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "amend outcome without a hearing (refer police, not proceed or quashed), unless its a referral outcome - not proceed",
        "operationId": "amendOutcome",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmendOutcomeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "remove a not proceed without a referral outcome, or a quashed outcome",
        "operationId": "removeNotProceedWithoutReferralOrQuashed",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/issue": {
      "put": {
        "tags": [
          "20. Adjudication Management"
        ],
        "summary": "Issue DIS Form",
        "operationId": "setIssued",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/hearing/v2": {
      "put": {
        "tags": [
          "24. Hearings"
        ],
        "summary": "Amends latest hearing",
        "operationId": "amendHearing",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HearingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "24. Hearings"
        ],
        "summary": "Create a new hearing",
        "operationId": "createHearing",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HearingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Hearing created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "24. Hearings"
        ],
        "summary": "deletes latest hearing",
        "operationId": "deleteHearing",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/hearing/outcome/{status}/v2": {
      "put": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "amends a hearing outcome and associated outcome",
        "operationId": "amendHearingOutcomeV2",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "REJECTED",
                "AWAITING_REVIEW",
                "RETURNED",
                "UNSCHEDULED",
                "SCHEDULED",
                "REFER_POLICE",
                "REFER_INAD",
                "REFER_GOV",
                "PROSECUTION",
                "DISMISSED",
                "NOT_PROCEED",
                "ADJOURNED",
                "CHARGE_PROVED",
                "QUASHED"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmendHearingOutcomeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/evidence/edit": {
      "put": {
        "tags": [
          "23. Evidence"
        ],
        "summary": "Updates the evidence for the reported adjudication.",
        "description": "0 or more evidence to be supplied, only updates records owned by current user",
        "operationId": "updateEvidence",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvidenceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/damages/edit": {
      "put": {
        "tags": [
          "22. Damages"
        ],
        "summary": "Updates the damages for the reported adjudication.",
        "description": "0 or more damages to be supplied, only updates records owned by current user",
        "operationId": "updateDamages",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DamagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryDlq",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RetryDlqResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "purgeQueue",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/witnesses": {
      "put": {
        "tags": [
          "14. Draft Witnesses"
        ],
        "summary": "Set the witnesses for the draft adjudication.",
        "description": "0 or more witnesses to be supplied",
        "operationId": "setWitnesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WitnessesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/offence-details": {
      "put": {
        "tags": [
          "15. Draft Offence"
        ],
        "summary": "Set the offence details for the draft adjudication.",
        "description": "At least one set of offence details must be supplied",
        "operationId": "setOffenceDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OffenceDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/incident-statement": {
      "put": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Edit the incident statement for a draft adjudication.",
        "operationId": "editIncidentStatement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Add the incident statement to the draft adjudication.",
        "operationId": "addIncidentStatement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentStatementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Incident Statement Added",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/incident-role": {
      "put": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Edit the incident role for a draft adjudication.",
        "operationId": "editIncidentRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditIncidentRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/incident-details": {
      "put": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Edit the incident details for a draft adjudication.",
        "operationId": "editIncidentDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditIncidentDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/gender": {
      "put": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Set gender",
        "operationId": "setGender",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/evidence": {
      "put": {
        "tags": [
          "13. Draft Evidence"
        ],
        "summary": "Set the evidence for the draft adjudication.",
        "description": "0 or more evidence to be supplied",
        "operationId": "setEvidence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvidenceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/damages": {
      "put": {
        "tags": [
          "12. Draft Damages"
        ],
        "summary": "Set the damages for the draft adjudication.",
        "description": "0 or more damages to be supplied",
        "operationId": "setDamages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DamagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/associated-prisoner": {
      "put": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Set the associated prisoner for a draft adjudication.",
        "operationId": "setIncidentRoleAssociatedPrisoner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentRoleAssociatedPrisonerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/applicable-rules": {
      "put": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Set applicable rules for incident",
        "operationId": "setApplicableRules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicableRulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/outcome/refer-police": {
      "post": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "create a police refer outcome",
        "operationId": "createRefPolice",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Police Reference Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/outcome/refer-gov": {
      "post": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "create a referral outcome for refer gov",
        "operationId": "createReferGov",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Refer Gov Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/outcome/quashed": {
      "post": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "quash an outcome",
        "operationId": "createQuashed",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuashedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Outcome Quashed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/outcome/prosecution": {
      "post": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "create a prosecution outcome",
        "operationId": "createProsecution",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Prosecution Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/outcome/not-proceed": {
      "post": {
        "tags": [
          "31. Outcomes"
        ],
        "summary": "create a not proceed outcome - via referral or without hearing",
        "operationId": "createNotProceed",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotProceedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Not Proceeded Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/hearing/outcome/referral": {
      "post": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "create a referral for latest hearing",
        "operationId": "createReferral",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Referral Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/hearing/outcome/adjourn": {
      "post": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "create a adjourn for latest hearing",
        "operationId": "createAdjourn",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjournRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Adjourn Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "removes the adjourn outcome",
        "operationId": "removeAdjourn",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/create-draft-adjudication": {
      "post": {
        "tags": [
          "21. Adjudication Workflow"
        ],
        "summary": "Creates a draft adjudication from the reported adjudication with the given number.",
        "operationId": "createDraftAdjudication",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Draft Adjudication report created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/complete-hearing/not-proceed": {
      "post": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "create a not proceed from hearing outcome",
        "operationId": "createNotProceedFromHearing",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HearingCompletedNotProceedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Not Proceeded Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/complete-hearing/dismissed": {
      "post": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "create a dismissed from hearing outcome",
        "operationId": "createDismissed",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HearingCompletedDismissedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Charge Dismissed Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/complete-hearing/charge-proved/v2": {
      "post": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "operationId": "createChargeProvedFromHearingV2",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HearingCompletedChargeProvedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/migrate": {
      "post": {
        "tags": [
          "99. Migrate"
        ],
        "summary": "migrates a record into the adjudication service",
        "operationId": "migrate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjudicationMigrateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Adjudication successfully migrated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateResponse"
                }
              }
            }
          },
          "409": {
            "description": "Adjudication failed to update existing record",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateResponse"
                }
              }
            }
          },
          "422": {
            "description": "unable to migrate record",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications": {
      "post": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Starts a new draft adjudication.",
        "operationId": "startNewAdjudication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAdjudicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New Adjudication Started",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/complete-draft-adjudication": {
      "post": {
        "tags": [
          "11. Draft Adjudication Workflow"
        ],
        "summary": "Submits the draft adjudication to Prison-API, creates a submitted adjudication record and removes the draft adjudication.",
        "operationId": "completeDraftAdjudication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Draft Adjudication Completed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationDto"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}/alo-offence-details": {
      "post": {
        "tags": [
          "11. Draft Adjudication Workflow"
        ],
        "summary": "Submits updated offence details and completes report.  Used by ALO when they need to amend offence details for submitted reports only",
        "operationId": "aloOffenceUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OffenceDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reported adjudication",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationDto"
                }
              }
            }
          },
          "415": {
            "description": "Not able to process the request because the payload is in a format not supported by this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/v2": {
      "get": {
        "tags": [
          "20. Adjudication Management"
        ],
        "operationId": "getReportedAdjudicationDetailsV2",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/reports": {
      "get": {
        "tags": [
          "40. Reports"
        ],
        "summary": "Get all reported adjudications for caseload",
        "operationId": "getReportedAdjudications",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "optional inclusive start date for results, default is today - 3 days",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "optional inclusive end date for results, default is today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "list of status filter for reports",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "REJECTED",
                  "AWAITING_REVIEW",
                  "RETURNED",
                  "UNSCHEDULED",
                  "SCHEDULED",
                  "REFER_POLICE",
                  "REFER_INAD",
                  "REFER_GOV",
                  "PROSECUTION",
                  "DISMISSED",
                  "NOT_PROCEED",
                  "ADJOURNED",
                  "CHARGE_PROVED",
                  "QUASHED"
                ]
              }
            }
          },
          {
            "name": "transfersOnly",
            "in": "query",
            "description": "optional filter for transferred reports only",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N). Default 0, e.g. the first page"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page. Default 20"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort as combined comma separated property and uppercase direction. Multiple sort params allowed to sort by multiple properties. Default to dateTimeOfDiscovery DESC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageReportedAdjudicationDto"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/report-counts": {
      "get": {
        "tags": [
          "40. Reports"
        ],
        "summary": "Get report counts by agency",
        "operationId": "getReportCounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyReportCountsDto"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/punishments/{prisonerNumber}/suspended": {
      "get": {
        "tags": [
          "30. Punishments"
        ],
        "summary": "get a list of suspended punishments by prisoner",
        "operationId": "getSuspendedPunishments",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuspendedPunishmentDto"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/punishments/{prisonerNumber}/for-consecutive": {
      "get": {
        "tags": [
          "30. Punishments"
        ],
        "summary": "get a list of active additional days reports by prisoner for a consecutive punishment",
        "operationId": "getActiveAdditionalDaysReports",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PRIVILEGE",
                "EARNINGS",
                "CONFINEMENT",
                "REMOVAL_ACTIVITY",
                "EXCLUSION_WORK",
                "EXTRA_WORK",
                "REMOVAL_WING",
                "ADDITIONAL_DAYS",
                "PROSPECTIVE_DAYS",
                "CAUTION",
                "DAMAGES_OWED"
              ]
            }
          },
          {
            "name": "chargeNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalDaysDto"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/my-reports": {
      "get": {
        "tags": [
          "40. Reports"
        ],
        "summary": "Get my reported adjudications for caseload",
        "operationId": "getMyReportedAdjudications",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "optional inclusive start date for results, default is today - 3 days",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "optional inclusive end date for results, default is today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "list of status filter for reports",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "REJECTED",
                  "AWAITING_REVIEW",
                  "RETURNED",
                  "UNSCHEDULED",
                  "SCHEDULED",
                  "REFER_POLICE",
                  "REFER_INAD",
                  "REFER_GOV",
                  "PROSECUTION",
                  "DISMISSED",
                  "NOT_PROCEED",
                  "ADJOURNED",
                  "CHARGE_PROVED",
                  "QUASHED"
                ]
              }
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N). Default 0, e.g. the first page",
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page. Default 20"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort as combined comma separated property and uppercase direction. Multiple sort params allowed to sort by multiple properties. Default to dateTimeOfDiscovery DESC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageReportedAdjudicationDto"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/hearings": {
      "get": {
        "tags": [
          "24. Hearings"
        ],
        "summary": "Get a list of hearings for a given date and agency",
        "operationId": "getAllHearingsByAgencyAndDate",
        "parameters": [
          {
            "name": "hearingDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HearingSummaryResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/for-print": {
      "get": {
        "tags": [
          "40. Reports"
        ],
        "summary": "Get all reported adjudications for print",
        "operationId": "getReportedAdjudicationsForPrint",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "optional inclusive hearing start date for results, default is today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "optional inclusive hearing end date for results, default is today + 2",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "issueStatus",
            "in": "query",
            "description": "list of issue status, as comma separated String",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ISSUED",
                  "NOT_ISSUED"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IssuableAdjudicationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/for-issue": {
      "get": {
        "tags": [
          "40. Reports"
        ],
        "summary": "Get all reported adjudications for issue",
        "operationId": "getReportedAdjudicationsForIssue",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "optional inclusive start date for results, default is today - 2 days",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "optional inclusive end date for results, default is today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IssuableAdjudicationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "getDlqMessages",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxMessages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetDlqResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/{id}": {
      "get": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Returns the draft adjudication details.",
        "operationId": "getDraftAdjudicationDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DraftAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Delete by Id. Only owner can delete.",
        "operationId": "deleteDraftAdjudication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/offence-rule/{offenceCode}": {
      "get": {
        "tags": [
          "15. Draft Offence"
        ],
        "summary": "Returns details of the offence rule relating to this offence code.",
        "operationId": "getOffenceRule",
        "parameters": [
          {
            "name": "offenceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "youthOffender",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MALE",
                "FEMALE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OffenceRuleDetailsDto"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/draft-adjudications/my-reports": {
      "get": {
        "tags": [
          "10. Draft Adjudication Management"
        ],
        "summary": "Returns all the in progress draft adjudications created by the current user",
        "operationId": "getCurrentUsersInProgressDraftAdjudications",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "optional inclusive start date for results, default is today - 3 days",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "optional inclusive end date for results, default is today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N). Default 0, e.g. the first page",
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page. Default 20"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort as combined comma separated property and uppercase direction. Multiple sort params allowed to sort by multiple properties. Default to dateTimeOfDiscovery,DESC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDraftAdjudicationDto"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/adjudications/{prisonerNumber}/charge/{chargeId}": {
      "get": {
        "tags": [
          "01. Adjudication Summary"
        ],
        "summary": "Return a specific adjudication for a prisoner reference by charge ID",
        "operationId": "getAdjudication",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "prisonerNumber",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "chargeId",
            "in": "path",
            "description": "chargeId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adjudication returned",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualAdjudication"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/adjudications/{prisonerNumber}/adjudications": {
      "get": {
        "tags": [
          "01. Adjudication Summary"
        ],
        "summary": "Return a list of adjudications for a given prisoner",
        "operationId": "getAdjudicationsByPrisonerNumber",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "prisonerNumber",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "offenceId",
            "in": "query",
            "description": "An offence id to allow optionally filtering by type of offence",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "agencyId",
            "in": "query",
            "description": "An agency id to allow optionally filtering by the prison in which the offence occurred",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finding",
            "in": "query",
            "description": "Finding code to allow optionally filtering by type of finding",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "APPEAL",
                "D",
                "DISMISSED",
                "GUILTY",
                "NOT_GUILTY",
                "NOT_PROCEED",
                "NOT_PROVEN",
                "PROSECUTED",
                "PROVED",
                "QUASHED",
                "REFUSED",
                "REF_POLICE",
                "S",
                "UNFIT"
              ]
            },
            "example": "NOT_PROVEN"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Adjudications must have been reported on or after this date (in YYYY-MM-DD format).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Adjudications must have been reported on or before this date (in YYYY-MM-DD format).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adjudications returned",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdjudicationSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/adjudications/by-booking-id/{bookingId}": {
      "get": {
        "tags": [
          "01. Adjudication Summary"
        ],
        "summary": "Offender adjudications summary (awards and sanctions).",
        "description": "Offender adjudications (awards and sanctions).",
        "operationId": "getAdjudicationSummary",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "The prisoner booking id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "awardCutoffDate",
            "in": "query",
            "description": "Only awards ending on or after this date (in YYYY-MM-DD format) will be considered.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "adjudicationCutoffDate",
            "in": "query",
            "description": "Only proved adjudications ending on or after this date (in YYYY-MM-DD format) will be counted.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adjudication returned",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdjudicationSummary"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/remove-referral": {
      "delete": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "remove a referral",
        "operationId": "removeReferral",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/remove-completed-hearing": {
      "delete": {
        "tags": [
          "26. Hearing outcomes"
        ],
        "summary": "remove a completed hearing outcome",
        "operationId": "removeCompletedHearingOutcome",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/{chargeNumber}/punishments/comment/{punishmentCommentId}": {
      "delete": {
        "tags": [
          "30. Punishments"
        ],
        "summary": "delete punishment comment",
        "operationId": "deletePunishmentComment",
        "parameters": [
          {
            "name": "chargeNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "punishmentCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Punishment comment deleted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportedAdjudicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    },
    "/reported-adjudications/migrate/reset": {
      "delete": {
        "tags": [
          "99. Migrate"
        ],
        "summary": "resets the migration and removes all migrated records from database",
        "operationId": "reset",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not able to process the request because the header “Accept” does not match with any of the content types this endpoint can handle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "Active-Caseload",
          "in": "header",
          "description": "Current Caseload for request",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "MDI"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "WitnessRequestItem": {
        "required": [
          "code",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The witness code",
            "example": "PRISON_OFFICER",
            "enum": [
              "OFFICER",
              "STAFF",
              "OTHER_PERSON",
              "VICTIM",
              "PRISONER"
            ]
          },
          "firstName": {
            "type": "string",
            "description": "Witness first name",
            "example": "Fred"
          },
          "lastName": {
            "type": "string",
            "description": "Witness last name",
            "example": "Kruger"
          },
          "reporter": {
            "type": "string",
            "description": "optional reporter as per token, used when editing",
            "example": "A_USER"
          },
          "username": {
            "type": "string",
            "description": "username"
          }
        },
        "additionalProperties": false,
        "description": "Details of Witness"
      },
      "WitnessesRequest": {
        "required": [
          "witnesses"
        ],
        "type": "object",
        "properties": {
          "witnesses": {
            "type": "array",
            "description": "The details of all evidence",
            "items": {
              "$ref": "#/components/schemas/WitnessRequestItem"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request to update the list of witnesses for a draft adjudication"
      },
      "CombinedOutcomeDto": {
        "required": [
          "outcome"
        ],
        "type": "object",
        "properties": {
          "outcome": {
            "$ref": "#/components/schemas/OutcomeDto"
          },
          "referralOutcome": {
            "$ref": "#/components/schemas/OutcomeDto"
          }
        },
        "additionalProperties": false,
        "description": "Combined Outcome - currently to support referral but maybe expanded once awards are added"
      },
      "DisIssueHistoryDto": {
        "required": [
          "dateTimeOfIssue",
          "issuingOfficer"
        ],
        "type": "object",
        "properties": {
          "issuingOfficer": {
            "type": "string",
            "description": "Previous issuing officer"
          },
          "dateTimeOfIssue": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Previous date time of form issued",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "Previous DIS1/2 issues"
      },
      "HearingDto": {
        "required": [
          "agencyId",
          "dateTimeOfHearing",
          "locationId",
          "oicHearingType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the hearing",
            "format": "int64"
          },
          "locationId": {
            "type": "integer",
            "description": "The id of the location of the hearing",
            "format": "int64"
          },
          "dateTimeOfHearing": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the hearing will take place",
            "example": "2021-07-05T10:35:17"
          },
          "oicHearingType": {
            "type": "string",
            "description": "oic hearing type",
            "enum": [
              "GOV_ADULT",
              "GOV_YOI",
              "INAD_YOI",
              "GOV",
              "INAD_ADULT"
            ]
          },
          "outcome": {
            "$ref": "#/components/schemas/HearingOutcomeDto"
          },
          "agencyId": {
            "type": "string",
            "description": "agency id of hearing"
          }
        },
        "additionalProperties": false,
        "description": "Hearing"
      },
      "HearingOutcomeDto": {
        "required": [
          "adjudicator",
          "code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the hearing outcome",
            "format": "int64"
          },
          "adjudicator": {
            "type": "string",
            "description": "adjudicator of hearing"
          },
          "code": {
            "type": "string",
            "description": "the hearing outcome code",
            "enum": [
              "COMPLETE",
              "REFER_POLICE",
              "REFER_INAD",
              "ADJOURN",
              "NOMIS",
              "REFER_GOV"
            ]
          },
          "reason": {
            "type": "string",
            "description": "reason for outcome",
            "enum": [
              "LEGAL_ADVICE",
              "LEGAL_REPRESENTATION",
              "RO_ATTEND",
              "HELP",
              "UNFIT",
              "WITNESS",
              "WITNESS_SUPPORT",
              "MCKENZIE",
              "EVIDENCE",
              "INVESTIGATION",
              "OTHER"
            ]
          },
          "details": {
            "type": "string",
            "description": "details of outcome"
          },
          "plea": {
            "type": "string",
            "description": "hearing outcome plea",
            "enum": [
              "UNFIT",
              "ABSTAIN",
              "GUILTY",
              "NOT_GUILTY",
              "NOT_ASKED"
            ]
          }
        },
        "additionalProperties": false,
        "description": "hearing outcome"
      },
      "IncidentDetailsDto": {
        "required": [
          "dateTimeOfDiscovery",
          "dateTimeOfIncident",
          "handoverDeadline",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "The id of the location the incident took place",
            "format": "int64"
          },
          "dateTimeOfIncident": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the incident occurred",
            "example": "2021-07-05T10:35:17"
          },
          "dateTimeOfDiscovery": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date time if discovery date different to incident date",
            "example": "2021-07-05T10:35:17"
          },
          "handoverDeadline": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When this report must be handed to the prisoner",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "Incident details"
      },
      "IncidentRoleDto": {
        "type": "object",
        "properties": {
          "roleCode": {
            "type": "string",
            "description": "The incident role code, If not set then it is assumed they committed the offence on their own",
            "example": "25a"
          },
          "offenceRule": {
            "$ref": "#/components/schemas/OffenceRuleDetailsDto"
          },
          "associatedPrisonersNumber": {
            "type": "string",
            "description": "The prison number of the other prisoner involved in the incident, This only applies to role codes 25b and 25c",
            "example": "G2996UX"
          },
          "associatedPrisonersName": {
            "type": "string",
            "description": "The name of the other prisoner involved in the incident, This only applies when the prisoner is from outside the establishment",
            "example": "G2996UX"
          }
        },
        "additionalProperties": false,
        "description": "Incident Role"
      },
      "IncidentStatementDto": {
        "required": [
          "statement"
        ],
        "type": "object",
        "properties": {
          "statement": {
            "type": "string",
            "description": "The statement regarding the incident"
          },
          "completed": {
            "type": "boolean",
            "description": "Indicates when the statement is complete"
          }
        },
        "additionalProperties": false,
        "description": "Incident statement"
      },
      "OffenceDto": {
        "required": [
          "offenceCode",
          "offenceRule"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "type": "integer",
            "description": "The offence code",
            "format": "int32",
            "example": 3
          },
          "offenceRule": {
            "$ref": "#/components/schemas/OffenceRuleDto"
          },
          "victimPrisonersNumber": {
            "type": "string",
            "description": "The prison number of the victim involved in the incident, if relevant",
            "example": "G2996UX"
          },
          "victimStaffUsername": {
            "type": "string",
            "description": "The username of the member of staff who is a victim of the incident, if relevant",
            "example": "ABC12D"
          },
          "victimOtherPersonsName": {
            "type": "string",
            "description": "The name of the victim (who is not a member of staff or a prisoner) involved in the incident, if relevant",
            "example": "Bob Hope"
          }
        },
        "additionalProperties": false,
        "description": "Details of an offence"
      },
      "OffenceRuleDetailsDto": {
        "required": [
          "paragraphDescription",
          "paragraphNumber"
        ],
        "type": "object",
        "properties": {
          "paragraphNumber": {
            "type": "string",
            "description": "The paragraph number relating to the offence rule they have been alleged to have broken",
            "example": "25(a)"
          },
          "paragraphDescription": {
            "type": "string",
            "description": "The name relating to the paragraph description",
            "example": "Committed an assault"
          }
        },
        "additionalProperties": false,
        "description": "Details of a rule they have broken"
      },
      "OffenceRuleDto": {
        "required": [
          "paragraphDescription",
          "paragraphNumber"
        ],
        "type": "object",
        "properties": {
          "paragraphNumber": {
            "type": "string",
            "description": "The paragraph number relating to the offence rule they have been alleged to have broken",
            "example": "25(a)"
          },
          "paragraphDescription": {
            "type": "string",
            "description": "The name relating to the paragraph description",
            "example": "Committed an assault"
          },
          "nomisCode": {
            "type": "string",
            "description": "nomis code - not set if migrated data"
          },
          "withOthersNomisCode": {
            "type": "string",
            "description": "with others nomis code, not set if migrated data"
          }
        },
        "additionalProperties": false,
        "description": "Details of a rule they have broken"
      },
      "OutcomeDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the outcome",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "outcome code",
            "enum": [
              "REFER_POLICE",
              "REFER_INAD",
              "REFER_GOV",
              "NOT_PROCEED",
              "DISMISSED",
              "PROSECUTION",
              "SCHEDULE_HEARING",
              "CHARGE_PROVED",
              "QUASHED"
            ]
          },
          "details": {
            "type": "string",
            "description": "optional details"
          },
          "reason": {
            "type": "string",
            "description": "optional not proceeded with reason",
            "enum": [
              "ANOTHER_WAY",
              "RELEASED",
              "WITNESS_NOT_ATTEND",
              "UNFIT",
              "FLAWED",
              "EXPIRED_NOTICE",
              "EXPIRED_HEARING",
              "NOT_FAIR",
              "OTHER"
            ]
          },
          "quashedReason": {
            "type": "string",
            "description": "optional quashed reason",
            "enum": [
              "FLAWED_CASE",
              "JUDICIAL_REVIEW",
              "APPEAL_UPHELD",
              "OTHER"
            ]
          }
        },
        "additionalProperties": false,
        "description": "the optional referral outcome"
      },
      "OutcomeHistoryDto": {
        "type": "object",
        "properties": {
          "hearing": {
            "$ref": "#/components/schemas/HearingDto"
          },
          "outcome": {
            "$ref": "#/components/schemas/CombinedOutcomeDto"
          }
        },
        "additionalProperties": false,
        "description": "Hearings, hearing outcomes, referrals and outcomes in chronological order"
      },
      "PunishmentCommentDto": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "punishment comment id used for edit and delete",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "description": "comment on punishment"
          },
          "reasonForChange": {
            "type": "string",
            "description": "punishment reason for change",
            "enum": [
              "APPEAL",
              "CORRECTION",
              "OTHER",
              "GOV_OR_DIRECTOR"
            ]
          },
          "createdByUserId": {
            "type": "string",
            "description": "username of the person created or updated the comment"
          },
          "dateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date and time comment was created or updated",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "punishment comment"
      },
      "PunishmentDto": {
        "required": [
          "schedule",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "punishment id used for edit and delete",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "punishment type",
            "enum": [
              "PRIVILEGE",
              "EARNINGS",
              "CONFINEMENT",
              "REMOVAL_ACTIVITY",
              "EXCLUSION_WORK",
              "EXTRA_WORK",
              "REMOVAL_WING",
              "ADDITIONAL_DAYS",
              "PROSPECTIVE_DAYS",
              "CAUTION",
              "DAMAGES_OWED"
            ]
          },
          "privilegeType": {
            "type": "string",
            "description": "optional privilege type",
            "enum": [
              "CANTEEN",
              "FACILITIES",
              "MONEY",
              "TV",
              "ASSOCIATION",
              "OTHER"
            ]
          },
          "otherPrivilege": {
            "type": "string",
            "description": "optional other privilege type"
          },
          "stoppagePercentage": {
            "type": "integer",
            "description": "optional stoppage of earnings percentage",
            "format": "int32"
          },
          "activatedBy": {
            "type": "string",
            "description": "optional activated by report number"
          },
          "activatedFrom": {
            "type": "string",
            "description": "optional activated from report number"
          },
          "schedule": {
            "$ref": "#/components/schemas/PunishmentScheduleDto"
          },
          "consecutiveChargeNumber": {
            "type": "string",
            "description": "optional consecutive charge number"
          },
          "consecutiveReportAvailable": {
            "type": "boolean",
            "description": "optional consecutive report number is available to view in adjudications service"
          },
          "damagesOwedAmount": {
            "type": "number",
            "description": "optional amount - money being recovered for damages",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "punishment"
      },
      "PunishmentScheduleDto": {
        "required": [
          "days"
        ],
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "description": "days punishment will last",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "optional start date of punishment",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "optional end date of punishment",
            "format": "date"
          },
          "suspendedUntil": {
            "type": "string",
            "description": "optional punishment suspended until date",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "punishment schedule"
      },
      "ReportedAdjudicationDto": {
        "required": [
          "chargeNumber",
          "createdByUserId",
          "createdDateTime",
          "damages",
          "disIssueHistory",
          "evidence",
          "gender",
          "hearings",
          "incidentDetails",
          "incidentRole",
          "incidentStatement",
          "isYouthOffender",
          "offenceDetails",
          "originatingAgencyId",
          "outcomeEnteredInNomis",
          "outcomes",
          "prisonerNumber",
          "punishmentComments",
          "punishments",
          "status",
          "witnesses"
        ],
        "type": "object",
        "properties": {
          "chargeNumber": {
            "type": "string",
            "description": "The charge number for the reported adjudication"
          },
          "prisonerNumber": {
            "type": "string",
            "description": "Prison number assigned to a prisoner",
            "example": "G2996UX"
          },
          "gender": {
            "type": "string",
            "description": "Gender applied for adjudication rules",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "incidentDetails": {
            "$ref": "#/components/schemas/IncidentDetailsDto"
          },
          "isYouthOffender": {
            "type": "boolean",
            "description": "Is classified as a youth offender"
          },
          "incidentRole": {
            "$ref": "#/components/schemas/IncidentRoleDto"
          },
          "offenceDetails": {
            "$ref": "#/components/schemas/OffenceDto"
          },
          "incidentStatement": {
            "$ref": "#/components/schemas/IncidentStatementDto"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user id"
          },
          "createdDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the report was created",
            "example": "2021-07-05T10:35:17"
          },
          "status": {
            "type": "string",
            "description": "The status of the reported adjudication",
            "enum": [
              "ACCEPTED",
              "REJECTED",
              "AWAITING_REVIEW",
              "RETURNED",
              "UNSCHEDULED",
              "SCHEDULED",
              "REFER_POLICE",
              "REFER_INAD",
              "REFER_GOV",
              "PROSECUTION",
              "DISMISSED",
              "NOT_PROCEED",
              "ADJOURNED",
              "CHARGE_PROVED",
              "QUASHED"
            ]
          },
          "reviewedByUserId": {
            "type": "string",
            "description": "Reviewed by user id"
          },
          "statusReason": {
            "type": "string",
            "description": "The reason for the status of the reported adjudication"
          },
          "statusDetails": {
            "type": "string",
            "description": "The name for the status of the reported adjudication"
          },
          "damages": {
            "type": "array",
            "description": "Damages related to incident",
            "items": {
              "$ref": "#/components/schemas/ReportedDamageDto"
            }
          },
          "evidence": {
            "type": "array",
            "description": "Evidence related to incident",
            "items": {
              "$ref": "#/components/schemas/ReportedEvidenceDto"
            }
          },
          "witnesses": {
            "type": "array",
            "description": "Witnesses related to incident",
            "items": {
              "$ref": "#/components/schemas/ReportedWitnessDto"
            }
          },
          "hearings": {
            "type": "array",
            "description": "Hearings related to adjudication",
            "items": {
              "$ref": "#/components/schemas/HearingDto"
            }
          },
          "issuingOfficer": {
            "type": "string",
            "description": "The last issuing officer"
          },
          "dateTimeOfIssue": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The last date time of form issued",
            "example": "2021-07-05T10:35:17"
          },
          "disIssueHistory": {
            "type": "array",
            "description": "Previous DIS1/2 issues",
            "items": {
              "$ref": "#/components/schemas/DisIssueHistoryDto"
            }
          },
          "dateTimeOfFirstHearing": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date time of first hearing",
            "example": "2021-07-05T10:35:17"
          },
          "outcomes": {
            "type": "array",
            "description": "Hearings, hearing outcomes, referrals and outcomes in chronological order",
            "items": {
              "$ref": "#/components/schemas/OutcomeHistoryDto"
            }
          },
          "punishments": {
            "type": "array",
            "description": "punishments",
            "items": {
              "$ref": "#/components/schemas/PunishmentDto"
            }
          },
          "punishmentComments": {
            "type": "array",
            "description": "punishments",
            "items": {
              "$ref": "#/components/schemas/PunishmentCommentDto"
            }
          },
          "outcomeEnteredInNomis": {
            "type": "boolean",
            "description": "flag to indicate a hearing outcome was entered in NOMIS"
          },
          "overrideAgencyId": {
            "type": "string",
            "description": "optional override agency id"
          },
          "originatingAgencyId": {
            "type": "string",
            "description": "agency id where report was created"
          },
          "transferableActionsAllowed": {
            "type": "boolean",
            "description": "optional actions flag to indicate if an ALO can carry out actions against a transferable adjudication, null if not transferable"
          },
          "hearingIdActioned": {
            "type": "integer",
            "description": "hearing id action carried out on",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Reported adjudication details"
      },
      "ReportedAdjudicationResponse": {
        "required": [
          "reportedAdjudication"
        ],
        "type": "object",
        "properties": {
          "reportedAdjudication": {
            "$ref": "#/components/schemas/ReportedAdjudicationDto"
          }
        },
        "additionalProperties": false,
        "description": "Reported adjudication response"
      },
      "ReportedDamageDto": {
        "required": [
          "code",
          "details",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The damage code based on an enum for defined damages",
            "example": "CLEANING",
            "enum": [
              "ELECTRICAL_REPAIR",
              "PLUMBING_REPAIR",
              "FURNITURE_OR_FABRIC_REPAIR",
              "LOCK_REPAIR",
              "REDECORATION",
              "CLEANING",
              "REPLACE_AN_ITEM"
            ]
          },
          "details": {
            "type": "string",
            "description": "The details of the damage",
            "example": "the kettle was broken"
          },
          "reporter": {
            "type": "string",
            "description": "The username of the person who added this record",
            "example": "ABC12D"
          }
        },
        "additionalProperties": false,
        "description": "Reported damages"
      },
      "ReportedEvidenceDto": {
        "required": [
          "code",
          "details",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The evidence code based on an enum for defined evidence",
            "example": "PHOTO",
            "enum": [
              "PHOTO",
              "BODY_WORN_CAMERA",
              "CCTV",
              "BAGGED_AND_TAGGED",
              "OTHER"
            ]
          },
          "identifier": {
            "type": "string",
            "description": "Evidence identifier",
            "example": "Tag number or Camera number"
          },
          "details": {
            "type": "string",
            "description": "The details of the evidence",
            "example": "ie what does the photo describe"
          },
          "reporter": {
            "type": "string",
            "description": "The username of the person who added this record",
            "example": "ABC12D"
          }
        },
        "additionalProperties": false,
        "description": "Reported evidence"
      },
      "ReportedWitnessDto": {
        "required": [
          "code",
          "firstName",
          "lastName",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The witness code based on an enum for defined witness",
            "example": "PRISON_OFFICER",
            "enum": [
              "OFFICER",
              "STAFF",
              "OTHER_PERSON",
              "VICTIM",
              "PRISONER"
            ]
          },
          "firstName": {
            "type": "string",
            "description": "Witness first name",
            "example": "Fred"
          },
          "lastName": {
            "type": "string",
            "description": "Witness last name",
            "example": "Kruger"
          },
          "reporter": {
            "type": "string",
            "description": "The username of the person who added this record",
            "example": "ABC12D"
          }
        },
        "additionalProperties": false,
        "description": "Reported witness"
      },
      "ReportedAdjudicationStatusRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status to set the reported adjudication to",
            "enum": [
              "ACCEPTED",
              "REJECTED",
              "AWAITING_REVIEW",
              "RETURNED",
              "UNSCHEDULED",
              "SCHEDULED",
              "REFER_POLICE",
              "REFER_INAD",
              "REFER_GOV",
              "PROSECUTION",
              "DISMISSED",
              "NOT_PROCEED",
              "ADJOURNED",
              "CHARGE_PROVED",
              "QUASHED"
            ]
          },
          "statusReason": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "The reason the status has been set"
          },
          "statusDetails": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "Details of why the status has been set"
          }
        },
        "additionalProperties": false,
        "description": "Request to set the state for an a reported adjudication"
      },
      "PunishmentRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id of punishment",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "punishment type",
            "enum": [
              "PRIVILEGE",
              "EARNINGS",
              "CONFINEMENT",
              "REMOVAL_ACTIVITY",
              "EXCLUSION_WORK",
              "EXTRA_WORK",
              "REMOVAL_WING",
              "ADDITIONAL_DAYS",
              "PROSPECTIVE_DAYS",
              "CAUTION",
              "DAMAGES_OWED"
            ]
          },
          "privilegeType": {
            "type": "string",
            "description": "privilege type - only use if punishment type is PRIVILEGE",
            "enum": [
              "CANTEEN",
              "FACILITIES",
              "MONEY",
              "TV",
              "ASSOCIATION",
              "OTHER"
            ]
          },
          "otherPrivilege": {
            "type": "string",
            "description": "other privilege type - only use if privilege type is OTHER"
          },
          "stoppagePercentage": {
            "type": "integer",
            "description": "stoppage percentage - use if punishment type is EARNINGS",
            "format": "int32"
          },
          "days": {
            "type": "integer",
            "description": "days punishment to last",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "punishment start date, required if punishment is not suspended",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "punishment end date, required if punishment is not suspended",
            "format": "date"
          },
          "suspendedUntil": {
            "type": "string",
            "description": "punishment suspended until date, required if punishment is suspended",
            "format": "date"
          },
          "activatedFrom": {
            "type": "string",
            "description": "optional activated from report number"
          },
          "consecutiveReportNumber": {
            "type": "string",
            "description": "optional consecutive report number"
          },
          "damagesOwedAmount": {
            "type": "number",
            "description": "optional amount - money being recovered for damages - only use if type is DAMAGED_OWED",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "punishment request"
      },
      "PunishmentsRequest": {
        "required": [
          "punishments"
        ],
        "type": "object",
        "properties": {
          "punishments": {
            "type": "array",
            "description": "list of punishments",
            "items": {
              "$ref": "#/components/schemas/PunishmentRequest"
            }
          }
        },
        "additionalProperties": false,
        "description": "punishments request"
      },
      "ErrorResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of Error",
            "format": "int32",
            "example": 500
          },
          "errorCode": {
            "type": "integer",
            "description": "Error Code",
            "format": "int32",
            "example": 500
          },
          "userMessage": {
            "maxLength": 200,
            "pattern": "^[a-zA-Z\\d. _-]{1,200}$",
            "type": "string",
            "description": "User Message of error",
            "example": "Bad Data"
          },
          "developerMessage": {
            "maxLength": 4000,
            "pattern": "^[a-zA-Z\\d. _-]*$",
            "type": "string",
            "description": "More detailed error message",
            "example": "This is a stack trace"
          },
          "moreInfo": {
            "maxLength": 4000,
            "pattern": "^[a-zA-Z\\d. _-]*$",
            "type": "string",
            "description": "More information about the error",
            "example": "More info"
          }
        },
        "additionalProperties": false,
        "description": "Error Response"
      },
      "PunishmentCommentRequest": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id of punishment comment",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "description": "punishment comment"
          },
          "reasonForChange": {
            "type": "string",
            "description": "punishment reason for change",
            "enum": [
              "APPEAL",
              "CORRECTION",
              "OTHER",
              "GOV_OR_DIRECTOR"
            ]
          }
        },
        "additionalProperties": false,
        "description": "punishment comment request"
      },
      "AmendOutcomeRequest": {
        "required": [
          "details"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "details"
          },
          "reason": {
            "type": "string",
            "description": "not proceed reason",
            "enum": [
              "ANOTHER_WAY",
              "RELEASED",
              "WITNESS_NOT_ATTEND",
              "UNFIT",
              "FLAWED",
              "EXPIRED_NOTICE",
              "EXPIRED_HEARING",
              "NOT_FAIR",
              "OTHER"
            ]
          },
          "quashedReason": {
            "type": "string",
            "description": "quashed reason",
            "enum": [
              "FLAWED_CASE",
              "JUDICIAL_REVIEW",
              "APPEAL_UPHELD",
              "OTHER"
            ]
          }
        },
        "additionalProperties": false,
        "description": "amend outcome without a hearing - NOT PROCEED, REFER POLICE, QUASHED"
      },
      "IssueRequest": {
        "required": [
          "dateTimeOfIssue"
        ],
        "type": "object",
        "properties": {
          "dateTimeOfIssue": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date time of issue",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "Request to issue a DIS"
      },
      "HearingRequest": {
        "required": [
          "dateTimeOfHearing",
          "locationId",
          "oicHearingType"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "The id of the location of the hearing",
            "format": "int64"
          },
          "dateTimeOfHearing": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time of the hearing",
            "example": "2021-07-05T10:35:17"
          },
          "oicHearingType": {
            "type": "string",
            "description": "oic hearing type",
            "enum": [
              "GOV_ADULT",
              "GOV_YOI",
              "INAD_YOI",
              "GOV",
              "INAD_ADULT"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request to add a hearing"
      },
      "AmendHearingOutcomeRequest": {
        "type": "object",
        "properties": {
          "adjudicator": {
            "type": "string",
            "description": "the name of the adjudicator"
          },
          "adjournReason": {
            "type": "string",
            "description": "the adjourn reason",
            "enum": [
              "LEGAL_ADVICE",
              "LEGAL_REPRESENTATION",
              "RO_ATTEND",
              "HELP",
              "UNFIT",
              "WITNESS",
              "WITNESS_SUPPORT",
              "MCKENZIE",
              "EVIDENCE",
              "INVESTIGATION",
              "OTHER"
            ]
          },
          "notProceedReason": {
            "type": "string",
            "description": "not proceed reason",
            "enum": [
              "ANOTHER_WAY",
              "RELEASED",
              "WITNESS_NOT_ATTEND",
              "UNFIT",
              "FLAWED",
              "EXPIRED_NOTICE",
              "EXPIRED_HEARING",
              "NOT_FAIR",
              "OTHER"
            ]
          },
          "details": {
            "type": "string",
            "description": "details"
          },
          "plea": {
            "type": "string",
            "description": "plea",
            "enum": [
              "UNFIT",
              "ABSTAIN",
              "GUILTY",
              "NOT_GUILTY",
              "NOT_ASKED"
            ]
          }
        },
        "additionalProperties": false,
        "description": "amend hearing outcome request"
      },
      "EvidenceRequest": {
        "required": [
          "evidence"
        ],
        "type": "object",
        "properties": {
          "evidence": {
            "type": "array",
            "description": "The details of all evidence",
            "items": {
              "$ref": "#/components/schemas/EvidenceRequestItem"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request to update the list of evidence for a draft adjudication"
      },
      "EvidenceRequestItem": {
        "required": [
          "code",
          "details"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The evidence code",
            "example": "PHOTO",
            "enum": [
              "PHOTO",
              "BODY_WORN_CAMERA",
              "CCTV",
              "BAGGED_AND_TAGGED",
              "OTHER"
            ]
          },
          "identifier": {
            "type": "string",
            "description": "Evidence identifier",
            "example": "Tag number or Camera number"
          },
          "details": {
            "type": "string",
            "description": "details of the evidence",
            "example": "ie description of photo"
          },
          "reporter": {
            "type": "string",
            "description": "optional reporter as per token, used when editing",
            "example": "A_USER"
          }
        },
        "additionalProperties": false,
        "description": "Details of Evidence"
      },
      "DamageRequestItem": {
        "required": [
          "code",
          "details"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The damage code",
            "example": "CLEANING",
            "enum": [
              "ELECTRICAL_REPAIR",
              "PLUMBING_REPAIR",
              "FURNITURE_OR_FABRIC_REPAIR",
              "LOCK_REPAIR",
              "REDECORATION",
              "CLEANING",
              "REPLACE_AN_ITEM"
            ]
          },
          "details": {
            "type": "string",
            "description": "details of the damage",
            "example": "the kettle was broken"
          },
          "reporter": {
            "type": "string",
            "description": "optional reporter as per token, used when editing",
            "example": "A_USER"
          }
        },
        "additionalProperties": false,
        "description": "Details of Damage"
      },
      "DamagesRequest": {
        "required": [
          "damages"
        ],
        "type": "object",
        "properties": {
          "damages": {
            "type": "array",
            "description": "The details of all damages the prisoner is accused of",
            "items": {
              "$ref": "#/components/schemas/DamageRequestItem"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request to update the list of damages for a draft adjudication"
      },
      "DlqMessage": {
        "required": [
          "body",
          "messageId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "messageId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RetryDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        },
        "additionalProperties": false
      },
      "PurgeQueueResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DamageDto": {
        "required": [
          "code",
          "details",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The damage code based on an enum for defined damages",
            "example": "CLEANING",
            "enum": [
              "ELECTRICAL_REPAIR",
              "PLUMBING_REPAIR",
              "FURNITURE_OR_FABRIC_REPAIR",
              "LOCK_REPAIR",
              "REDECORATION",
              "CLEANING",
              "REPLACE_AN_ITEM"
            ]
          },
          "details": {
            "type": "string",
            "description": "The details of the damage",
            "example": "the kettle was broken"
          },
          "reporter": {
            "type": "string",
            "description": "The username of the person who added this record",
            "example": "ABC12D"
          }
        },
        "additionalProperties": false,
        "description": "damages"
      },
      "DraftAdjudicationDto": {
        "required": [
          "gender",
          "id",
          "incidentDetails",
          "originatingAgencyId",
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Draft adjudication id",
            "format": "int64"
          },
          "chargeNumber": {
            "type": "string",
            "description": "The charge number for the reported adjudication, Will only be present if this adjudication has been submitted to Prison-API",
            "example": "4567123"
          },
          "prisonerNumber": {
            "type": "string",
            "description": "Prison number assigned to a prisoner",
            "example": "G2996UX"
          },
          "gender": {
            "type": "string",
            "description": "Gender applied for adjudication rules",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "incidentDetails": {
            "$ref": "#/components/schemas/IncidentDetailsDto"
          },
          "incidentRole": {
            "$ref": "#/components/schemas/IncidentRoleDto"
          },
          "offenceDetails": {
            "$ref": "#/components/schemas/OffenceDetailsDto"
          },
          "incidentStatement": {
            "$ref": "#/components/schemas/IncidentStatementDto"
          },
          "startedByUserId": {
            "type": "string",
            "description": "The id of the user who started the adjudication"
          },
          "isYouthOffender": {
            "type": "boolean",
            "description": "Is classified as a youth offender"
          },
          "damages": {
            "type": "array",
            "description": "Damages related to incident",
            "items": {
              "$ref": "#/components/schemas/DamageDto"
            }
          },
          "evidence": {
            "type": "array",
            "description": "Evidence related to incident",
            "items": {
              "$ref": "#/components/schemas/EvidenceDto"
            }
          },
          "witnesses": {
            "type": "array",
            "description": "Witnesses related to incident",
            "items": {
              "$ref": "#/components/schemas/WitnessDto"
            }
          },
          "damagesSaved": {
            "type": "boolean",
            "description": "has the damages end point been called"
          },
          "evidenceSaved": {
            "type": "boolean",
            "description": "has the evidence end point been called"
          },
          "witnessesSaved": {
            "type": "boolean",
            "description": "has the witnesses end point been called"
          },
          "overrideAgencyId": {
            "type": "string",
            "description": "optional override agency id"
          },
          "originatingAgencyId": {
            "type": "string",
            "description": "agency id where report was created"
          }
        },
        "additionalProperties": false,
        "description": "Draft adjudication details"
      },
      "DraftAdjudicationResponse": {
        "required": [
          "draftAdjudication"
        ],
        "type": "object",
        "properties": {
          "draftAdjudication": {
            "$ref": "#/components/schemas/DraftAdjudicationDto"
          }
        },
        "additionalProperties": false,
        "description": "Draft adjudication response"
      },
      "EvidenceDto": {
        "required": [
          "code",
          "details",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The evidence code based on an enum for defined evidence",
            "example": "PHOTO",
            "enum": [
              "PHOTO",
              "BODY_WORN_CAMERA",
              "CCTV",
              "BAGGED_AND_TAGGED",
              "OTHER"
            ]
          },
          "identifier": {
            "type": "string",
            "description": "Evidence identifier",
            "example": "Tag number or Camera number"
          },
          "details": {
            "type": "string",
            "description": "The details of the evidence",
            "example": "ie what does the photo show"
          },
          "reporter": {
            "type": "string",
            "description": "The username of the person who added this record",
            "example": "ABC12D"
          }
        },
        "additionalProperties": false,
        "description": "evidence"
      },
      "OffenceDetailsDto": {
        "required": [
          "offenceCode",
          "offenceRule"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "type": "integer",
            "description": "The offence code, This is the unique number relating to the type of offence they have been alleged to have committed",
            "format": "int32",
            "example": 3
          },
          "offenceRule": {
            "$ref": "#/components/schemas/OffenceRuleDetailsDto"
          },
          "victimPrisonersNumber": {
            "type": "string",
            "description": "The prison number of the victim involved in the incident, if relevant",
            "example": "G2996UX"
          },
          "victimStaffUsername": {
            "type": "string",
            "description": "The username of the member of staff who is a victim of the incident, if relevant",
            "example": "ABC12D"
          },
          "victimOtherPersonsName": {
            "type": "string",
            "description": "The name of the victim (who is not a member of staff or a prisoner) involved in the incident, if relevant",
            "example": "Bob Hope"
          }
        },
        "additionalProperties": false,
        "description": "Details of an offence"
      },
      "WitnessDto": {
        "required": [
          "code",
          "firstName",
          "lastName",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The witness code based on an enum for defined witness",
            "example": "PRISON_OFFICER",
            "enum": [
              "OFFICER",
              "STAFF",
              "OTHER_PERSON",
              "VICTIM",
              "PRISONER"
            ]
          },
          "firstName": {
            "type": "string",
            "description": "Witness first name",
            "example": "Fred"
          },
          "lastName": {
            "type": "string",
            "description": "Witness last name",
            "example": "Kruger"
          },
          "reporter": {
            "type": "string",
            "description": "The username of the person who added this record",
            "example": "ABC12D"
          }
        },
        "additionalProperties": false,
        "description": "witness"
      },
      "OffenceDetailsRequest": {
        "required": [
          "offenceDetails"
        ],
        "type": "object",
        "properties": {
          "offenceDetails": {
            "$ref": "#/components/schemas/OffenceDetailsRequestItem"
          }
        },
        "additionalProperties": false,
        "description": "Request to update the list of offence details for a draft adjudication"
      },
      "OffenceDetailsRequestItem": {
        "required": [
          "offenceCode"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "title": "This is the unique number relating to the type of offence they have been alleged to have committed",
            "type": "integer",
            "description": "The offence code",
            "format": "int32",
            "example": 3
          },
          "victimPrisonersNumber": {
            "type": "string",
            "description": "The prison number of the victim involved in the incident, if relevant",
            "example": "G2996UX"
          },
          "victimStaffUsername": {
            "type": "string",
            "description": "The username of the member of staff who is a victim of the incident, if relevant",
            "example": "ABC12D"
          },
          "victimOtherPersonsName": {
            "type": "string",
            "description": "The name of the victim (who is not a member of staff or a prisoner) involved in the incident, if relevant",
            "example": "Bob Hope"
          }
        },
        "additionalProperties": false,
        "description": "Details of an offence"
      },
      "IncidentStatementRequest": {
        "type": "object",
        "properties": {
          "statement": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "The statement regarding the incident"
          },
          "completed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request to add or edit the incident statement for a draft adjudication"
      },
      "EditIncidentRoleRequest": {
        "required": [
          "incidentRole",
          "removeExistingOffences"
        ],
        "type": "object",
        "properties": {
          "incidentRole": {
            "$ref": "#/components/schemas/IncidentRoleRequest"
          },
          "removeExistingOffences": {
            "type": "boolean",
            "description": "Whether to remove all existing offences"
          }
        },
        "additionalProperties": false,
        "description": "Request to edit incident role"
      },
      "IncidentRoleRequest": {
        "type": "object",
        "properties": {
          "roleCode": {
            "title": "If not set then it is assumed they committed the offence on their own",
            "type": "string",
            "description": "The incident role code",
            "example": "25a"
          }
        },
        "additionalProperties": false,
        "description": "Request to update the incident role"
      },
      "EditIncidentDetailsRequest": {
        "required": [
          "dateTimeOfIncident",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "The id of the location the incident took place",
            "format": "int64"
          },
          "dateTimeOfIncident": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the incident occurred",
            "example": "2021-07-05T10:35:17"
          },
          "dateTimeOfDiscovery": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Optional Date time if discovery date different to incident date",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "Request to edit the incident details"
      },
      "GenderRequest": {
        "required": [
          "gender"
        ],
        "type": "object",
        "properties": {
          "gender": {
            "title": "Gender of prisoner",
            "type": "string",
            "description": "The gender",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request to update the gender"
      },
      "IncidentRoleAssociatedPrisonerRequest": {
        "required": [
          "associatedPrisonersNumber"
        ],
        "type": "object",
        "properties": {
          "associatedPrisonersNumber": {
            "type": "string",
            "description": "The prison number of the other prisoner involved in the incident",
            "example": "G2996UX"
          },
          "associatedPrisonersName": {
            "title": "This only applies if the associated prisoner is from outside the establishment",
            "type": "string",
            "description": "The name of the other prisoner involved in the incident"
          }
        },
        "additionalProperties": false,
        "description": "Request to set the associated prisoner"
      },
      "ApplicableRulesRequest": {
        "required": [
          "isYouthOffenderRule",
          "removeExistingOffences"
        ],
        "type": "object",
        "properties": {
          "isYouthOffenderRule": {
            "type": "boolean",
            "description": "Indicates whether the applicable rules are for a young offender"
          },
          "removeExistingOffences": {
            "type": "boolean",
            "description": "Whether to remove all existing offences"
          }
        },
        "additionalProperties": false,
        "description": "Request to set applicable rules"
      },
      "ReferralDetailsRequest": {
        "required": [
          "details"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "details"
          }
        },
        "additionalProperties": false,
        "description": "Request to add a police referral, or refer gov request"
      },
      "QuashedRequest": {
        "required": [
          "details",
          "reason"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "details"
          },
          "reason": {
            "type": "string",
            "description": "reason",
            "enum": [
              "FLAWED_CASE",
              "JUDICIAL_REVIEW",
              "APPEAL_UPHELD",
              "OTHER"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request to quash charge"
      },
      "NotProceedRequest": {
        "required": [
          "details",
          "reason"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "description": "details"
          },
          "reason": {
            "type": "string",
            "description": "reason",
            "enum": [
              "ANOTHER_WAY",
              "RELEASED",
              "WITNESS_NOT_ATTEND",
              "UNFIT",
              "FLAWED",
              "EXPIRED_NOTICE",
              "EXPIRED_HEARING",
              "NOT_FAIR",
              "OTHER"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request to add a not proceed - via referral or without hearing"
      },
      "ReferralRequest": {
        "required": [
          "adjudicator",
          "code",
          "details"
        ],
        "type": "object",
        "properties": {
          "adjudicator": {
            "type": "string",
            "description": "the name of the adjudicator"
          },
          "code": {
            "type": "string",
            "description": "the outcome code",
            "enum": [
              "COMPLETE",
              "REFER_POLICE",
              "REFER_INAD",
              "ADJOURN",
              "NOMIS",
              "REFER_GOV"
            ]
          },
          "details": {
            "type": "string",
            "description": "details"
          }
        },
        "additionalProperties": false,
        "description": "Request to create a referral for latest hearing"
      },
      "AdjournRequest": {
        "required": [
          "adjudicator",
          "details",
          "plea",
          "reason"
        ],
        "type": "object",
        "properties": {
          "adjudicator": {
            "type": "string",
            "description": "the name of the adjudicator"
          },
          "reason": {
            "type": "string",
            "description": "the adjourn resaon",
            "enum": [
              "LEGAL_ADVICE",
              "LEGAL_REPRESENTATION",
              "RO_ATTEND",
              "HELP",
              "UNFIT",
              "WITNESS",
              "WITNESS_SUPPORT",
              "MCKENZIE",
              "EVIDENCE",
              "INVESTIGATION",
              "OTHER"
            ]
          },
          "details": {
            "type": "string",
            "description": "details"
          },
          "plea": {
            "type": "string",
            "description": "plea",
            "enum": [
              "UNFIT",
              "ABSTAIN",
              "GUILTY",
              "NOT_GUILTY",
              "NOT_ASKED"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request to create an adjourn for latest hearing"
      },
      "HearingCompletedNotProceedRequest": {
        "required": [
          "adjudicator",
          "details",
          "plea",
          "reason"
        ],
        "type": "object",
        "properties": {
          "adjudicator": {
            "type": "string",
            "description": "the name of the adjudicator"
          },
          "plea": {
            "type": "string",
            "description": "plea",
            "enum": [
              "UNFIT",
              "ABSTAIN",
              "GUILTY",
              "NOT_GUILTY",
              "NOT_ASKED"
            ]
          },
          "reason": {
            "type": "string",
            "description": "reason",
            "enum": [
              "ANOTHER_WAY",
              "RELEASED",
              "WITNESS_NOT_ATTEND",
              "UNFIT",
              "FLAWED",
              "EXPIRED_NOTICE",
              "EXPIRED_HEARING",
              "NOT_FAIR",
              "OTHER"
            ]
          },
          "details": {
            "type": "string",
            "description": "details"
          }
        },
        "additionalProperties": false,
        "description": "Request to add a not proceed - hearing completed"
      },
      "HearingCompletedDismissedRequest": {
        "required": [
          "adjudicator",
          "details",
          "plea"
        ],
        "type": "object",
        "properties": {
          "adjudicator": {
            "type": "string",
            "description": "the name of the adjudicator"
          },
          "plea": {
            "type": "string",
            "description": "plea",
            "enum": [
              "UNFIT",
              "ABSTAIN",
              "GUILTY",
              "NOT_GUILTY",
              "NOT_ASKED"
            ]
          },
          "details": {
            "type": "string",
            "description": "details"
          }
        },
        "additionalProperties": false,
        "description": "Request to add dismissed - hearing completed"
      },
      "HearingCompletedChargeProvedRequest": {
        "required": [
          "adjudicator",
          "plea"
        ],
        "type": "object",
        "properties": {
          "adjudicator": {
            "type": "string",
            "description": "the name of the adjudicator"
          },
          "plea": {
            "type": "string",
            "description": "plea",
            "enum": [
              "UNFIT",
              "ABSTAIN",
              "GUILTY",
              "NOT_GUILTY",
              "NOT_ASKED"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Request to add charge proved - hearing completed"
      },
      "AdjudicationMigrateDto": {
        "required": [
          "agencyId",
          "agencyIncidentId",
          "bookingId",
          "createdByUsername",
          "damages",
          "disIssued",
          "evidence",
          "hearings",
          "incidentDateTime",
          "locationId",
          "offence",
          "offenceSequence",
          "oicIncidentId",
          "prisoner",
          "punishments",
          "reportedDateTime",
          "reportingOfficer",
          "statement",
          "witnesses"
        ],
        "type": "object",
        "properties": {
          "agencyIncidentId": {
            "type": "integer",
            "description": "The agency incident id",
            "format": "int64"
          },
          "oicIncidentId": {
            "type": "integer",
            "description": "The oic incident id",
            "format": "int64"
          },
          "offenceSequence": {
            "type": "integer",
            "description": "the offence sequence",
            "format": "int64"
          },
          "bookingId": {
            "type": "integer",
            "description": "booking id on adjudication",
            "format": "int64"
          },
          "agencyId": {
            "type": "string",
            "description": "agency id on adjudication"
          },
          "incidentDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "the date and time of the incident",
            "example": "2021-07-05T10:35:17"
          },
          "reportedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "the reported dated time",
            "example": "2021-07-05T10:35:17"
          },
          "locationId": {
            "type": "integer",
            "description": "the internal location id of the incident",
            "format": "int64"
          },
          "statement": {
            "type": "string",
            "description": "the incident statement"
          },
          "reportingOfficer": {
            "$ref": "#/components/schemas/ReportingOfficer"
          },
          "createdByUsername": {
            "type": "string",
            "description": "created by username from nomis audit - to be mapped to reviewedBy"
          },
          "prisoner": {
            "$ref": "#/components/schemas/MigratePrisoner"
          },
          "offence": {
            "$ref": "#/components/schemas/MigrateOffence"
          },
          "witnesses": {
            "type": "array",
            "description": "witnesses",
            "items": {
              "$ref": "#/components/schemas/MigrateWitness"
            }
          },
          "damages": {
            "type": "array",
            "description": "damages / repairs",
            "items": {
              "$ref": "#/components/schemas/MigrateDamage"
            }
          },
          "evidence": {
            "type": "array",
            "description": "evidence",
            "items": {
              "$ref": "#/components/schemas/MigrateEvidence"
            }
          },
          "punishments": {
            "type": "array",
            "description": "punishments / sanctions",
            "items": {
              "$ref": "#/components/schemas/MigratePunishment"
            }
          },
          "hearings": {
            "type": "array",
            "description": "hearings",
            "items": {
              "$ref": "#/components/schemas/MigrateHearing"
            }
          },
          "disIssued": {
            "type": "array",
            "description": "dis issued",
            "items": {
              "$ref": "#/components/schemas/DisIssued"
            }
          }
        },
        "additionalProperties": false,
        "description": "Adjudication to migrate into service"
      },
      "DisIssued": {
        "required": [
          "dateTimeOfIssue",
          "issuingOfficer"
        ],
        "type": "object",
        "properties": {
          "issuingOfficer": {
            "type": "string"
          },
          "dateTimeOfIssue": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "dis issued"
      },
      "MigrateDamage": {
        "required": [
          "createdBy",
          "damageType",
          "dateAdded"
        ],
        "type": "object",
        "properties": {
          "damageType": {
            "type": "string",
            "description": "damage / repair type",
            "enum": [
              "ELECTRICAL_REPAIR",
              "PLUMBING_REPAIR",
              "FURNITURE_OR_FABRIC_REPAIR",
              "LOCK_REPAIR",
              "REDECORATION",
              "CLEANING",
              "REPLACE_AN_ITEM"
            ]
          },
          "details": {
            "type": "string",
            "description": "detail of damage - can be null as not enforced on nomis"
          },
          "createdBy": {
            "type": "string",
            "description": "created by username"
          },
          "dateAdded": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date added",
            "example": "2021-07-05T10:35:17"
          },
          "repairCost": {
            "type": "number",
            "description": "repair cost"
          }
        },
        "additionalProperties": false,
        "description": "damages recorded on adjudication - repair in nomis"
      },
      "MigrateEvidence": {
        "required": [
          "dateAdded",
          "details",
          "evidenceCode",
          "reporter"
        ],
        "type": "object",
        "properties": {
          "evidenceCode": {
            "type": "string",
            "description": "evidence code",
            "enum": [
              "PHOTO",
              "BODY_WORN_CAMERA",
              "CCTV",
              "BAGGED_AND_TAGGED",
              "OTHER"
            ]
          },
          "details": {
            "type": "string",
            "description": "evidence details / statement"
          },
          "reporter": {
            "type": "string",
            "description": "this is the reporter, we could use the investigator in this field, or createdBy user"
          },
          "dateAdded": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date added",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "evidence related to adjudication"
      },
      "MigrateHearing": {
        "required": [
          "hearingDateTime",
          "locationId",
          "oicHearingId",
          "oicHearingType"
        ],
        "type": "object",
        "properties": {
          "oicHearingId": {
            "type": "integer",
            "description": "oic hearing id",
            "format": "int64"
          },
          "oicHearingType": {
            "type": "string",
            "description": "oic hearing type",
            "enum": [
              "GOV_ADULT",
              "GOV_YOI",
              "INAD_YOI",
              "GOV",
              "INAD_ADULT"
            ]
          },
          "hearingDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date time of hearing",
            "example": "2021-07-05T10:35:17"
          },
          "locationId": {
            "type": "integer",
            "description": "hearing location id",
            "format": "int64"
          },
          "adjudicator": {
            "type": "string",
            "description": "adjudicator username - nomis has this on the hearing, so will accept at this level but for our service it goes on outcome"
          },
          "commentText": {
            "type": "string",
            "description": "comment text"
          },
          "hearingResult": {
            "$ref": "#/components/schemas/MigrateHearingResult"
          },
          "representative": {
            "type": "string",
            "description": "representative"
          }
        },
        "additionalProperties": false,
        "description": "hearing and optional result"
      },
      "MigrateHearingResult": {
        "required": [
          "createdBy",
          "createdDateTime",
          "finding",
          "plea"
        ],
        "type": "object",
        "properties": {
          "plea": {
            "type": "string",
            "description": "plea"
          },
          "finding": {
            "type": "string",
            "description": "finding"
          },
          "createdDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date time created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "created by"
          }
        },
        "additionalProperties": false,
        "description": "hearing result"
      },
      "MigrateOffence": {
        "required": [
          "offenceCode",
          "offenceDescription"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "type": "string",
            "description": "the nomis offence code"
          },
          "offenceDescription": {
            "type": "string",
            "description": "the nomis offence description, ie rule, paragraph as displayed in nomis"
          }
        },
        "additionalProperties": false,
        "description": "offence details"
      },
      "MigratePrisoner": {
        "required": [
          "gender",
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "prisoner number on adjudication"
          },
          "currentAgencyId": {
            "type": "string",
            "description": "agency the prisoner is currently residing, or null if no longer in prison"
          },
          "gender": {
            "type": "string",
            "description": "gender of the prisoner"
          }
        },
        "additionalProperties": false,
        "description": "prisoner details"
      },
      "MigratePunishment": {
        "required": [
          "effectiveDate",
          "sanctionCode",
          "sanctionSeq",
          "sanctionStatus"
        ],
        "type": "object",
        "properties": {
          "sanctionCode": {
            "type": "string",
            "description": "sanction code"
          },
          "sanctionStatus": {
            "type": "string",
            "description": "sanction status"
          },
          "sanctionSeq": {
            "type": "integer",
            "description": "sanction sequence",
            "format": "int64"
          },
          "effectiveDate": {
            "type": "string",
            "description": "effective date",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "description": "comment text"
          },
          "compensationAmount": {
            "type": "number",
            "description": "compensation amount"
          },
          "consecutiveChargeNumber": {
            "type": "string",
            "description": "consecutive charge number - for nomis this needs to be the oic_incident_id for the consecutiveOffenderBookId/consecutiveSanctionSeq. Note,  this will also need to include the chargeSequence, ie oic_incident_id-charge_seq"
          },
          "days": {
            "type": "integer",
            "description": "days applied - note we do not support months, should be converted to days if present TBC",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "punishment / sanction"
      },
      "MigrateWitness": {
        "required": [
          "createdBy",
          "dateAdded",
          "firstName",
          "lastName",
          "witnessType"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "first name"
          },
          "lastName": {
            "type": "string",
            "description": "last name"
          },
          "createdBy": {
            "type": "string",
            "description": "created by username"
          },
          "witnessType": {
            "type": "string",
            "description": "type of witness",
            "enum": [
              "OFFICER",
              "STAFF",
              "OTHER_PERSON",
              "VICTIM",
              "PRISONER"
            ]
          },
          "dateAdded": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "date added",
            "example": "2021-07-05T10:35:17"
          },
          "comment": {
            "type": "string",
            "description": "comment"
          },
          "username": {
            "type": "string",
            "description": "username"
          }
        },
        "additionalProperties": false,
        "description": "witnesses -these can include victims and associates"
      },
      "ReportingOfficer": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "reporting officer username"
          }
        },
        "additionalProperties": false,
        "description": "reporting officer"
      },
      "ChargeNumberMapping": {
        "required": [
          "chargeNumber",
          "offenceSequence",
          "oicIncidentId"
        ],
        "type": "object",
        "properties": {
          "chargeNumber": {
            "type": "string",
            "description": "charge number created"
          },
          "oicIncidentId": {
            "type": "integer",
            "description": "oic incident id",
            "format": "int64"
          },
          "offenceSequence": {
            "type": "integer",
            "description": "offence sequence",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "charge number mapping"
      },
      "HearingMapping": {
        "required": [
          "hearingId",
          "oicHearingId"
        ],
        "type": "object",
        "properties": {
          "hearingId": {
            "type": "integer",
            "description": "hearing id",
            "format": "int64"
          },
          "oicHearingId": {
            "type": "integer",
            "description": "oic hearing id",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "hearing mapping"
      },
      "MigrateResponse": {
        "required": [
          "chargeNumberMapping"
        ],
        "type": "object",
        "properties": {
          "chargeNumberMapping": {
            "$ref": "#/components/schemas/ChargeNumberMapping"
          },
          "hearingMappings": {
            "type": "array",
            "description": "hearing mappings",
            "items": {
              "$ref": "#/components/schemas/HearingMapping"
            }
          },
          "punishmentMappings": {
            "type": "array",
            "description": "punishment mappings",
            "items": {
              "$ref": "#/components/schemas/PunishmentMapping"
            }
          }
        },
        "additionalProperties": false,
        "description": "adjudication migrate response"
      },
      "PunishmentMapping": {
        "required": [
          "bookingId",
          "punishmentId"
        ],
        "type": "object",
        "properties": {
          "punishmentId": {
            "type": "integer",
            "description": "punishment id",
            "format": "int64"
          },
          "bookingId": {
            "type": "integer",
            "description": "offender book id",
            "format": "int64"
          },
          "sanctionSeq": {
            "type": "integer",
            "description": "sanction sequence - optional due to nomis records being deleted when created via adjudications",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "punishment mapping"
      },
      "NewAdjudicationRequest": {
        "required": [
          "agencyId",
          "dateTimeOfIncident",
          "gender",
          "locationId",
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prison number assigned to a prisoner",
            "example": "G2996UX"
          },
          "gender": {
            "type": "string",
            "description": "Gender applied for adjuducation rules",
            "example": "MALE",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "agencyId": {
            "type": "string",
            "description": "The agency id (or caseload) associated with this adjudication",
            "example": "MDI"
          },
          "overrideAgencyId": {
            "type": "string",
            "description": "The optional agencyId where the prisoner now resides",
            "example": "MDI"
          },
          "locationId": {
            "type": "integer",
            "description": "The id of the location the incident took place",
            "format": "int64"
          },
          "dateTimeOfIncident": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the incident occurred",
            "example": "2021-07-05T10:35:17"
          },
          "dateTimeOfDiscovery": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Optional Date time if discovery date different to incident date",
            "example": "2021-07-05T10:35:17"
          }
        },
        "additionalProperties": false,
        "description": "Request to create a new draft adjudication"
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "PageReportedAdjudicationDto": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportedAdjudicationDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "last": {
            "type": "boolean"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AgencyReportCountsDto": {
        "required": [
          "reviewTotal",
          "transferReviewTotal"
        ],
        "type": "object",
        "properties": {
          "reviewTotal": {
            "type": "integer",
            "description": "total reports to review for agency",
            "format": "int64"
          },
          "transferReviewTotal": {
            "type": "integer",
            "description": "total transferable reports to review for agency",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Agency Report counts DTO"
      },
      "SuspendedPunishmentDto": {
        "required": [
          "chargeNumber",
          "punishment"
        ],
        "type": "object",
        "properties": {
          "chargeNumber": {
            "type": "string",
            "description": "charge number punishment from"
          },
          "punishment": {
            "$ref": "#/components/schemas/PunishmentDto"
          }
        },
        "additionalProperties": false,
        "description": "suspended punishment dto"
      },
      "AdditionalDaysDto": {
        "required": [
          "chargeNumber",
          "chargeProvedDate",
          "punishment"
        ],
        "type": "object",
        "properties": {
          "chargeNumber": {
            "type": "string",
            "description": "charge number punishment from"
          },
          "chargeProvedDate": {
            "type": "string",
            "description": "date charge proved",
            "format": "date"
          },
          "punishment": {
            "$ref": "#/components/schemas/PunishmentDto"
          }
        },
        "additionalProperties": false,
        "description": "additional days to activate dto"
      },
      "HearingSummaryDto": {
        "required": [
          "chargeNumber",
          "dateTimeOfDiscovery",
          "dateTimeOfHearing",
          "oicHearingType",
          "prisonerNumber",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the hearing",
            "format": "int64"
          },
          "dateTimeOfHearing": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the hearing will take place",
            "example": "2021-07-05T10:35:17"
          },
          "dateTimeOfDiscovery": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the incident was discovered",
            "example": "2021-07-05T10:35:17"
          },
          "chargeNumber": {
            "type": "string",
            "description": "The charge number for the reported adjudication"
          },
          "prisonerNumber": {
            "type": "string",
            "description": "Prison number assigned to a prisoner",
            "example": "G2996UX"
          },
          "oicHearingType": {
            "type": "string",
            "description": "type of hearing",
            "enum": [
              "GOV_ADULT",
              "GOV_YOI",
              "INAD_YOI",
              "GOV",
              "INAD_ADULT"
            ]
          },
          "status": {
            "type": "string",
            "description": "reported adjudication status",
            "enum": [
              "ACCEPTED",
              "REJECTED",
              "AWAITING_REVIEW",
              "RETURNED",
              "UNSCHEDULED",
              "SCHEDULED",
              "REFER_POLICE",
              "REFER_INAD",
              "REFER_GOV",
              "PROSECUTION",
              "DISMISSED",
              "NOT_PROCEED",
              "ADJOURNED",
              "CHARGE_PROVED",
              "QUASHED"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Hearing Summary"
      },
      "HearingSummaryResponse": {
        "required": [
          "hearings"
        ],
        "type": "object",
        "properties": {
          "hearings": {
            "type": "array",
            "description": "The hearing summaries response",
            "items": {
              "$ref": "#/components/schemas/HearingSummaryDto"
            }
          }
        },
        "additionalProperties": false,
        "description": "All hearings response"
      },
      "IssuableAdjudicationsResponse": {
        "required": [
          "reportedAdjudications"
        ],
        "type": "object",
        "properties": {
          "reportedAdjudications": {
            "type": "array",
            "description": "Th reported adjudications response",
            "items": {
              "$ref": "#/components/schemas/ReportedAdjudicationDto"
            }
          }
        },
        "additionalProperties": false,
        "description": "All issuable adjudications response"
      },
      "GetDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount",
          "messagesReturnedCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messagesReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        },
        "additionalProperties": false
      },
      "PageDraftAdjudicationDto": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DraftAdjudicationDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "last": {
            "type": "boolean"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Hearing": {
        "type": "object",
        "properties": {
          "oicHearingId": {
            "type": "integer",
            "description": "OIC Hearing ID",
            "format": "int64",
            "example": 1985937
          },
          "hearingType": {
            "type": "string",
            "description": "Hearing Type",
            "example": "Governor's Hearing Adult"
          },
          "hearingTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Hearing Time",
            "example": "2021-07-05T10:35:17"
          },
          "establishment": {
            "type": "string",
            "description": "Establishment",
            "example": "Moorland (HMP & YOI)"
          },
          "location": {
            "type": "string",
            "description": "Hearing Location",
            "example": "Adjudication Room"
          },
          "heardByFirstName": {
            "type": "string",
            "description": "Adjudicator First name",
            "example": "Bob"
          },
          "heardByLastName": {
            "type": "string",
            "description": "Adjudicator Last name",
            "example": "Smith"
          },
          "otherRepresentatives": {
            "type": "string",
            "description": "Other Representatives",
            "example": "Councillor Adams"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "The defendant conducted themselves in a manner..."
          },
          "results": {
            "type": "array",
            "description": "Hearing Results",
            "items": {
              "$ref": "#/components/schemas/HearingResult"
            }
          }
        },
        "additionalProperties": false,
        "description": "An Adjudication Hearing"
      },
      "HearingResult": {
        "type": "object",
        "properties": {
          "oicOffenceCode": {
            "type": "string",
            "description": "OIC Offence Code",
            "example": "51:22"
          },
          "offenceType": {
            "type": "string",
            "description": "Offence Type",
            "example": "Prison Rule 51"
          },
          "offenceDescription": {
            "type": "string",
            "description": "Offence Description",
            "example": "Disobeys any lawful order"
          },
          "plea": {
            "type": "string",
            "description": "Plea",
            "example": "Guilty"
          },
          "finding": {
            "type": "string",
            "description": "Finding",
            "example": "Charge Proved"
          },
          "sanctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sanction"
            }
          }
        },
        "additionalProperties": false,
        "description": "A result from a hearing"
      },
      "IndividualAdjudication": {
        "required": [
          "adjudicationNumber"
        ],
        "type": "object",
        "properties": {
          "adjudicationNumber": {
            "type": "integer",
            "description": "Adjudication Number",
            "format": "int64",
            "example": 1234567
          },
          "incidentTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Incident Time",
            "example": "2021-07-05T10:35:17"
          },
          "establishment": {
            "type": "string",
            "description": "Establishment",
            "example": "Moorland (HMP & YOI)"
          },
          "interiorLocation": {
            "type": "string",
            "description": "Interior Location",
            "example": "Wing A"
          },
          "incidentDetails": {
            "type": "string",
            "description": "Incident Details",
            "example": "Whilst conducting an intelligence cell search..."
          },
          "reportNumber": {
            "type": "integer",
            "description": "Report Number",
            "format": "int64",
            "example": 1234567
          },
          "reportType": {
            "type": "string",
            "description": "Report Type",
            "example": "Governor's Report"
          },
          "reporterFirstName": {
            "type": "string",
            "description": "Reporter First Name",
            "example": "John"
          },
          "reporterLastName": {
            "type": "string",
            "description": "Reporter Last Name",
            "example": "Smith"
          },
          "reportTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Report Time",
            "example": "2021-07-05T10:35:17"
          },
          "hearings": {
            "type": "array",
            "description": "Hearings",
            "items": {
              "$ref": "#/components/schemas/Hearing"
            }
          }
        },
        "additionalProperties": false,
        "description": "Detail about an individual Adjudication"
      },
      "Sanction": {
        "type": "object",
        "properties": {
          "sanctionType": {
            "type": "string",
            "description": "Sanction Type",
            "example": "Stoppage of Earnings (amount)"
          },
          "sanctionDays": {
            "type": "integer",
            "description": "Sanction Days",
            "format": "int64",
            "example": 14
          },
          "sanctionMonths": {
            "type": "integer",
            "description": "Sanction Months",
            "format": "int64",
            "example": 1
          },
          "compensationAmount": {
            "type": "integer",
            "description": "Compensation Amount",
            "format": "int64",
            "example": 50
          },
          "effectiveDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Effective",
            "example": "2021-07-05T10:35:17"
          },
          "status": {
            "type": "string",
            "description": "Sanction status",
            "example": "Immediate"
          },
          "statusDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Status Date",
            "example": "2021-07-05T10:35:17"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "14x LOTV, 14x LOGYM, 14x LOC, 14x LOA, 14x LOE 50%, 14x CC"
          },
          "sanctionSeq": {
            "type": "integer",
            "description": "Sanction Seq",
            "format": "int64",
            "example": 1
          },
          "consecutiveSanctionSeq": {
            "type": "integer",
            "description": "Consecutive Sanction Seq",
            "format": "int64",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "An Adjudication Sanction"
      },
      "Adjudication": {
        "required": [
          "adjudicationNumber",
          "agencyIncidentId",
          "partySeq",
          "reportTime"
        ],
        "type": "object",
        "properties": {
          "adjudicationNumber": {
            "type": "integer",
            "description": "Adjudication Number",
            "format": "int64",
            "example": 1234567
          },
          "reportTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Report Time",
            "example": "2021-07-05T10:35:17"
          },
          "agencyIncidentId": {
            "type": "integer",
            "description": "Agency Incident Id",
            "format": "int64",
            "example": 1484302
          },
          "agencyId": {
            "type": "string",
            "description": "Agency Id",
            "example": "MDI"
          },
          "partySeq": {
            "type": "integer",
            "description": "Party Sequence",
            "format": "int64",
            "example": 1
          },
          "adjudicationCharges": {
            "type": "array",
            "description": "Charges made as part of the adjudication",
            "items": {
              "$ref": "#/components/schemas/AdjudicationCharge"
            }
          }
        },
        "additionalProperties": false,
        "description": "An overview of an adjudication"
      },
      "AdjudicationCharge": {
        "type": "object",
        "properties": {
          "oicChargeId": {
            "type": "string",
            "description": "Charge Id",
            "example": "1506763/1"
          },
          "offenceCode": {
            "type": "string",
            "description": "Offence Code",
            "example": "51:22"
          },
          "offenceDescription": {
            "type": "string",
            "description": "Offence Description",
            "example": "Disobeys any lawful order"
          },
          "findingCode": {
            "type": "string",
            "description": "Offence Finding Code",
            "example": "PROVED"
          }
        },
        "additionalProperties": false,
        "description": "A charge which was made as part of an adjudication"
      },
      "AdjudicationOffence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Offence Id",
            "example": "8"
          },
          "code": {
            "type": "string",
            "description": "Offence Code",
            "example": "51:7"
          },
          "description": {
            "type": "string",
            "description": "Offence Description",
            "example": "Escapes or absconds from prison or from legal custody"
          }
        },
        "additionalProperties": false,
        "description": "A complete list of the type of offences that this offender has had adjudications for"
      },
      "AdjudicationSearchResponse": {
        "required": [
          "agencies",
          "offences",
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/PageAdjudication"
          },
          "offences": {
            "type": "array",
            "description": "A complete list of the type of offences that this offender has had adjudications for",
            "items": {
              "$ref": "#/components/schemas/AdjudicationOffence"
            }
          },
          "agencies": {
            "type": "array",
            "description": "Complete list of agencies where this offender has had adjudications",
            "items": {
              "$ref": "#/components/schemas/Prison"
            }
          }
        },
        "additionalProperties": false
      },
      "PageAdjudication": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Adjudication"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "last": {
            "type": "boolean"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Search results"
      },
      "Prison": {
        "required": [
          "active",
          "agencyId",
          "description"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency identifier.",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Agency description.",
            "example": "Moorland (HMP & YOI)"
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the Agency is active",
            "example": true
          }
        },
        "additionalProperties": false,
        "description": "Complete list of agencies where this offender has had adjudications"
      },
      "AdjudicationSummary": {
        "required": [
          "adjudicationCount",
          "awards",
          "bookingId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Prisoner Booking Id",
            "format": "int64"
          },
          "adjudicationCount": {
            "type": "integer",
            "description": "Number of proven adjudications",
            "format": "int32"
          },
          "awards": {
            "type": "array",
            "description": "List of awards / sanctions",
            "items": {
              "$ref": "#/components/schemas/Award"
            }
          }
        },
        "additionalProperties": false,
        "description": "Adjudication Summary for a prisoner"
      },
      "Award": {
        "required": [
          "bookingId",
          "effectiveDate",
          "hearingId",
          "hearingSequence",
          "sanctionCode"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Id of booking",
            "format": "int64"
          },
          "sanctionCode": {
            "type": "string",
            "description": "Type of award"
          },
          "sanctionCodeDescription": {
            "type": "string",
            "description": "Award type description"
          },
          "months": {
            "type": "integer",
            "description": "Number of months duration",
            "format": "int32"
          },
          "days": {
            "type": "integer",
            "description": "Number of days duration",
            "format": "int32"
          },
          "limit": {
            "type": "number",
            "description": "Compensation amount"
          },
          "comment": {
            "type": "string",
            "description": "Optional details"
          },
          "effectiveDate": {
            "type": "string",
            "description": "Start of sanction",
            "format": "date"
          },
          "status": {
            "type": "string",
            "description": "Award status (ref domain OIC_SANCT_ST)"
          },
          "statusDescription": {
            "type": "string",
            "description": "Award status description"
          },
          "hearingId": {
            "type": "integer",
            "description": "Id of hearing",
            "format": "int64"
          },
          "hearingSequence": {
            "type": "integer",
            "description": "hearing record sequence number",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Adjudication award / sanction"
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
