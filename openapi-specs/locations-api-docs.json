{
  "openapi": "3.0.1",
  "info": {
    "title": "Locations Inside Prison API",
    "description": "API for viewing and managing locations inside a prison",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2024-05-28.1459.56d5540"
  },
  "servers": [
    {
      "url": "/",
      "description": "Current url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    },
    {
      "hmpps-auth": []
    }
  ],
  "tags": [
    {
      "name": "Migrate",
      "description": "Migrate NOMIS to Locations Inside Prison Service API endpoints."
    },
    {
      "name": "Sync",
      "description": "Sync NOMIS to Locations Inside Prison Service API endpoints."
    },
    {
      "name": "Locations",
      "description": "Returns location information"
    },
    {
      "name": "Constants",
      "description": "Returns location reference data."
    }
  ],
  "paths": {
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryDlq",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RetryDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "purgeQueue",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/update/temporary-deactivation": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update the details of the deactivation of a location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "updateDeactivateDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemporaryDeactivationLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns deactivated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/reactivate": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Re-activate a location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "reactivateLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          },
          {
            "name": "cascade-reactivation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/deactivate/temporary": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Temporarily deactivate a location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "temporarilyDeactivateLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemporaryDeactivationLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns deactivated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/deactivate/permanent": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Permanently deactivate a location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "permanentlyDeactivateLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermanentDeactivationLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns archived location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/convert-to-cell": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Makes a non-res cell location a cell",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "convertCellToNonResidentialLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertToCellRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns updated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/convert-cell-to-non-res-cell": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Converts a cell to a non res cell location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "convertCellToNonResidentialLocation_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertCellToNonResidentialLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns updated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/capacity": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Set the capacity of a cell",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "changeCapacity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Capacity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns cell location changes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sync/upsert": {
      "post": {
        "tags": [
          "Sync"
        ],
        "summary": "Upsert of a location",
        "description": "Requires role SYNC_LOCATIONS and write scope",
        "operationId": "upsertLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NomisSyncLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyLocation"
                }
              }
            }
          },
          "201": {
            "description": "Created location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyLocation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the SYNC_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/location": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "summary": "Migrate a location",
        "description": "Requires role MIGRATE_LOCATIONS and write scope",
        "operationId": "migrateLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NomisMigrateLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Migrated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyLocation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MIGRATE_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/residential": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Creates a residential location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "createResidentialLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResidentialLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns created location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Location already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/non-residential": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Creates a non-residential location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "createNonResidentialLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNonResidentialLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns created location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Location already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/keys": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Gets locations by their keys",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocationsByKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/create-wing": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Creates a residential wing with landings and cells",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "createWing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns created locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Location already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns location information for this ID",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocation_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          },
          {
            "name": "includeChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeHistory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Locations"
        ],
        "summary": "Partial update of a location",
        "description": "Requires role MAINTAIN_LOCATIONS and write scope",
        "operationId": "patchLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns updated location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Location already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sync/id/{id}": {
      "get": {
        "tags": [
          "Sync"
        ],
        "summary": "Returns location information for this ID in Legacy NOMIS format",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The location Id",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          },
          {
            "name": "includeHistory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns location in NOMIS format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegacyLocation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "getDlqMessages",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxMessages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get locations, filtered and paged",
        "description": "Requires VIEW_LOCATIONS role, max of 200 records per request",
        "operationId": "getLocations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "id,ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of locations are returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageLocation"
                }
              }
            }
          },
          "400": {
            "description": "When input parameters are not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/residential-summary/{prisonId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Return locations for this prison below the parent location, is not provided - top level (w.g. WINGS)",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocationForPrisonBelowParent",
        "parameters": [
          {
            "name": "prisonId",
            "in": "path",
            "description": "Prison Id",
            "required": true,
            "schema": {
              "maxLength": 5,
              "minLength": 3,
              "pattern": "^[A-Z]{2}I|ZZGHI$",
              "type": "string",
              "description": "Prison Id",
              "example": "MDI"
            },
            "example": "MDI"
          },
          {
            "name": "parentLocationId",
            "in": "query",
            "description": "Parent location ID",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Parent location ID",
              "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
            },
            "example": "de91dfa7-821f-4552-a427-bf2f32eafeb0"
          },
          {
            "name": "parentPathHierarchy",
            "in": "query",
            "description": "Parent location path hierarchy, can be a Wing code, or landing code",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Parent location path hierarchy, can be a Wing code, or landing code",
              "example": "A-1"
            },
            "example": "A-1"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns locations for this level",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResidentialSummary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Return locations for this prison",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocationForPrison",
        "parameters": [
          {
            "name": "prisonId",
            "in": "path",
            "description": "Prison Id",
            "required": true,
            "schema": {
              "maxLength": 5,
              "minLength": 3,
              "pattern": "^[A-Z]{2}I|ZZGHI$",
              "type": "string",
              "description": "Prison Id",
              "example": "MDI"
            },
            "example": "MDI"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonId}/non-residential-usage-type/{usageType}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Return non-residential locations by usage for this prison",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocationsByPrisonAndNonResidentialUsageType",
        "parameters": [
          {
            "name": "prisonId",
            "in": "path",
            "description": "Prison Id",
            "required": true,
            "schema": {
              "maxLength": 5,
              "minLength": 3,
              "pattern": "^[A-Z]{2}I|ZZGHI$",
              "type": "string",
              "description": "Prison Id",
              "example": "MDI"
            },
            "example": "MDI"
          },
          {
            "name": "usageType",
            "in": "path",
            "description": "Usage type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Usage type",
              "example": "APPOINTMENTS"
            },
            "example": "APPOINTMENTS"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns non-residential locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonId}/location-type/{locationType}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Return locations by their type for this prison",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocationsByPrisonAndLocationType",
        "parameters": [
          {
            "name": "prisonId",
            "in": "path",
            "description": "Prison Id",
            "required": true,
            "schema": {
              "maxLength": 5,
              "minLength": 3,
              "pattern": "^[A-Z]{2}I|ZZGHI$",
              "type": "string",
              "description": "Prison Id",
              "example": "MDI"
            },
            "example": "MDI"
          },
          {
            "name": "locationType",
            "in": "path",
            "description": "Location type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Location type",
              "example": "CELL"
            },
            "example": "CELL"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/prison/{prisonId}/archived": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Return archived locations for this prison",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getArchivedLocationForPrison",
        "parameters": [
          {
            "name": "prisonId",
            "in": "path",
            "description": "Prison Id",
            "required": true,
            "schema": {
              "maxLength": 5,
              "minLength": 3,
              "pattern": "^[A-Z]{2}I|ZZGHI$",
              "type": "string",
              "description": "Prison Id",
              "example": "MDI"
            },
            "example": "MDI"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns archived locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/key/{key}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns location information for this key",
        "description": "Requires role VIEW_LOCATIONS",
        "operationId": "getLocationByKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Location Key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Location Key",
              "example": "MDI-A-1-001"
            },
            "example": "MDI-A-1-001"
          },
          {
            "name": "includeChildren",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeHistory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_LOCATIONS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/used-for-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get used for type data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "getUsedForTypeConstants",
        "responses": {
          "200": {
            "description": "Returns used for type reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/specialist-cell-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get specialist cell type data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "getSpecialistCellTypeConstants",
        "responses": {
          "200": {
            "description": "Returns specialist cell reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/residential-housing-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get residential housing reference data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "locationAttributeConstants",
        "responses": {
          "200": {
            "description": "Returns location reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/residential-attribute-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get residential attribute reference data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "residentialAttributeTypeConstants",
        "responses": {
          "200": {
            "description": "Returns residential attribute reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CompoundConstant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/non-residential-usage-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get non-residential usage reference data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "nonResidentialUsageTypeConstants",
        "responses": {
          "200": {
            "description": "Returns location reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/location-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get location reference data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "locationConstants",
        "responses": {
          "200": {
            "description": "Returns location reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/deactivated-reason": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get deactivated reason reference data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "deactivedReasonsConstants",
        "responses": {
          "200": {
            "description": "Returns location reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/converted-cell-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get converted cell type data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "getConvertedCellType",
        "responses": {
          "200": {
            "description": "Returns converted cell reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/accommodation-type": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "Get accommodation type data",
        "description": "Requires the READ_LOCATION_REFERENCE_DATA role.",
        "operationId": "getAccommodationTypeConstants",
        "responses": {
          "200": {
            "description": "Returns accommodation reference data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Constant"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sync/delete/{id}": {
      "delete": {
        "tags": [
          "Sync"
        ],
        "summary": "Delete a location",
        "description": "Requires role SYNC_LOCATIONS and write scope",
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location UUID to remove",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Location UUID to remove",
              "example": "2475f250-434a-4257-afe7-b911f1773a4d"
            },
            "example": "2475f250-434a-4257-afe7-b911f1773a4d"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted location"
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the SYNC_LOCATIONS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DlqMessage": {
        "required": [
          "body",
          "messageId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "messageId": {
            "type": "string"
          }
        }
      },
      "RetryDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        }
      },
      "PurgeQueueResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "developerMessage",
          "status",
          "userMessage"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 500
          },
          "userMessage": {
            "type": "string",
            "description": "User message for the error",
            "example": "No location found for ID `de91dfa7-821f-4552-a427-bf2f32eafeb0`"
          },
          "developerMessage": {
            "type": "string",
            "description": "More detailed error message",
            "example": "[Details, sometimes a stack trace]"
          },
          "errorCode": {
            "type": "integer",
            "description": "When present, uniquely identifies the type of error making it easier for clients to discriminate without relying on error description or HTTP status code; see `uk.gov.justice.digital.hmpps.locationsinsideprison.resources.ErrorCode` enumeration in hmpps-locations-inside-prison-api",
            "format": "int32",
            "example": 101
          },
          "moreInfo": {
            "type": "string",
            "description": "More information about the error",
            "example": "[Rarely used, error-specific]"
          }
        },
        "description": "Error response"
      },
      "TemporaryDeactivationLocationRequest": {
        "required": [
          "deactivationReason"
        ],
        "type": "object",
        "properties": {
          "deactivationReason": {
            "type": "string",
            "description": "Reason for temporary deactivation",
            "example": "MOTHBALLED",
            "enum": [
              "REFURBISHMENT",
              "MAINTENANCE",
              "STAFF_SHORTAGE",
              "MOTHBALLED",
              "DAMAGED",
              "DAMP",
              "PEST",
              "SECURITY_SEALED",
              "OTHER"
            ]
          },
          "proposedReactivationDate": {
            "type": "string",
            "description": "Proposed re-activation date",
            "format": "date",
            "example": "2025-01-05"
          },
          "planetFmReference": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "Planet FM reference",
            "example": "23423TH/5"
          }
        },
        "description": "Request to temporarily deactivate a location"
      },
      "Capacity": {
        "required": [
          "maxCapacity",
          "workingCapacity"
        ],
        "type": "object",
        "properties": {
          "maxCapacity": {
            "maximum": 99,
            "type": "integer",
            "description": "Max capacity of the location",
            "format": "int32",
            "example": 2
          },
          "workingCapacity": {
            "maximum": 99,
            "type": "integer",
            "description": "Working capacity of the location",
            "format": "int32",
            "example": 2
          }
        },
        "description": "Capacity"
      },
      "Certification": {
        "required": [
          "capacityOfCertifiedCell",
          "certified"
        ],
        "type": "object",
        "properties": {
          "certified": {
            "type": "boolean",
            "description": "Indicates that this location is certified for use as a residential location",
            "example": true
          },
          "capacityOfCertifiedCell": {
            "type": "integer",
            "description": "Indicates the capacity of the certified location (cell)",
            "format": "int32",
            "example": 1
          }
        },
        "description": "Certification"
      },
      "ChangeHistory": {
        "required": [
          "amendedBy",
          "amendedDate",
          "attribute"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string",
            "description": "Location Attribute",
            "example": "Location Type"
          },
          "oldValue": {
            "type": "string",
            "description": "Previous value of this attribute",
            "example": "CELL"
          },
          "newValue": {
            "type": "string",
            "description": "New value of this attribute",
            "example": "WING"
          },
          "amendedBy": {
            "type": "string",
            "description": "User who made the change",
            "example": "user"
          },
          "amendedDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date the change was made",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Change History"
      },
      "Location": {
        "required": [
          "active",
          "code",
          "deactivatedByParent",
          "id",
          "isResidential",
          "key",
          "lastModifiedBy",
          "lastModifiedDate",
          "locationType",
          "pathHierarchy",
          "permanentlyInactive",
          "prisonId",
          "status",
          "topLevelId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Location Id",
            "format": "uuid",
            "example": "2475f250-434a-4257-afe7-b911f1773a4d"
          },
          "prisonId": {
            "type": "string",
            "description": "Prison ID",
            "example": "MDI"
          },
          "code": {
            "type": "string",
            "description": "Location Code",
            "example": "001"
          },
          "pathHierarchy": {
            "type": "string",
            "description": "Full path of the location within the prison",
            "example": "A-1-001"
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "CELL",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "localName": {
            "type": "string",
            "description": "Alternative description to display for location, (Not Cells)",
            "example": "Wing A"
          },
          "comments": {
            "type": "string",
            "description": "Additional comments that can be made about this location",
            "example": "Not to be used"
          },
          "permanentlyInactive": {
            "type": "boolean",
            "description": "Indicates if the location is permanently inactive",
            "example": false
          },
          "permanentlyInactiveReason": {
            "type": "string",
            "description": "Reason for permanently deactivating",
            "example": "Demolished"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "certification": {
            "$ref": "#/components/schemas/Certification"
          },
          "usage": {
            "type": "array",
            "description": "Location Usage",
            "items": {
              "$ref": "#/components/schemas/NonResidentialUsageDto"
            }
          },
          "accommodationTypes": {
            "type": "array",
            "description": "Accommodation Types",
            "items": {
              "type": "string",
              "description": "Accommodation Types",
              "enum": [
                "NORMAL_ACCOMMODATION",
                "HEALTHCARE_INPATIENTS",
                "CARE_AND_SEPARATION",
                "OTHER_NON_RESIDENTIAL"
              ]
            }
          },
          "specialistCellTypes": {
            "type": "array",
            "description": "Specialist Cell Types",
            "items": {
              "type": "string",
              "description": "Specialist Cell Types",
              "enum": [
                "BIOHAZARD_DIRTY_PROTEST",
                "CAT_A",
                "CONSTANT_SUPERVISION",
                "CSU",
                "DRY",
                "ESCAPE_LIST",
                "FIRE_RESISTANT",
                "FIXES_FURNITURE",
                "ISOLATION_DISEASES",
                "LIGATURE_RESISTANT",
                "LISTENER_CRISIS",
                "LOW_MOBILITY",
                "MEDICAL",
                "MOTHER_AND_BABY",
                "SOUND_RESISTANT",
                "UNFURNISHED",
                "WHEELCHAIR_ACCESSIBLE"
              ]
            }
          },
          "usedFor": {
            "type": "array",
            "description": "Usage For",
            "items": {
              "type": "string",
              "description": "Usage For",
              "enum": [
                "STANDARD_ACCOMMODATION",
                "PERSONALITY_DISORDER",
                "THERAPEUTIC_COMMUNITY",
                "PIPE",
                "SUB_MISUSE_DRUG_RECOVERY",
                "VULNERABLE_PRISONERS",
                "FIRST_NIGHT_CENTRE",
                "REMAND",
                "MOTHER_AND_BABY",
                "YOUNG_PERSONS",
                "HIGH_SECURITY",
                "CLOSE_SUPERVISION_CENTRE",
                "PATHWAY_TO_PROG",
                "IPP_LONG_TERM_SENTENCES"
              ]
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the location",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "NON_RESIDENTIAL"
            ]
          },
          "convertedCellType": {
            "type": "string",
            "description": "Convert Cell Type",
            "enum": [
              "OFFICE",
              "SHOWER",
              "STORE",
              "UTILITY_ROOM",
              "HOLDING_ROOM",
              "INTERVIEW_ROOM",
              "KITCHEN_SERVERY",
              "TREATMENT_ROOM",
              "STAFF_ROOM",
              "OTHER"
            ]
          },
          "otherConvertedCellType": {
            "type": "string",
            "description": "Convert Cell Type (Other)"
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the location is enabled",
            "example": true
          },
          "deactivatedByParent": {
            "type": "boolean",
            "description": "Indicates the location in inactive as a parent is deactivated",
            "example": false
          },
          "deactivatedDate": {
            "type": "string",
            "description": "Date the location was deactivated",
            "format": "date",
            "example": "2023-01-23"
          },
          "deactivatedReason": {
            "type": "string",
            "description": "Reason for deactivation",
            "example": "DAMAGED",
            "enum": [
              "REFURBISHMENT",
              "MAINTENANCE",
              "STAFF_SHORTAGE",
              "MOTHBALLED",
              "DAMAGED",
              "DAMP",
              "PEST",
              "SECURITY_SEALED",
              "OTHER"
            ]
          },
          "deactivatedBy": {
            "type": "string",
            "description": "Staff username who deactivated the location"
          },
          "proposedReactivationDate": {
            "type": "string",
            "description": "Proposed Date for location reactivation",
            "format": "date",
            "example": "2026-01-24"
          },
          "planetFmReference": {
            "type": "string",
            "description": "Planet FM Reference",
            "example": "2323/45M"
          },
          "topLevelId": {
            "type": "string",
            "description": "Top Level Location Id",
            "format": "uuid",
            "example": "57718979-573c-433a-9e51-2d83f887c11c"
          },
          "parentId": {
            "type": "string",
            "description": "Parent Location Id",
            "format": "uuid",
            "example": "57718979-573c-433a-9e51-2d83f887c11c"
          },
          "parentLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "inactiveCells": {
            "type": "integer",
            "description": "Number of inactive cells below this location",
            "format": "int32"
          },
          "childLocations": {
            "type": "array",
            "description": "Child Locations",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "changeHistory": {
            "type": "array",
            "description": "History of changes",
            "items": {
              "$ref": "#/components/schemas/ChangeHistory"
            }
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Staff username who last changed the location"
          },
          "lastModifiedDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time of the last change",
            "example": "2021-07-05T10:35:17"
          },
          "key": {
            "type": "string",
            "description": "Business Key for a location",
            "example": "MDI-A-1-001"
          },
          "isResidential": {
            "type": "boolean",
            "description": "Indicates if the location is a residential location",
            "example": true
          }
        },
        "description": "Location Information"
      },
      "NonResidentialUsageDto": {
        "required": [
          "sequence",
          "usageType"
        ],
        "type": "object",
        "properties": {
          "usageType": {
            "type": "string",
            "enum": [
              "APPOINTMENT",
              "VISIT",
              "MOVEMENT",
              "OCCURRENCE",
              "ADJUDICATION_HEARING",
              "PROGRAMMES_ACTIVITIES",
              "PROPERTY",
              "OTHER"
            ]
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Non Residential Usage"
      },
      "PermanentDeactivationLocationRequest": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Reason for permanent deactivation",
            "example": "Wing demolished"
          }
        },
        "description": "Request to permanently deactivate a location"
      },
      "ConvertToCellRequest": {
        "required": [
          "accommodationType",
          "maxCapacity",
          "workingCapacity"
        ],
        "type": "object",
        "properties": {
          "accommodationType": {
            "type": "string",
            "description": "Accommodation type of the location",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE_INPATIENTS",
              "CARE_AND_SEPARATION",
              "OTHER_NON_RESIDENTIAL"
            ]
          },
          "specialistCellType": {
            "type": "string",
            "description": "Specialist cell type",
            "example": "BIOHAZARD_DIRTY_PROTEST",
            "enum": [
              "BIOHAZARD_DIRTY_PROTEST",
              "CAT_A",
              "CONSTANT_SUPERVISION",
              "CSU",
              "DRY",
              "ESCAPE_LIST",
              "FIRE_RESISTANT",
              "FIXES_FURNITURE",
              "ISOLATION_DISEASES",
              "LIGATURE_RESISTANT",
              "LISTENER_CRISIS",
              "LOW_MOBILITY",
              "MEDICAL",
              "MOTHER_AND_BABY",
              "SOUND_RESISTANT",
              "UNFURNISHED",
              "WHEELCHAIR_ACCESSIBLE"
            ]
          },
          "maxCapacity": {
            "maximum": 99,
            "type": "integer",
            "description": "Max capacity",
            "format": "int32",
            "example": 2
          },
          "workingCapacity": {
            "maximum": 99,
            "type": "integer",
            "description": "Working capacity",
            "format": "int32",
            "example": 1
          },
          "usedForTypes": {
            "type": "array",
            "description": "Used For list",
            "example": "STANDARD_ACCOMMODATION, PERSONALITY_DISORDER",
            "items": {
              "type": "string",
              "description": "Used For list",
              "example": "STANDARD_ACCOMMODATION, PERSONALITY_DISORDER",
              "enum": [
                "STANDARD_ACCOMMODATION",
                "PERSONALITY_DISORDER",
                "THERAPEUTIC_COMMUNITY",
                "PIPE",
                "SUB_MISUSE_DRUG_RECOVERY",
                "VULNERABLE_PRISONERS",
                "FIRST_NIGHT_CENTRE",
                "REMAND",
                "MOTHER_AND_BABY",
                "YOUNG_PERSONS",
                "HIGH_SECURITY",
                "CLOSE_SUPERVISION_CENTRE",
                "PATHWAY_TO_PROG",
                "IPP_LONG_TERM_SENTENCES"
              ]
            }
          }
        },
        "description": "Request to convert a non-res location to a cell"
      },
      "ConvertCellToNonResidentialLocationRequest": {
        "required": [
          "convertedCellType"
        ],
        "type": "object",
        "properties": {
          "convertedCellType": {
            "type": "string",
            "description": "Cell type to convert to",
            "example": "SHOWER",
            "enum": [
              "OFFICE",
              "SHOWER",
              "STORE",
              "UTILITY_ROOM",
              "HOLDING_ROOM",
              "INTERVIEW_ROOM",
              "KITCHEN_SERVERY",
              "TREATMENT_ROOM",
              "STAFF_ROOM",
              "OTHER"
            ]
          },
          "otherConvertedCellType": {
            "type": "string",
            "description": "Other type of converted cell",
            "example": "Swimming pool"
          }
        },
        "description": "Request to convert a cell to a non-res location"
      },
      "NomisSyncLocationRequest": {
        "required": [
          "code",
          "isCell",
          "isDeactivated",
          "lastUpdatedBy",
          "locationType",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Location UUID, provided if already exists",
            "format": "uuid",
            "example": "2475f250-434a-4257-afe7-b911f1773a4d"
          },
          "prisonId": {
            "maxLength": 5,
            "minLength": 3,
            "pattern": "^[A-Z]{2}I|ZZGHI$",
            "type": "string",
            "description": "Prison ID where the location is situated",
            "example": "MDI"
          },
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the location",
            "example": "001"
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "CELL",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "localName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Alternative description to display for location",
            "example": "Wing A"
          },
          "comments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Additional comments that can be made about this location",
            "example": "Not to be used"
          },
          "orderWithinParentLocation": {
            "type": "integer",
            "description": "Sequence of locations within the current parent location",
            "format": "int32",
            "example": 1
          },
          "residentialHousingType": {
            "type": "string",
            "description": "If residential location, its type",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE",
              "HOLDING_CELL",
              "OTHER_USE",
              "RECEPTION",
              "SEGREGATION",
              "SPECIALIST_CELL"
            ]
          },
          "deactivationReason": {
            "type": "string",
            "description": "Reason for deactivation",
            "example": "DAMAGED",
            "enum": [
              "REFURBISHMENT",
              "LOCAL_WORK",
              "STAFF_SHORTAGE",
              "MOTHBALLED",
              "DAMAGED",
              "NEW_BUILDING",
              "CELL_RECLAIMS",
              "CHANGE_OF_USE",
              "CLOSURE",
              "OUT_OF_USE",
              "CELLS_RETURNING_TO_USE",
              "OTHER"
            ]
          },
          "proposedReactivationDate": {
            "type": "string",
            "description": "Proposed re-activation date",
            "format": "date",
            "example": "2025-01-05"
          },
          "deactivatedDate": {
            "type": "string",
            "description": "Date deactivation occurred",
            "format": "date",
            "example": "2023-01-05"
          },
          "parentLocationPath": {
            "type": "string",
            "description": "Path hierarchy of the parent (if one exists)",
            "example": "A-1"
          },
          "parentId": {
            "type": "string",
            "description": "Parent UUID of the parent location (if one exists)",
            "format": "uuid",
            "example": "2475f250-434a-4257-afe7-b911f1773a4e"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "certification": {
            "$ref": "#/components/schemas/Certification"
          },
          "attributes": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Attributes",
            "items": {
              "type": "string",
              "description": "Location Attributes",
              "enum": [
                "ANTI_BARRICADE_DOOR",
                "AUDITABLE_CELL_BELL",
                "FIXED_BED",
                "METAL_DOOR",
                "MOVABLE_BED",
                "PRIVACY_CURTAIN",
                "PRIVACY_SCREEN",
                "STANDARD_CELL_BELL",
                "SEPARATE_TOILET",
                "WOODEN_DOOR",
                "CAT_A_CELL",
                "DOUBLE_OCCUPANCY",
                "E_LIST_CELL",
                "GATED_CELL",
                "LISTENER_CELL",
                "LOCATE_FLAT",
                "MULTIPLE_OCCUPANCY",
                "NON_SMOKER_CELL",
                "OBSERVATION_CELL",
                "SAFE_CELL",
                "SINGLE_OCCUPANCY",
                "SPECIAL_CELL",
                "WHEELCHAIR_ACCESS",
                "UNCONVICTED_JUVENILES",
                "SENTENCED_JUVENILES",
                "UNCONVICTED_18_20",
                "SENTENCED_18_20",
                "UNCONVICTED_ADULTS",
                "SENTENCED_ADULTS",
                "VULNERABLE_PRISONER_UNIT",
                "SPECIAL_UNIT",
                "RESETTLEMENT_HOSTEL",
                "HEALTHCARE_CENTRE",
                "NATIONAL_RESOURCE_HOSPITAL",
                "OTHER_SPECIFIED",
                "REMAND_CENTRE",
                "LOCAL_PRISON",
                "CLOSED_PRISON",
                "OPEN_TRAINING",
                "HOSTEL",
                "CLOSED_YOUNG_OFFENDER",
                "OPEN_YOUNG_OFFENDER",
                "REMAND_UNDER_18",
                "SENTENCED_UNDER_18",
                "ECL_COMPONENT",
                "ADDITIONAL_SPECIAL_UNIT",
                "SECOND_CLOSED_TRAINER",
                "IMMIGRATION_DETAINEES",
                "CELL",
                "LANDING",
                "WING",
                "CAT_A",
                "CAT_A_EX",
                "CAT_A_HI",
                "CAT_B",
                "CAT_C",
                "CAT_D",
                "ELIGIBLE",
                "PAROLE_GRANTED",
                "INELIGIBLE",
                "YOI_CLOSED",
                "YOI_OPEN",
                "YOI_RESTRICTED",
                "YOI_SHORT_SENTENCE",
                "YOI_LONG_TERM_CLOSED",
                "UNCLASSIFIED",
                "UNCATEGORISED_SENTENCED_MALE",
                "LOW",
                "MEDIUM",
                "HIGH",
                "NOT_APPLICABLE",
                "PROV_A",
                "PENDING",
                "REF_REVIEW",
                "REFUSED_NO_REVIEW",
                "STANDARD",
                "FEMALE_RESTRICTED",
                "FEMALE_CLOSED",
                "FEMALE_SEMI",
                "FEMALE_OPEN",
                "UN_SENTENCED",
                "YES",
                "NO"
              ]
            }
          },
          "usage": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Usage",
            "items": {
              "$ref": "#/components/schemas/NonResidentialUsageDto"
            }
          },
          "createDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date location was created, if not provided then the current time will be used for a new location",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Last updated, if not provided then the current time will be used",
            "example": "2021-07-05T10:35:17"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "Username of the staff updating the location"
          },
          "isCell": {
            "type": "boolean"
          },
          "isDeactivated": {
            "type": "boolean"
          }
        },
        "description": "Request to upsert/sync a location from NOMIS to the Locations API"
      },
      "LegacyLocation": {
        "required": [
          "active",
          "code",
          "id",
          "key",
          "lastModifiedBy",
          "lastModifiedDate",
          "locationType",
          "pathHierarchy",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Location Id",
            "format": "uuid",
            "example": "2475f250-434a-4257-afe7-b911f1773a4d"
          },
          "prisonId": {
            "type": "string",
            "description": "Prison ID",
            "example": "MDI"
          },
          "code": {
            "type": "string",
            "description": "Location Code",
            "example": "001"
          },
          "pathHierarchy": {
            "type": "string",
            "description": "Full path of the location within the prison",
            "example": "A-1-001"
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "CELL",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "residentialHousingType": {
            "type": "string",
            "description": "If residential location, its type",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE",
              "HOLDING_CELL",
              "OTHER_USE",
              "RECEPTION",
              "SEGREGATION",
              "SPECIALIST_CELL"
            ]
          },
          "localName": {
            "type": "string",
            "description": "Alternative description to display for location, (Not Cells)",
            "example": "Wing A"
          },
          "comments": {
            "type": "string",
            "description": "Additional comments that can be made about this location",
            "example": "Not to be used"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "certification": {
            "$ref": "#/components/schemas/Certification"
          },
          "attributes": {
            "type": "array",
            "description": "Location Attributes",
            "items": {
              "type": "string",
              "description": "Location Attributes",
              "enum": [
                "ANTI_BARRICADE_DOOR",
                "AUDITABLE_CELL_BELL",
                "FIXED_BED",
                "METAL_DOOR",
                "MOVABLE_BED",
                "PRIVACY_CURTAIN",
                "PRIVACY_SCREEN",
                "STANDARD_CELL_BELL",
                "SEPARATE_TOILET",
                "WOODEN_DOOR",
                "CAT_A_CELL",
                "DOUBLE_OCCUPANCY",
                "E_LIST_CELL",
                "GATED_CELL",
                "LISTENER_CELL",
                "LOCATE_FLAT",
                "MULTIPLE_OCCUPANCY",
                "NON_SMOKER_CELL",
                "OBSERVATION_CELL",
                "SAFE_CELL",
                "SINGLE_OCCUPANCY",
                "SPECIAL_CELL",
                "WHEELCHAIR_ACCESS",
                "UNCONVICTED_JUVENILES",
                "SENTENCED_JUVENILES",
                "UNCONVICTED_18_20",
                "SENTENCED_18_20",
                "UNCONVICTED_ADULTS",
                "SENTENCED_ADULTS",
                "VULNERABLE_PRISONER_UNIT",
                "SPECIAL_UNIT",
                "RESETTLEMENT_HOSTEL",
                "HEALTHCARE_CENTRE",
                "NATIONAL_RESOURCE_HOSPITAL",
                "OTHER_SPECIFIED",
                "REMAND_CENTRE",
                "LOCAL_PRISON",
                "CLOSED_PRISON",
                "OPEN_TRAINING",
                "HOSTEL",
                "CLOSED_YOUNG_OFFENDER",
                "OPEN_YOUNG_OFFENDER",
                "REMAND_UNDER_18",
                "SENTENCED_UNDER_18",
                "ECL_COMPONENT",
                "ADDITIONAL_SPECIAL_UNIT",
                "SECOND_CLOSED_TRAINER",
                "IMMIGRATION_DETAINEES",
                "CELL",
                "LANDING",
                "WING",
                "CAT_A",
                "CAT_A_EX",
                "CAT_A_HI",
                "CAT_B",
                "CAT_C",
                "CAT_D",
                "ELIGIBLE",
                "PAROLE_GRANTED",
                "INELIGIBLE",
                "YOI_CLOSED",
                "YOI_OPEN",
                "YOI_RESTRICTED",
                "YOI_SHORT_SENTENCE",
                "YOI_LONG_TERM_CLOSED",
                "UNCLASSIFIED",
                "UNCATEGORISED_SENTENCED_MALE",
                "LOW",
                "MEDIUM",
                "HIGH",
                "NOT_APPLICABLE",
                "PROV_A",
                "PENDING",
                "REF_REVIEW",
                "REFUSED_NO_REVIEW",
                "STANDARD",
                "FEMALE_RESTRICTED",
                "FEMALE_CLOSED",
                "FEMALE_SEMI",
                "FEMALE_OPEN",
                "UN_SENTENCED",
                "YES",
                "NO"
              ]
            }
          },
          "usage": {
            "type": "array",
            "description": "Location Usage",
            "items": {
              "$ref": "#/components/schemas/NonResidentialUsageDto"
            }
          },
          "orderWithinParentLocation": {
            "type": "integer",
            "description": "Sequence of locations within the current parent location",
            "format": "int32",
            "example": 1
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the location is enabled",
            "example": true
          },
          "deactivatedDate": {
            "type": "string",
            "description": "Date the location was deactivated",
            "format": "date",
            "example": "2023-01-23"
          },
          "deactivatedReason": {
            "type": "string",
            "description": "Reason for deactivation",
            "example": "DAMAGED",
            "enum": [
              "REFURBISHMENT",
              "MAINTENANCE",
              "STAFF_SHORTAGE",
              "MOTHBALLED",
              "DAMAGED",
              "DAMP",
              "PEST",
              "SECURITY_SEALED",
              "OTHER"
            ]
          },
          "proposedReactivationDate": {
            "type": "string",
            "description": "Proposed Date for location reactivation",
            "format": "date",
            "example": "2026-01-24"
          },
          "parentId": {
            "type": "string",
            "description": "Parent Location Id",
            "format": "uuid",
            "example": "57718979-573c-433a-9e51-2d83f887c11c"
          },
          "changeHistory": {
            "type": "array",
            "description": "History of changes",
            "items": {
              "$ref": "#/components/schemas/ChangeHistory"
            }
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Staff username who last changed the location"
          },
          "lastModifiedDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time of the last change",
            "example": "2021-07-05T10:35:17"
          },
          "key": {
            "type": "string",
            "description": "Business Key for a location",
            "example": "MDI-A-1-001"
          }
        },
        "description": "Location Information - for NOMIS sync"
      },
      "NomisMigrateLocationRequest": {
        "required": [
          "code",
          "isCell",
          "isDeactivated",
          "lastUpdatedBy",
          "locationType",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "maxLength": 5,
            "minLength": 3,
            "pattern": "^[A-Z]{2}I|ZZGHI$",
            "type": "string",
            "description": "Prison ID where the location is situated",
            "example": "MDI"
          },
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the location",
            "example": "001"
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "CELL",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "localName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Alternative description to display for location",
            "example": "Wing A"
          },
          "comments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Additional comments that can be made about this location",
            "example": "Not to be used"
          },
          "orderWithinParentLocation": {
            "type": "integer",
            "description": "Sequence of locations within the current parent location",
            "format": "int32",
            "example": 1
          },
          "residentialHousingType": {
            "type": "string",
            "description": "If residential location, its type",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE",
              "HOLDING_CELL",
              "OTHER_USE",
              "RECEPTION",
              "SEGREGATION",
              "SPECIALIST_CELL"
            ]
          },
          "deactivationReason": {
            "type": "string",
            "description": "Reason for deactivation",
            "example": "DAMAGED",
            "enum": [
              "REFURBISHMENT",
              "LOCAL_WORK",
              "STAFF_SHORTAGE",
              "MOTHBALLED",
              "DAMAGED",
              "NEW_BUILDING",
              "CELL_RECLAIMS",
              "CHANGE_OF_USE",
              "CLOSURE",
              "OUT_OF_USE",
              "CELLS_RETURNING_TO_USE",
              "OTHER"
            ]
          },
          "proposedReactivationDate": {
            "type": "string",
            "description": "Proposed re-activation date",
            "format": "date",
            "example": "2025-01-05"
          },
          "deactivatedDate": {
            "type": "string",
            "description": "Date deactivation occurred",
            "format": "date",
            "example": "2023-01-05"
          },
          "parentLocationPath": {
            "type": "string",
            "description": "Path hierarchy of the parent (if one exists)",
            "example": "A-1"
          },
          "parentId": {
            "type": "string",
            "description": "Parent UUID of the parent location (if one exists)",
            "format": "uuid",
            "example": "2475f250-434a-4257-afe7-b911f1773a4e"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "certification": {
            "$ref": "#/components/schemas/Certification"
          },
          "attributes": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Attributes",
            "items": {
              "type": "string",
              "description": "Location Attributes",
              "enum": [
                "ANTI_BARRICADE_DOOR",
                "AUDITABLE_CELL_BELL",
                "FIXED_BED",
                "METAL_DOOR",
                "MOVABLE_BED",
                "PRIVACY_CURTAIN",
                "PRIVACY_SCREEN",
                "STANDARD_CELL_BELL",
                "SEPARATE_TOILET",
                "WOODEN_DOOR",
                "CAT_A_CELL",
                "DOUBLE_OCCUPANCY",
                "E_LIST_CELL",
                "GATED_CELL",
                "LISTENER_CELL",
                "LOCATE_FLAT",
                "MULTIPLE_OCCUPANCY",
                "NON_SMOKER_CELL",
                "OBSERVATION_CELL",
                "SAFE_CELL",
                "SINGLE_OCCUPANCY",
                "SPECIAL_CELL",
                "WHEELCHAIR_ACCESS",
                "UNCONVICTED_JUVENILES",
                "SENTENCED_JUVENILES",
                "UNCONVICTED_18_20",
                "SENTENCED_18_20",
                "UNCONVICTED_ADULTS",
                "SENTENCED_ADULTS",
                "VULNERABLE_PRISONER_UNIT",
                "SPECIAL_UNIT",
                "RESETTLEMENT_HOSTEL",
                "HEALTHCARE_CENTRE",
                "NATIONAL_RESOURCE_HOSPITAL",
                "OTHER_SPECIFIED",
                "REMAND_CENTRE",
                "LOCAL_PRISON",
                "CLOSED_PRISON",
                "OPEN_TRAINING",
                "HOSTEL",
                "CLOSED_YOUNG_OFFENDER",
                "OPEN_YOUNG_OFFENDER",
                "REMAND_UNDER_18",
                "SENTENCED_UNDER_18",
                "ECL_COMPONENT",
                "ADDITIONAL_SPECIAL_UNIT",
                "SECOND_CLOSED_TRAINER",
                "IMMIGRATION_DETAINEES",
                "CELL",
                "LANDING",
                "WING",
                "CAT_A",
                "CAT_A_EX",
                "CAT_A_HI",
                "CAT_B",
                "CAT_C",
                "CAT_D",
                "ELIGIBLE",
                "PAROLE_GRANTED",
                "INELIGIBLE",
                "YOI_CLOSED",
                "YOI_OPEN",
                "YOI_RESTRICTED",
                "YOI_SHORT_SENTENCE",
                "YOI_LONG_TERM_CLOSED",
                "UNCLASSIFIED",
                "UNCATEGORISED_SENTENCED_MALE",
                "LOW",
                "MEDIUM",
                "HIGH",
                "NOT_APPLICABLE",
                "PROV_A",
                "PENDING",
                "REF_REVIEW",
                "REFUSED_NO_REVIEW",
                "STANDARD",
                "FEMALE_RESTRICTED",
                "FEMALE_CLOSED",
                "FEMALE_SEMI",
                "FEMALE_OPEN",
                "UN_SENTENCED",
                "YES",
                "NO"
              ]
            }
          },
          "usage": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Usage",
            "items": {
              "$ref": "#/components/schemas/NonResidentialUsageDto"
            }
          },
          "createDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date location was created, if not provided then the current time will be used for a new location",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Last updated, if not provided then the current time will be used",
            "example": "2021-07-05T10:35:17"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "Username of the staff updating the location"
          },
          "history": {
            "type": "array",
            "description": "History of changes to the location",
            "items": {
              "$ref": "#/components/schemas/ChangeHistory"
            }
          },
          "isCell": {
            "type": "boolean"
          },
          "isDeactivated": {
            "type": "boolean"
          }
        },
        "description": "Request to migrate a location and it's history"
      },
      "CreateResidentialLocationRequest": {
        "required": [
          "accommodationType",
          "code",
          "isCell",
          "locationType",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "maxLength": 5,
            "minLength": 3,
            "pattern": "^[A-Z]{2}I|ZZGHI$",
            "type": "string",
            "description": "Prison ID where the location is situated",
            "example": "MDI"
          },
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the location",
            "example": "001"
          },
          "accommodationType": {
            "type": "string",
            "description": "Accommodation Type",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE_INPATIENTS",
              "CARE_AND_SEPARATION",
              "OTHER_NON_RESIDENTIAL"
            ]
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "CELL",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "localName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Alternative description to display for location",
            "example": "Wing A"
          },
          "parentId": {
            "type": "string",
            "description": "ID of parent location",
            "format": "uuid",
            "example": "c73e8ad1-191b-42b8-bfce-2550cc858dab"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "certified": {
            "type": "boolean",
            "description": "Certified status of the residential location",
            "default": false
          },
          "isCell": {
            "type": "boolean"
          }
        },
        "description": "Request to create a location"
      },
      "CreateNonResidentialLocationRequest": {
        "required": [
          "code",
          "isCell",
          "locationType",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "maxLength": 5,
            "minLength": 3,
            "pattern": "^[A-Z]{2}I|ZZGHI$",
            "type": "string",
            "description": "Prison ID where the location is situated",
            "example": "MDI"
          },
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the location",
            "example": "ADJ"
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "ADJUDICATION_ROOM",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "localName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Alternative description to display for location",
            "example": "Adj Room"
          },
          "parentId": {
            "type": "string",
            "description": "ID of parent location",
            "format": "uuid",
            "example": "c73e8ad1-191b-42b8-bfce-2550cc858dab"
          },
          "usage": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Usage",
            "items": {
              "$ref": "#/components/schemas/NonResidentialUsageDto"
            }
          },
          "isCell": {
            "type": "boolean"
          }
        },
        "description": "Request to create a non-residential location"
      },
      "CreateWingRequest": {
        "required": [
          "defaultCellCapacity",
          "numberOfCellsPerSection",
          "prisonId",
          "wingCode"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "maxLength": 5,
            "minLength": 3,
            "pattern": "^[A-Z]{2}I|ZZGHI$",
            "type": "string",
            "description": "Prison ID where the location is situated",
            "example": "MDI"
          },
          "wingCode": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Code assigned to a wing",
            "example": "B"
          },
          "wingDescription": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Alternative description to display for location",
            "example": "Wing A"
          },
          "numberOfLandings": {
            "maximum": 10,
            "type": "integer",
            "description": "Number of landings required",
            "format": "int32",
            "example": 3
          },
          "numberOfSpursPerLanding": {
            "maximum": 10,
            "type": "integer",
            "description": "Number of spurs required",
            "format": "int32",
            "example": 2
          },
          "numberOfCellsPerSection": {
            "maximum": 999,
            "type": "integer",
            "description": "Number of cells required in each section (wing,landing or spur)",
            "format": "int32",
            "example": 40
          },
          "defaultCellCapacity": {
            "maximum": 10,
            "type": "integer",
            "description": "Default Cell Capacity",
            "format": "int32",
            "example": 1,
            "default": 1
          }
        },
        "description": "Request to create a wing"
      },
      "PatchLocationRequest": {
        "required": [
          "code",
          "isCell",
          "locationType"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code of the location",
            "example": "001"
          },
          "locationType": {
            "type": "string",
            "description": "Location Type",
            "example": "CELL",
            "enum": [
              "WING",
              "SPUR",
              "LANDING",
              "CELL",
              "ROOM",
              "HOLDING_AREA",
              "MOVEMENT_AREA",
              "RESIDENTIAL_UNIT",
              "EXTERNAL_GROUNDS",
              "HOLDING_CELL",
              "MEDICAL",
              "GROUP",
              "OFFICE",
              "ADMINISTRATION_AREA",
              "BOOTH",
              "BOX",
              "RETURN_TO_UNIT",
              "CLASSROOM",
              "TRAINING_AREA",
              "TRAINING_ROOM",
              "EXERCISE_AREA",
              "AREA",
              "SPORTS",
              "WORKSHOP",
              "INSIDE_PARTY",
              "OUTSIDE_PARTY",
              "FAITH_AREA",
              "ADJUDICATION_ROOM",
              "APPOINTMENTS",
              "VISITS",
              "VIDEO_LINK",
              "ASSOCIATION",
              "INTERNAL_GROUNDS",
              "INTERVIEW",
              "LOCATION",
              "POSITION",
              "SHELF",
              "STORE",
              "TABLE"
            ]
          },
          "localName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Alternative description to display for location",
            "example": "Wing A"
          },
          "comments": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Additional comments that can be made about this location",
            "example": "Not to be used"
          },
          "orderWithinParentLocation": {
            "type": "integer",
            "description": "Sequence of locations within the current parent location",
            "format": "int32",
            "example": 1
          },
          "residentialHousingType": {
            "type": "string",
            "description": "If residential location, its type",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE",
              "HOLDING_CELL",
              "OTHER_USE",
              "RECEPTION",
              "SEGREGATION",
              "SPECIALIST_CELL"
            ]
          },
          "parentId": {
            "type": "string",
            "description": "ID of parent location",
            "format": "uuid",
            "example": "c73e8ad1-191b-42b8-bfce-2550cc858dab"
          },
          "attributes": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Attributes",
            "items": {
              "type": "string",
              "description": "Location Attributes",
              "enum": [
                "ANTI_BARRICADE_DOOR",
                "AUDITABLE_CELL_BELL",
                "FIXED_BED",
                "METAL_DOOR",
                "MOVABLE_BED",
                "PRIVACY_CURTAIN",
                "PRIVACY_SCREEN",
                "STANDARD_CELL_BELL",
                "SEPARATE_TOILET",
                "WOODEN_DOOR",
                "CAT_A_CELL",
                "DOUBLE_OCCUPANCY",
                "E_LIST_CELL",
                "GATED_CELL",
                "LISTENER_CELL",
                "LOCATE_FLAT",
                "MULTIPLE_OCCUPANCY",
                "NON_SMOKER_CELL",
                "OBSERVATION_CELL",
                "SAFE_CELL",
                "SINGLE_OCCUPANCY",
                "SPECIAL_CELL",
                "WHEELCHAIR_ACCESS",
                "UNCONVICTED_JUVENILES",
                "SENTENCED_JUVENILES",
                "UNCONVICTED_18_20",
                "SENTENCED_18_20",
                "UNCONVICTED_ADULTS",
                "SENTENCED_ADULTS",
                "VULNERABLE_PRISONER_UNIT",
                "SPECIAL_UNIT",
                "RESETTLEMENT_HOSTEL",
                "HEALTHCARE_CENTRE",
                "NATIONAL_RESOURCE_HOSPITAL",
                "OTHER_SPECIFIED",
                "REMAND_CENTRE",
                "LOCAL_PRISON",
                "CLOSED_PRISON",
                "OPEN_TRAINING",
                "HOSTEL",
                "CLOSED_YOUNG_OFFENDER",
                "OPEN_YOUNG_OFFENDER",
                "REMAND_UNDER_18",
                "SENTENCED_UNDER_18",
                "ECL_COMPONENT",
                "ADDITIONAL_SPECIAL_UNIT",
                "SECOND_CLOSED_TRAINER",
                "IMMIGRATION_DETAINEES",
                "CELL",
                "LANDING",
                "WING",
                "CAT_A",
                "CAT_A_EX",
                "CAT_A_HI",
                "CAT_B",
                "CAT_C",
                "CAT_D",
                "ELIGIBLE",
                "PAROLE_GRANTED",
                "INELIGIBLE",
                "YOI_CLOSED",
                "YOI_OPEN",
                "YOI_RESTRICTED",
                "YOI_SHORT_SENTENCE",
                "YOI_LONG_TERM_CLOSED",
                "UNCLASSIFIED",
                "UNCATEGORISED_SENTENCED_MALE",
                "LOW",
                "MEDIUM",
                "HIGH",
                "NOT_APPLICABLE",
                "PROV_A",
                "PENDING",
                "REF_REVIEW",
                "REFUSED_NO_REVIEW",
                "STANDARD",
                "FEMALE_RESTRICTED",
                "FEMALE_CLOSED",
                "FEMALE_SEMI",
                "FEMALE_OPEN",
                "UN_SENTENCED",
                "YES",
                "NO"
              ]
            }
          },
          "usage": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Usage",
            "items": {
              "$ref": "#/components/schemas/NonResidentialUsageDto"
            }
          },
          "accommodationType": {
            "type": "string",
            "description": "Accommodation Type",
            "example": "NORMAL_ACCOMMODATION",
            "enum": [
              "NORMAL_ACCOMMODATION",
              "HEALTHCARE_INPATIENTS",
              "CARE_AND_SEPARATION",
              "OTHER_NON_RESIDENTIAL"
            ]
          },
          "usedFor": {
            "uniqueItems": true,
            "type": "array",
            "description": "Used For Types",
            "items": {
              "type": "string",
              "description": "Used For Types",
              "enum": [
                "STANDARD_ACCOMMODATION",
                "PERSONALITY_DISORDER",
                "THERAPEUTIC_COMMUNITY",
                "PIPE",
                "SUB_MISUSE_DRUG_RECOVERY",
                "VULNERABLE_PRISONERS",
                "FIRST_NIGHT_CENTRE",
                "REMAND",
                "MOTHER_AND_BABY",
                "YOUNG_PERSONS",
                "HIGH_SECURITY",
                "CLOSE_SUPERVISION_CENTRE",
                "PATHWAY_TO_PROG",
                "IPP_LONG_TERM_SENTENCES"
              ]
            }
          },
          "specialistCellTypes": {
            "uniqueItems": true,
            "type": "array",
            "description": "Specialist Cell Types",
            "items": {
              "type": "string",
              "description": "Specialist Cell Types",
              "enum": [
                "BIOHAZARD_DIRTY_PROTEST",
                "CAT_A",
                "CONSTANT_SUPERVISION",
                "CSU",
                "DRY",
                "ESCAPE_LIST",
                "FIRE_RESISTANT",
                "FIXES_FURNITURE",
                "ISOLATION_DISEASES",
                "LIGATURE_RESISTANT",
                "LISTENER_CRISIS",
                "LOW_MOBILITY",
                "MEDICAL",
                "MOTHER_AND_BABY",
                "SOUND_RESISTANT",
                "UNFURNISHED",
                "WHEELCHAIR_ACCESSIBLE"
              ]
            }
          },
          "isCell": {
            "type": "boolean"
          }
        },
        "description": "Request to update a location"
      },
      "GetDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount",
          "messagesReturnedCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messagesReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        }
      },
      "PageLocation": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          },
          "paged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string"
          },
          "nullHandling": {
            "type": "string"
          },
          "ascending": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "ignoreCase": {
            "type": "boolean"
          }
        }
      },
      "PrisonSummary": {
        "required": [
          "maxCapacity",
          "signedOperationalCapacity",
          "workingCapacity"
        ],
        "type": "object",
        "properties": {
          "workingCapacity": {
            "type": "integer",
            "description": "Prison working capacity",
            "format": "int32"
          },
          "signedOperationalCapacity": {
            "type": "integer",
            "description": "Prison signed operational capacity",
            "format": "int32"
          },
          "maxCapacity": {
            "type": "integer",
            "description": "Prison max capacity",
            "format": "int32"
          }
        },
        "description": "Prison Summary Information"
      },
      "ResidentialSummary": {
        "required": [
          "subLocationName",
          "subLocations"
        ],
        "type": "object",
        "properties": {
          "prisonSummary": {
            "$ref": "#/components/schemas/PrisonSummary"
          },
          "subLocationName": {
            "type": "string",
            "description": "The description of the sub locations",
            "example": "Wings"
          },
          "parentLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "subLocations": {
            "type": "array",
            "description": "All residential locations under this parent",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "description": "Residential Summary"
      },
      "Constant": {
        "required": [
          "description",
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CompoundConstant": {
        "required": [
          "description",
          "key",
          "values"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Constant"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "hmpps-auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/authorize",
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          }
        },
        "openIdConnectUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/.well-known/openid-configuration"
      }
    }
  }
}
