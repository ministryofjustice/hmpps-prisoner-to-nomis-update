apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "app.fullname" . }}-report-allocations
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.cron.allocationReconReportSchedule }}"
  suspend: false
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 5
  startingDeadlineSeconds: 600
  successfulJobsHistoryLimit: 5
  jobTemplate:
    spec:
      # Tidy up all jobs after 4 days
      ttlSecondsAfterFinished: 345600
      template:
        spec:
          serviceAccountName: {{ index .Values "generic-service" "serviceAccountName" }}
          containers:
          - name: {{ include "generic-service.name" . }}
            securityContext:
            {{- toYaml .Values.securityContext | nindent 14 }}
            image: "{{ index .Values "generic-service" "image" "repository" }}:{{ index .Values "generic-service" "image" "tag" | default .Chart.AppVersion }}"
            imagePullPolicy: {{ index .Values "generic-service" "image" "pullPolicy" }}
            ports:
              - name: http
                containerPort: {{ index .Values "generic-service" "image" "port" }}
                protocol: TCP
            {{- include "deployment.envs" (index .Values "generic-service") | nindent 12 }}
              - name: BATCH_ENABLED
                value: "true"
              - name: BATCH_TYPE
                value: "ALLOCATION_RECON"
            {{- with .Values.envFrom }}
            envFrom:
              {{- toYaml . | nindent 12 }}
            {{- end }}
          restartPolicy: Never